[
  {
    "id": "44f6c8ad-d75c-4ae1-8209-aad1c0326928",
    "name": "AIMusicGeneratorBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["replicate"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "replicate",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.REPLICATE: 'replicate'>], Literal['api_key']]",
          "type": "object",
          "description": "The Replicate integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "prompt": {
          "advanced": false,
          "description": "A description of the music you want to generate",
          "placeholder": "e.g., 'An upbeat electronic dance track with heavy bass'",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "music_gen_model_version": {
          "enum": ["stereo-large", "melody-large", "large"],
          "title": "Model Version",
          "type": "string",
          "advanced": true,
          "default": "stereo-large",
          "description": "Model to use for generation",
          "secret": false
        },
        "duration": {
          "advanced": true,
          "default": 8,
          "description": "Duration of the generated audio in seconds",
          "secret": false,
          "title": "Duration",
          "type": "integer"
        },
        "temperature": {
          "advanced": true,
          "default": 1.0,
          "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity",
          "secret": false,
          "title": "Temperature",
          "type": "number"
        },
        "top_k": {
          "advanced": true,
          "default": 250,
          "description": "Reduces sampling to the k most likely tokens",
          "secret": false,
          "title": "Top K",
          "type": "integer"
        },
        "top_p": {
          "advanced": true,
          "default": 0.0,
          "description": "Reduces sampling to tokens with cumulative probability of p. When set to 0 (default), top_k sampling is used",
          "secret": false,
          "title": "Top P",
          "type": "number"
        },
        "classifier_free_guidance": {
          "advanced": true,
          "default": 3,
          "description": "Increases the influence of inputs on the output. Higher values produce lower-variance outputs that adhere more closely to inputs",
          "secret": false,
          "title": "Classifier Free Guidance",
          "type": "integer"
        },
        "output_format": {
          "enum": ["wav", "mp3"],
          "title": "Output Format",
          "type": "string",
          "advanced": true,
          "default": "wav",
          "description": "Output format for generated audio",
          "secret": false
        },
        "normalization_strategy": {
          "enum": ["loudness", "clip", "peak", "rms"],
          "title": "Normalization Strategy",
          "type": "string",
          "advanced": true,
          "default": "loudness",
          "description": "Strategy for normalizing audio",
          "secret": false
        }
      },
      "required": ["credentials", "prompt"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "URL of the generated audio file",
          "secret": false,
          "title": "Result",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the model run failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block generates music using Meta's MusicGen model on Replicate.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "361697fb-0c4f-4feb-aed3-8320c88c771b",
    "name": "AIShortformVideoCreatorBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["revid"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "revid",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.REVID: 'revid'>], Literal['api_key']]",
          "type": "object",
          "description": "The revid.ai integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "script": {
          "advanced": false,
          "description": "1. Use short and punctuated sentences\n\n2. Use linebreaks to create a new clip\n\n3. Text outside of brackets is spoken by the AI, and [text between brackets] will be used to guide the visual generation. For example, [close-up of a cat] will show a close-up of a cat.",
          "placeholder": "[close-up of a cat] Meow!",
          "secret": false,
          "title": "Script",
          "type": "string"
        },
        "ratio": {
          "advanced": true,
          "default": "9 / 16",
          "description": "Aspect ratio of the video",
          "secret": false,
          "title": "Ratio",
          "type": "string"
        },
        "resolution": {
          "advanced": true,
          "default": "720p",
          "description": "Resolution of the video",
          "secret": false,
          "title": "Resolution",
          "type": "string"
        },
        "frame_rate": {
          "advanced": true,
          "default": 60,
          "description": "Frame rate of the video",
          "secret": false,
          "title": "Frame Rate",
          "type": "integer"
        },
        "generation_preset": {
          "enum": [
            "Default",
            "Anime",
            "Realist",
            "Illustration",
            "Sketch Color",
            "Sketch B&W",
            "Pixar",
            "Japanese Ink",
            "3D Render",
            "Lego",
            "Sci-Fi",
            "Retro Cartoon",
            "Pixel Art",
            "Creative",
            "Photography",
            "Raytraced",
            "Environment",
            "Fantasy",
            "Anime Realism",
            "Movie",
            "Stylized Illustration",
            "Manga"
          ],
          "title": "GenerationPreset",
          "type": "string",
          "advanced": true,
          "default": "Default",
          "description": "Generation preset for visual style - only effects AI generated visuals",
          "placeholder": "Default",
          "secret": false
        },
        "background_music": {
          "enum": [
            "Observer",
            "Futuristic Beat",
            "Science Documentary",
            "Hotline",
            "Bladerunner 2049",
            "A Future",
            "Elysian Embers",
            "Inspiring Cinematic",
            "Bladerunner Remix",
            "Izzamuzzic",
            "Nas",
            "Paris - Else",
            "Snowfall",
            "Burlesque",
            "Corny Candy",
            "Highway Nocturne",
            "I Don't Think So",
            "Losing Your Marbles",
            "Refresher",
            "Tourist",
            "Twin Tyches"
          ],
          "title": "AudioTrack",
          "type": "string",
          "advanced": true,
          "default": "Highway Nocturne",
          "description": "Background music track",
          "placeholder": "Highway Nocturne",
          "secret": false
        },
        "voice": {
          "enum": ["Lily", "Daniel", "Brian", "Jessica", "Charlotte", "Callum"],
          "title": "Voice",
          "type": "string",
          "advanced": true,
          "default": "Lily",
          "description": "AI voice to use for narration",
          "placeholder": "Lily",
          "secret": false
        },
        "video_style": {
          "enum": ["stockVideo", "movingImage", "aiVideo"],
          "title": "VisualMediaType",
          "type": "string",
          "advanced": true,
          "default": "stockVideo",
          "description": "Type of visual media to use for the video",
          "placeholder": "stockVideo",
          "secret": false
        }
      },
      "required": ["credentials", "script"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_url": {
          "advanced": false,
          "description": "The URL of the created video",
          "secret": false,
          "title": "Video Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["video_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a shortform video using revid.ai",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      },
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6ab085e2-20b3-4055-bc3e-08036e01eca6",
    "name": "IdeogramModelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["ideogram"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "ideogram",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.IDEOGRAM: 'ideogram'>], Literal['api_key']]",
          "type": "object",
          "description": "The Ideogram integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "prompt": {
          "advanced": false,
          "description": "Text prompt for image generation",
          "placeholder": "e.g., 'A futuristic cityscape at sunset'",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "ideogram_model_name": {
          "enum": ["V_2", "V_1", "V_1_TURBO", "V_2_TURBO"],
          "title": "Image Generation Model",
          "type": "string",
          "advanced": false,
          "default": "V_2",
          "description": "The name of the Image Generation Model, e.g., V_2",
          "secret": false
        },
        "aspect_ratio": {
          "enum": [
            "ASPECT_10_16",
            "ASPECT_16_10",
            "ASPECT_9_16",
            "ASPECT_16_9",
            "ASPECT_3_2",
            "ASPECT_2_3",
            "ASPECT_4_3",
            "ASPECT_3_4",
            "ASPECT_1_1",
            "ASPECT_1_3",
            "ASPECT_3_1"
          ],
          "title": "Aspect Ratio",
          "type": "string",
          "advanced": false,
          "default": "ASPECT_1_1",
          "description": "Aspect ratio for the generated image",
          "secret": false
        },
        "upscale": {
          "enum": ["AI Upscale", "No Upscale"],
          "title": "Upscale Image",
          "type": "string",
          "advanced": false,
          "default": "No Upscale",
          "description": "Upscale the generated image",
          "secret": false
        },
        "magic_prompt_option": {
          "enum": ["AUTO", "ON", "OFF"],
          "title": "Magic Prompt Option",
          "type": "string",
          "advanced": true,
          "default": "AUTO",
          "description": "Whether to use MagicPrompt for enhancing the request",
          "secret": false
        },
        "seed": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Random seed. Set for reproducible generation",
          "secret": false,
          "title": "Seed"
        },
        "style_type": {
          "enum": [
            "AUTO",
            "GENERAL",
            "REALISTIC",
            "DESIGN",
            "RENDER_3D",
            "ANIME"
          ],
          "title": "Style Type",
          "type": "string",
          "advanced": true,
          "default": "AUTO",
          "description": "Style type to apply, applicable for V_2 and above",
          "secret": false
        },
        "negative_prompt": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Description of what to exclude from the image",
          "secret": false,
          "title": "Negative Prompt"
        },
        "color_palette_name": {
          "enum": [
            "NONE",
            "EMBER",
            "FRESH",
            "JUNGLE",
            "MAGIC",
            "MELON",
            "MOSAIC",
            "PASTEL",
            "ULTRAMARINE"
          ],
          "title": "Color Palette Preset",
          "type": "string",
          "advanced": true,
          "default": "NONE",
          "description": "Color palette preset name, choose 'None' to skip",
          "secret": false
        },
        "custom_color_palette": {
          "advanced": true,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Only available for model version V_2 or V_2_TURBO. Provide one or more color hex codes (e.g., ['#000030', '#1C0C47', '#9900FF', '#4285F4', '#FFFFFF']) to define a custom color palette. Only used if 'color_palette_name' is 'NONE'.",
          "secret": false,
          "title": "Custom Color Palette"
        }
      },
      "required": ["credentials", "prompt"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Generated image URL",
          "secret": false,
          "title": "Result",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the model run failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block runs Ideogram models with both simple and advanced settings.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      },
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7c56b3ab-62e7-43a2-a2dc-4ec4245660b6",
    "name": "JinaEmbeddingBlock",
    "inputSchema": {
      "properties": {
        "texts": {
          "advanced": false,
          "description": "List of texts to embed",
          "items": {},
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "credentials": {
          "credentials_provider": ["jina"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "jina",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.JINA: 'jina'>], Literal['api_key']]",
          "type": "object",
          "description": "The Jina integration can be used with an API Key."
        },
        "model": {
          "advanced": true,
          "default": "jina-embeddings-v2-base-en",
          "description": "Jina embedding model to use",
          "secret": false,
          "title": "Model",
          "type": "string"
        }
      },
      "required": ["texts", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "embeddings": {
          "advanced": false,
          "description": "List of embeddings",
          "items": {},
          "secret": false,
          "title": "Embeddings",
          "type": "array"
        }
      },
      "required": ["embeddings"],
      "title": "Output",
      "type": "object"
    },
    "description": "Generates embeddings using Jina AI",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f5b0f5d0-1862-4d61-94be-3ad0fa772760",
    "name": "GetWikipediaSummaryBlock",
    "inputSchema": {
      "properties": {
        "topic": {
          "advanced": false,
          "description": "The topic to fetch the summary for",
          "secret": false,
          "title": "Topic",
          "type": "string"
        }
      },
      "required": ["topic"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "summary": {
          "advanced": false,
          "description": "The summary of the given topic",
          "secret": false,
          "title": "Summary",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the summary cannot be retrieved",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["summary", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block fetches the summary of a given topic from Wikipedia.",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f",
    "name": "GetWeatherInformationBlock",
    "inputSchema": {
      "properties": {
        "location": {
          "advanced": false,
          "description": "Location to get weather information for",
          "secret": false,
          "title": "Location",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["openweathermap"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "openweathermap",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.OPENWEATHERMAP: 'openweathermap'>], Literal['api_key']]",
          "type": "object",
          "description": "The OpenWeatherMap integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "use_celsius": {
          "advanced": true,
          "default": true,
          "description": "Whether to use Celsius or Fahrenheit for temperature",
          "secret": false,
          "title": "Use Celsius",
          "type": "boolean"
        }
      },
      "required": ["location", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "temperature": {
          "advanced": false,
          "description": "Temperature in the specified location",
          "secret": false,
          "title": "Temperature",
          "type": "string"
        },
        "humidity": {
          "advanced": false,
          "description": "Humidity in the specified location",
          "secret": false,
          "title": "Humidity",
          "type": "string"
        },
        "condition": {
          "advanced": false,
          "description": "Weather condition in the specified location",
          "secret": false,
          "title": "Condition",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the weather information cannot be retrieved",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["temperature", "humidity", "condition", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Retrieves weather information for a specified location using OpenWeatherMap API.",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "87840993-2053-44b7-8da4-187ad4ee518c",
    "name": "SearchTheWebBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["jina"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "jina",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.JINA: 'jina'>], Literal['api_key']]",
          "type": "object",
          "description": "The Jina integration can be used with an API Key."
        },
        "query": {
          "advanced": false,
          "description": "The search query to search the web for",
          "secret": false,
          "title": "Query",
          "type": "string"
        }
      },
      "required": ["credentials", "query"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "results": {
          "advanced": false,
          "description": "The search results including content from top 5 URLs",
          "secret": false,
          "title": "Results",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the search fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["results", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block searches the internet for the given search query.",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "436c3984-57fd-4b85-8e9a-459b356883bd",
    "name": "ExtractWebsiteContentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["jina"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "jina",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.JINA: 'jina'>], Literal['api_key']]",
          "type": "object",
          "description": "The Jina integration can be used with an API Key."
        },
        "url": {
          "advanced": false,
          "description": "The URL to scrape the content from",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "raw_content": {
          "advanced": true,
          "default": false,
          "description": "Whether to do a raw scrape of the content or use Jina-ai Reader to scrape the content",
          "secret": false,
          "title": "Raw Content",
          "type": "boolean"
        }
      },
      "required": ["credentials", "url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "content": {
          "advanced": false,
          "description": "The scraped content from the given URL",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the content cannot be retrieved",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["content", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block scrapes the content from the given web URL.",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "90f8c45e-e983-4644-aa0b-b4ebe2f531bc",
    "name": "ReplicateFluxAdvancedModelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["replicate"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "replicate",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.REPLICATE: 'replicate'>], Literal['api_key']]",
          "type": "object",
          "description": "The Replicate integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "prompt": {
          "advanced": false,
          "description": "Text prompt for image generation",
          "placeholder": "e.g., 'A futuristic cityscape at sunset'",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "replicate_model_name": {
          "enum": ["Flux Schnell", "Flux Pro", "Flux Pro 1.1"],
          "title": "Image Generation Model",
          "type": "string",
          "advanced": false,
          "default": "Flux Schnell",
          "description": "The name of the Image Generation Model, i.e Flux Schnell",
          "secret": false
        },
        "seed": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Random seed. Set for reproducible generation",
          "secret": false,
          "title": "Seed"
        },
        "steps": {
          "advanced": true,
          "default": 25,
          "description": "Number of diffusion steps",
          "secret": false,
          "title": "Steps",
          "type": "integer"
        },
        "guidance": {
          "advanced": true,
          "default": 3,
          "description": "Controls the balance between adherence to the text prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality.",
          "secret": false,
          "title": "Guidance",
          "type": "number"
        },
        "interval": {
          "advanced": true,
          "default": 2,
          "description": "Interval is a setting that increases the variance in possible outputs. Setting this value low will ensure strong prompt following with more consistent outputs.",
          "secret": false,
          "title": "Interval",
          "type": "number"
        },
        "aspect_ratio": {
          "advanced": true,
          "default": "1:1",
          "description": "Aspect ratio for the generated image",
          "placeholder": "Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16",
          "secret": false,
          "title": "Aspect Ratio",
          "type": "string"
        },
        "output_format": {
          "enum": ["webp", "jpg", "png"],
          "title": "Output Format",
          "type": "string",
          "advanced": true,
          "default": "webp",
          "description": "File format of the output image",
          "secret": false
        },
        "output_quality": {
          "advanced": true,
          "default": 80,
          "description": "Quality when saving the output images, from 0 to 100. Not relevant for .png outputs",
          "secret": false,
          "title": "Output Quality",
          "type": "integer"
        },
        "safety_tolerance": {
          "advanced": true,
          "default": 2,
          "description": "Safety tolerance, 1 is most strict and 5 is most permissive",
          "secret": false,
          "title": "Safety Tolerance",
          "type": "integer"
        }
      },
      "required": ["credentials", "prompt"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Generated output",
          "secret": false,
          "title": "Result",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the model run failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block runs Flux models on Replicate with advanced settings.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      },
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c0a8e994-ebf1-4a9c-a4d8-89d09c86741b",
    "name": "AgentInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": true,
          "default": null,
          "description": "The value to be passed as input.",
          "secret": false,
          "title": "Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "The value passed as input.",
          "secret": false,
          "title": "Result"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Base block for user inputs.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "363ae599-353e-4804-937e-b2ee3cef3da4",
    "name": "AgentOutputBlock",
    "inputSchema": {
      "properties": {
        "value": {
          "advanced": false,
          "default": null,
          "description": "The value to be recorded as output.",
          "secret": false,
          "title": "Value"
        },
        "name": {
          "advanced": false,
          "description": "The name of the output.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the output.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the output.",
          "secret": false,
          "title": "Description"
        },
        "format": {
          "advanced": true,
          "default": "",
          "description": "The format string to be used to format the recorded_value. Use Jinja2 syntax.",
          "secret": false,
          "title": "Format",
          "type": "string"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to treat the output as advanced.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the output should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "The value recorded as output.",
          "secret": false,
          "title": "Output"
        },
        "name": {
          "advanced": false,
          "description": "The name of the value recorded as output.",
          "secret": false,
          "title": "Name"
        }
      },
      "required": ["output", "name"],
      "title": "Output",
      "type": "object"
    },
    "description": "Stores the output of the graph for users to see.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "OUTPUT",
        "description": "Block that interacts with output of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Output"
  },
  {
    "id": "e189baac-8c20-45a1-94a7-55177ea42565",
    "name": "AgentExecutorBlock",
    "inputSchema": {
      "properties": {
        "user_id": {
          "advanced": false,
          "description": "User ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "graph_id": {
          "advanced": false,
          "description": "Graph ID",
          "secret": false,
          "title": "Graph Id",
          "type": "string"
        },
        "graph_version": {
          "advanced": false,
          "description": "Graph Version",
          "secret": false,
          "title": "Graph Version",
          "type": "integer"
        },
        "data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Input data for the graph",
          "secret": false,
          "title": "Data",
          "type": "object"
        },
        "input_schema": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Input schema for the graph",
          "secret": false,
          "title": "Input Schema",
          "type": "object"
        },
        "output_schema": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Output schema for the graph",
          "secret": false,
          "title": "Output Schema",
          "type": "object"
        }
      },
      "required": [
        "user_id",
        "graph_id",
        "graph_version",
        "data",
        "input_schema",
        "output_schema"
      ],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": { "properties": {}, "title": "Output", "type": "object" },
    "description": "Executes an existing agent inside your agent",
    "categories": [
      {
        "category": "AGENT",
        "description": "Block that interacts with other agents."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Agent"
  },
  {
    "id": "3b191d9f-356f-482d-8238-ba04b6d18381",
    "name": "SmartDecisionMakerBlock",
    "inputSchema": {
      "properties": {
        "prompt": {
          "advanced": false,
          "description": "The prompt to send to the language model.",
          "placeholder": "Enter your prompt here...",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": false,
          "default": "gpt-4o",
          "description": "The language model to use for answering the prompt.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "sys_prompt": {
          "advanced": true,
          "default": "Thinking carefully step by step decide which function to call. Always choose a function call from the list of function signatures, and always provide the complete argument provided with the type matching the required jsonschema signature, no missing argument is allowed. If you have already completed the task objective, you can end the task by providing the end result of your work as a finish message. Only provide EXACTLY one function call, multiple tool calls is strictly prohibited.",
          "description": "The system prompt to provide additional context to the model.",
          "secret": false,
          "title": "System Prompt",
          "type": "string"
        },
        "conversation_history": {
          "advanced": true,
          "description": "The conversation history to provide context for the prompt.",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Conversation History",
          "type": "array"
        },
        "last_tool_output": {
          "advanced": true,
          "default": null,
          "description": "The output of the last tool that was called.",
          "secret": false,
          "title": "Last Tool Output"
        },
        "retry": {
          "advanced": true,
          "default": 3,
          "description": "Number of times to retry the LLM call if the response does not match the expected format.",
          "secret": false,
          "title": "Retry Count",
          "type": "integer"
        },
        "prompt_values": {
          "additionalProperties": { "type": "string" },
          "advanced": false,
          "description": "Values used to fill in the prompt. The values can be used in the prompt by putting them in a double curly braces, e.g. {{variable_name}}.",
          "secret": false,
          "title": "Prompt Values",
          "type": "object"
        },
        "max_tokens": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "secret": false,
          "title": "Max Tokens"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        }
      },
      "required": ["prompt", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        },
        "tools": {
          "advanced": false,
          "description": "The tools that are available to use.",
          "secret": false,
          "title": "Tools"
        },
        "finished": {
          "advanced": false,
          "description": "The finished message to display to the user.",
          "secret": false,
          "title": "Finished",
          "type": "string"
        },
        "conversations": {
          "advanced": false,
          "description": "The conversation history to provide context for the prompt.",
          "items": {},
          "secret": false,
          "title": "Conversations",
          "type": "array"
        }
      },
      "required": ["error", "tools", "finished", "conversations"],
      "title": "Output",
      "type": "object"
    },
    "description": "Uses AI to intelligently decide what tool to use.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "AI"
  },
  {
    "id": "98c6f503-8c47-4b1c-a96d-351fc7c87dab",
    "name": "CreateTalkingAvatarVideoBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["d_id"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "d_id",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.D_ID: 'd_id'>], Literal['api_key']]",
          "type": "object",
          "description": "The D-ID integration can be used with any API key with sufficient permissions for the blocks it is used on."
        },
        "script_input": {
          "advanced": false,
          "description": "The text input for the script",
          "placeholder": "Welcome to AutoGPT",
          "secret": false,
          "title": "Script Input",
          "type": "string"
        },
        "provider": {
          "advanced": true,
          "default": "microsoft",
          "description": "The voice provider to use",
          "enum": ["microsoft", "elevenlabs", "amazon"],
          "secret": false,
          "title": "Provider",
          "type": "string"
        },
        "voice_id": {
          "advanced": true,
          "default": "en-US-JennyNeural",
          "description": "The voice ID to use, get list of voices [here](https://docs.agpt.co/server/d_id)",
          "secret": false,
          "title": "Voice Id",
          "type": "string"
        },
        "presenter_id": {
          "advanced": true,
          "default": "amy-Aq6OmGZnMt",
          "description": "The presenter ID to use",
          "secret": false,
          "title": "Presenter Id",
          "type": "string"
        },
        "driver_id": {
          "advanced": true,
          "default": "Vcq0R4a8F0",
          "description": "The driver ID to use",
          "secret": false,
          "title": "Driver Id",
          "type": "string"
        },
        "result_format": {
          "advanced": true,
          "default": "mp4",
          "description": "The desired result format",
          "enum": ["mp4", "gif", "wav"],
          "secret": false,
          "title": "Result Format",
          "type": "string"
        },
        "crop_type": {
          "advanced": true,
          "default": "wide",
          "description": "The crop type for the presenter",
          "enum": ["wide", "square", "vertical"],
          "secret": false,
          "title": "Crop Type",
          "type": "string"
        },
        "subtitles": {
          "advanced": true,
          "default": false,
          "description": "Whether to include subtitles",
          "secret": false,
          "title": "Subtitles",
          "type": "boolean"
        },
        "ssml": {
          "advanced": true,
          "default": false,
          "description": "Whether the input is SSML",
          "secret": false,
          "title": "Ssml",
          "type": "boolean"
        },
        "max_polling_attempts": {
          "advanced": true,
          "default": 30,
          "description": "Maximum number of polling attempts",
          "minimum": 5,
          "secret": false,
          "title": "Max Polling Attempts",
          "type": "integer"
        },
        "polling_interval": {
          "advanced": true,
          "default": 10,
          "description": "Interval between polling attempts in seconds",
          "minimum": 5,
          "secret": false,
          "title": "Polling Interval",
          "type": "integer"
        }
      },
      "required": ["credentials", "script_input"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_url": {
          "advanced": false,
          "description": "The URL of the created video",
          "secret": false,
          "title": "Video Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["video_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block integrates with D-ID to create video clips and retrieve their URLs.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      },
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4ff1ff6d-cc40-4caa-ae69-011daa20c378",
    "name": "UnrealTextToSpeechBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "The text to be converted to speech",
          "placeholder": "Enter the text you want to convert to speech",
          "secret": false,
          "title": "Text",
          "type": "string"
        },
        "voice_id": {
          "advanced": true,
          "default": "Scarlett",
          "description": "The voice ID to use for text-to-speech conversion",
          "placeholder": "Scarlett",
          "secret": false,
          "title": "Voice Id",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["unreal_speech"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "unreal_speech",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.UNREAL_SPEECH: 'unreal_speech'>], Literal['api_key']]",
          "type": "object",
          "description": "The Unreal Speech integration can be used with any API key with sufficient permissions for the blocks it is used on."
        }
      },
      "required": ["text", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "mp3_url": {
          "advanced": false,
          "description": "The URL of the generated MP3 file",
          "secret": false,
          "title": "Mp3 Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["mp3_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Converts text to speech using the Unreal Speech API",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." },
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      },
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f66a3543-28d3-4ab5-8945-9b336371e2ce",
    "name": "StepThroughItemsBlock",
    "inputSchema": {
      "properties": {
        "items": {
          "advanced": false,
          "description": "The list or dictionary of items to iterate over",
          "items": {},
          "placeholder": "[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}",
          "secret": false,
          "title": "Items",
          "type": "array"
        },
        "items_object": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The list or dictionary of items to iterate over",
          "placeholder": "[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}",
          "secret": false,
          "title": "Items Object",
          "type": "object"
        },
        "items_str": {
          "advanced": false,
          "default": "",
          "description": "The list or dictionary of items to iterate over",
          "placeholder": "[1, 2, 3, 4, 5] or {'key1': 'value1', 'key2': 'value2'}",
          "secret": false,
          "title": "Items Str",
          "type": "string"
        }
      },
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "item": {
          "advanced": false,
          "description": "The current item in the iteration",
          "secret": false,
          "title": "Item"
        },
        "key": {
          "advanced": false,
          "description": "The key or index of the current item in the iteration",
          "secret": false,
          "title": "Key"
        }
      },
      "required": ["item", "key"],
      "title": "Output",
      "type": "object"
    },
    "description": "Iterates over a list or dictionary and outputs each item.",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "0b02b072-abe7-11ef-8372-fb5d162dd712",
    "name": "CodeExecutionBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["e2b"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "e2b",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.E2B: 'e2b'>], Literal['api_key']]",
          "type": "object",
          "description": "Enter your api key for the E2B Sandbox. You can get it in here - https://e2b.dev/docs"
        },
        "setup_commands": {
          "advanced": false,
          "description": "Shell commands to set up the sandbox before running the code. You can use `curl` or `git` to install your desired Debian based package manager. `pip` and `npm` are pre-installed.\n\nThese commands are executed with `sh`, in the foreground.",
          "items": { "type": "string" },
          "placeholder": "pip install cowsay",
          "secret": false,
          "title": "Setup Commands",
          "type": "array"
        },
        "code": {
          "advanced": false,
          "default": "",
          "description": "Code to execute in the sandbox",
          "placeholder": "print('Hello, World!')",
          "secret": false,
          "title": "Code",
          "type": "string"
        },
        "language": {
          "enum": ["python", "js", "bash", "r", "java"],
          "title": "ProgrammingLanguage",
          "type": "string",
          "advanced": false,
          "default": "python",
          "description": "Programming language to execute",
          "secret": false
        },
        "timeout": {
          "advanced": true,
          "default": 300,
          "description": "Execution timeout in seconds",
          "secret": false,
          "title": "Timeout",
          "type": "integer"
        },
        "template_id": {
          "advanced": true,
          "default": "",
          "description": "You can use an E2B sandbox template by entering its ID here. Check out the E2B docs for more details: [E2B - Sandbox template](https://e2b.dev/docs/sandbox-template)",
          "secret": false,
          "title": "Template Id",
          "type": "string"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "advanced": false,
          "description": "Response from code execution",
          "secret": false,
          "title": "Response",
          "type": "string"
        },
        "stdout_logs": {
          "advanced": false,
          "description": "Standard output logs from execution",
          "secret": false,
          "title": "Stdout Logs",
          "type": "string"
        },
        "stderr_logs": {
          "advanced": false,
          "description": "Standard error logs from execution",
          "secret": false,
          "title": "Stderr Logs",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if execution failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "stdout_logs", "stderr_logs", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Executes code in an isolated sandbox environment with internet access.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ff0861c9-1726-4aec-9e5b-bf53f3622112",
    "name": "InstantiationBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["e2b"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "e2b",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.E2B: 'e2b'>], Literal['api_key']]",
          "type": "object",
          "description": "Enter your api key for the E2B Sandbox. You can get it in here - https://e2b.dev/docs"
        },
        "setup_commands": {
          "advanced": false,
          "description": "Shell commands to set up the sandbox before running the code. You can use `curl` or `git` to install your desired Debian based package manager. `pip` and `npm` are pre-installed.\n\nThese commands are executed with `sh`, in the foreground.",
          "items": { "type": "string" },
          "placeholder": "pip install cowsay",
          "secret": false,
          "title": "Setup Commands",
          "type": "array"
        },
        "setup_code": {
          "advanced": false,
          "default": "",
          "description": "Code to execute in the sandbox",
          "placeholder": "print('Hello, World!')",
          "secret": false,
          "title": "Setup Code",
          "type": "string"
        },
        "language": {
          "enum": ["python", "js", "bash", "r", "java"],
          "title": "ProgrammingLanguage",
          "type": "string",
          "advanced": false,
          "default": "python",
          "description": "Programming language to execute",
          "secret": false
        },
        "timeout": {
          "advanced": true,
          "default": 300,
          "description": "Execution timeout in seconds",
          "secret": false,
          "title": "Timeout",
          "type": "integer"
        },
        "template_id": {
          "advanced": true,
          "default": "",
          "description": "You can use an E2B sandbox template by entering its ID here. Check out the E2B docs for more details: [E2B - Sandbox template](https://e2b.dev/docs/sandbox-template)",
          "secret": false,
          "title": "Template Id",
          "type": "string"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "sandbox_id": {
          "advanced": false,
          "description": "ID of the sandbox instance",
          "secret": false,
          "title": "Sandbox Id",
          "type": "string"
        },
        "response": {
          "advanced": false,
          "description": "Response from code execution",
          "secret": false,
          "title": "Response",
          "type": "string"
        },
        "stdout_logs": {
          "advanced": false,
          "description": "Standard output logs from execution",
          "secret": false,
          "title": "Stdout Logs",
          "type": "string"
        },
        "stderr_logs": {
          "advanced": false,
          "description": "Standard error logs from execution",
          "secret": false,
          "title": "Stderr Logs",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if execution failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "sandbox_id",
        "response",
        "stdout_logs",
        "stderr_logs",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Instantiate an isolated sandbox environment with internet access where to execute code in.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "82b59b8e-ea10-4d57-9161-8b169b0adba6",
    "name": "StepExecutionBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["e2b"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "e2b",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.E2B: 'e2b'>], Literal['api_key']]",
          "type": "object",
          "description": "Enter your api key for the E2B Sandbox. You can get it in here - https://e2b.dev/docs"
        },
        "sandbox_id": {
          "advanced": false,
          "description": "ID of the sandbox instance to execute the code in",
          "secret": false,
          "title": "Sandbox Id",
          "type": "string"
        },
        "step_code": {
          "advanced": false,
          "default": "",
          "description": "Code to execute in the sandbox",
          "placeholder": "print('Hello, World!')",
          "secret": false,
          "title": "Step Code",
          "type": "string"
        },
        "language": {
          "enum": ["python", "js", "bash", "r", "java"],
          "title": "ProgrammingLanguage",
          "type": "string",
          "advanced": false,
          "default": "python",
          "description": "Programming language to execute",
          "secret": false
        }
      },
      "required": ["credentials", "sandbox_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "advanced": false,
          "description": "Response from code execution",
          "secret": false,
          "title": "Response",
          "type": "string"
        },
        "stdout_logs": {
          "advanced": false,
          "description": "Standard output logs from execution",
          "secret": false,
          "title": "Stdout Logs",
          "type": "string"
        },
        "stderr_logs": {
          "advanced": false,
          "description": "Standard error logs from execution",
          "secret": false,
          "title": "Stderr Logs",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if execution failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "stdout_logs", "stderr_logs", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Execute code in a previously instantiated sandbox environment.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "df06086a-d5ac-4abb-9996-2ad0acb2eff7",
    "name": "ReadDiscordMessagesBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["discord"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "discord",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.DISCORD: 'discord'>], Literal['api_key']]",
          "type": "object",
          "description": "Discord bot token"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "message_content": {
          "advanced": false,
          "description": "The content of the message received",
          "secret": false,
          "title": "Message Content",
          "type": "string"
        },
        "channel_name": {
          "advanced": false,
          "description": "The name of the channel the message was received from",
          "secret": false,
          "title": "Channel Name",
          "type": "string"
        },
        "username": {
          "advanced": false,
          "description": "The username of the user who sent the message",
          "secret": false,
          "title": "Username",
          "type": "string"
        }
      },
      "required": ["message_content", "channel_name", "username"],
      "title": "Output",
      "type": "object"
    },
    "description": "Reads messages from a Discord channel using a bot token.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d0822ab5-9f8a-44a3-8971-531dd0178b6b",
    "name": "SendDiscordMessageBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["discord"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "discord",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.DISCORD: 'discord'>], Literal['api_key']]",
          "type": "object",
          "description": "Discord bot token"
        },
        "message_content": {
          "advanced": false,
          "description": "The content of the message received",
          "secret": false,
          "title": "Message Content",
          "type": "string"
        },
        "channel_name": {
          "advanced": false,
          "description": "The name of the channel the message was received from",
          "secret": false,
          "title": "Channel Name",
          "type": "string"
        }
      },
      "required": ["credentials", "message_content", "channel_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "The status of the operation (e.g., 'Message sent', 'Error')",
          "secret": false,
          "title": "Status",
          "type": "string"
        }
      },
      "required": ["status"],
      "title": "Output",
      "type": "object"
    },
    "description": "Sends a message to a Discord channel using a bot token.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "acf7625e-d2cb-4941-bfeb-2819fc6fc015",
    "name": "ReadCsvBlock",
    "inputSchema": {
      "properties": {
        "contents": {
          "advanced": false,
          "description": "The contents of the CSV file to read",
          "placeholder": "a, b, c\n1,2,3\n4,5,6",
          "secret": false,
          "title": "Contents",
          "type": "string"
        },
        "delimiter": {
          "advanced": true,
          "default": ",",
          "description": "The delimiter used in the CSV file",
          "secret": false,
          "title": "Delimiter",
          "type": "string"
        },
        "quotechar": {
          "advanced": true,
          "default": "\"",
          "description": "The character used to quote fields",
          "secret": false,
          "title": "Quotechar",
          "type": "string"
        },
        "escapechar": {
          "advanced": true,
          "default": "\\",
          "description": "The character used to escape the delimiter",
          "secret": false,
          "title": "Escapechar",
          "type": "string"
        },
        "has_header": {
          "advanced": true,
          "default": true,
          "description": "Whether the CSV file has a header row",
          "secret": false,
          "title": "Has Header",
          "type": "boolean"
        },
        "skip_rows": {
          "advanced": true,
          "default": 0,
          "description": "The number of rows to skip from the start of the file",
          "secret": false,
          "title": "Skip Rows",
          "type": "integer"
        },
        "strip": {
          "advanced": true,
          "default": true,
          "description": "Whether to strip whitespace from the values",
          "secret": false,
          "title": "Strip",
          "type": "boolean"
        },
        "skip_columns": {
          "advanced": true,
          "description": "The columns to skip from the start of the row",
          "items": { "type": "string" },
          "secret": false,
          "title": "Skip Columns",
          "type": "array"
        }
      },
      "required": ["contents"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "row": {
          "additionalProperties": { "type": "string" },
          "advanced": false,
          "description": "The data produced from each row in the CSV file",
          "secret": false,
          "title": "Row",
          "type": "object"
        },
        "rows": {
          "advanced": false,
          "description": "All the data in the CSV file as a list of rows",
          "items": {
            "additionalProperties": { "type": "string" },
            "type": "object"
          },
          "secret": false,
          "title": "All Data",
          "type": "array"
        }
      },
      "required": ["row", "rows"],
      "title": "Output",
      "type": "object"
    },
    "description": "Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." },
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [{ "name": "Nicholas Tindle" }],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f3a8f7e1-4b1d-4e5f-9f2a-7c3d5a2e6b4c",
    "name": "TranscribeYoutubeVideoBlock",
    "inputSchema": {
      "properties": {
        "youtube_url": {
          "advanced": false,
          "description": "The URL of the YouTube video to transcribe",
          "placeholder": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
          "secret": false,
          "title": "YouTube URL",
          "type": "string"
        }
      },
      "required": ["youtube_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_id": {
          "advanced": false,
          "description": "The extracted YouTube video ID",
          "secret": false,
          "title": "Video Id",
          "type": "string"
        },
        "transcript": {
          "advanced": false,
          "description": "The transcribed text of the video",
          "secret": false,
          "title": "Transcript",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Any error message if the transcription fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["video_id", "transcript", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Transcribes a YouTube video.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "cbb50872-625b-42f0-8203-a2ae78242d8a",
    "name": "FileStoreBlock",
    "inputSchema": {
      "properties": {
        "file_in": {
          "advanced": false,
          "description": "The file to store in the temporary directory, it can be a URL, data URI, or local path.",
          "format": "file",
          "secret": false,
          "title": "File In",
          "type": "string"
        }
      },
      "required": ["file_in"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "file_out": {
          "advanced": false,
          "description": "The relative path to the stored file in the temporary directory.",
          "format": "file",
          "secret": false,
          "title": "File Out",
          "type": "string"
        }
      },
      "required": ["file_out"],
      "title": "Output",
      "type": "object"
    },
    "description": "Stores the input file in the temporary directory.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Standard"
  },
  {
    "id": "1ff065e9-88e8-4358-9d82-8dc91f622ba9",
    "name": "StoreValueBlock",
    "inputSchema": {
      "properties": {
        "input": {
          "advanced": false,
          "description": "Trigger the block to produce the output. The value is only used when `data` is None.",
          "secret": false,
          "title": "Input"
        },
        "data": {
          "advanced": true,
          "default": null,
          "description": "The constant data to be retained in the block. This value is passed as `output`.",
          "secret": false,
          "title": "Data"
        }
      },
      "required": ["input"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "The stored data retained in the block.",
          "secret": false,
          "title": "Output"
        }
      },
      "required": ["output"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block forwards an input value as output, allowing reuse without change.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Standard"
  },
  {
    "id": "0e50422c-6dee-4145-83d6-3a5a392f65de",
    "name": "FindInDictionaryBlock",
    "inputSchema": {
      "properties": {
        "input": {
          "advanced": false,
          "description": "Dictionary to lookup from",
          "secret": false,
          "title": "Input"
        },
        "key": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "integer" }],
          "description": "Key to lookup in the dictionary",
          "secret": false,
          "title": "Key"
        }
      },
      "required": ["input", "key"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "Value found for the given key",
          "secret": false,
          "title": "Output"
        },
        "missing": {
          "advanced": false,
          "description": "Value of the input that missing the key",
          "secret": false,
          "title": "Missing"
        }
      },
      "required": ["output", "missing"],
      "title": "Output",
      "type": "object"
    },
    "description": "Lookup the given key in the input dictionary/object/list and return the value.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "31d1064e-7446-4693-a7d4-65e5ca1180d1",
    "name": "AddToDictionaryBlock",
    "inputSchema": {
      "properties": {
        "dictionary": {
          "additionalProperties": true,
          "advanced": true,
          "description": "The dictionary to add the entry to. If not provided, a new dictionary will be created.",
          "secret": false,
          "title": "Dictionary",
          "type": "object"
        },
        "key": {
          "advanced": false,
          "default": "",
          "description": "The key for the new entry.",
          "placeholder": "new_key",
          "secret": false,
          "title": "Key",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "default": null,
          "description": "The value for the new entry.",
          "placeholder": "new_value",
          "secret": false,
          "title": "Value"
        },
        "entries": {
          "additionalProperties": true,
          "advanced": true,
          "description": "The entries to add to the dictionary. This is the batch version of the `key` and `value` fields.",
          "secret": false,
          "title": "Entries",
          "type": "object"
        }
      },
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "updated_dictionary": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The dictionary with the new entry added.",
          "secret": false,
          "title": "Updated Dictionary",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the operation failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["updated_dictionary", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Adds a new key-value pair to a dictionary. If no dictionary is provided, a new one is created.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "aeb08fc1-2fc1-4141-bc8e-f758f183a822",
    "name": "AddToListBlock",
    "inputSchema": {
      "properties": {
        "list": {
          "advanced": false,
          "description": "The list to add the entry to. If not provided, a new list will be created.",
          "items": {},
          "secret": false,
          "title": "List",
          "type": "array"
        },
        "entry": {
          "advanced": false,
          "default": null,
          "description": "The entry to add to the list. Can be of any type (string, int, dict, etc.).",
          "secret": false,
          "title": "Entry"
        },
        "entries": {
          "advanced": true,
          "description": "The entries to add to the list. This is the batch version of the `entry` field.",
          "items": {},
          "secret": false,
          "title": "Entries",
          "type": "array"
        },
        "position": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The position to insert the new entry. If not provided, the entry will be appended to the end of the list.",
          "secret": false,
          "title": "Position"
        }
      },
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "updated_list": {
          "advanced": false,
          "description": "The list with the new entry added.",
          "items": {},
          "secret": false,
          "title": "Updated List",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the operation failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["updated_list", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Adds a new entry to a list. The entry can be of any type. If no list is provided, a new one is created.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5e2c6d0a-1e37-489f-b1d0-8e1812b23333",
    "name": "FindInListBlock",
    "inputSchema": {
      "properties": {
        "list": {
          "advanced": false,
          "description": "The list to search in.",
          "items": {},
          "secret": false,
          "title": "List",
          "type": "array"
        },
        "value": {
          "advanced": false,
          "description": "The value to search for.",
          "secret": false,
          "title": "Value"
        }
      },
      "required": ["list", "value"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "index": {
          "advanced": false,
          "description": "The index of the value in the list.",
          "secret": false,
          "title": "Index",
          "type": "integer"
        },
        "found": {
          "advanced": false,
          "description": "Whether the value was found in the list.",
          "secret": false,
          "title": "Found",
          "type": "boolean"
        },
        "not_found_value": {
          "advanced": false,
          "description": "The value that was not found in the list.",
          "secret": false,
          "title": "Not Found Value"
        }
      },
      "required": ["index", "found", "not_found_value"],
      "title": "Output",
      "type": "object"
    },
    "description": "Finds the index of the value in the list.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "cc10ff7b-7753-4ff2-9af6-9399b1a7eddc",
    "name": "NoteBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "The text to display in the sticky note.",
          "secret": false,
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "The text to display in the sticky note.",
          "secret": false,
          "title": "Output",
          "type": "string"
        }
      },
      "required": ["output"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block is used to display a sticky note with the given text.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Note"
  },
  {
    "id": "b924ddf4-de4f-4b56-9a85-358930dcbc91",
    "name": "CreateDictionaryBlock",
    "inputSchema": {
      "properties": {
        "values": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Key-value pairs to create the dictionary with",
          "placeholder": "e.g., {'name': 'Alice', 'age': 25}",
          "secret": false,
          "title": "Values",
          "type": "object"
        }
      },
      "required": ["values"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "dictionary": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The created dictionary containing the specified key-value pairs",
          "secret": false,
          "title": "Dictionary",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if dictionary creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["dictionary", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a dictionary with the specified key-value pairs. Use this when you know all the values you want to add upfront.",
    "categories": [
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a912d5c7-6e00-4542-b2a9-8034136930e4",
    "name": "CreateListBlock",
    "inputSchema": {
      "properties": {
        "values": {
          "advanced": false,
          "description": "A list of values to be combined into a new list.",
          "items": {},
          "placeholder": "e.g., ['Alice', 25, True]",
          "secret": false,
          "title": "Values",
          "type": "array"
        }
      },
      "required": ["values"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "list": {
          "advanced": false,
          "description": "The created list containing the specified values.",
          "items": {},
          "secret": false,
          "title": "List",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if list creation failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["list", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a list with the specified values. Use this when you know all the values you want to add upfront.",
    "categories": [
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "95d1b990-ce13-4d88-9737-ba5c2070c97b",
    "name": "UniversalTypeConverterBlock",
    "inputSchema": {
      "properties": {
        "value": {
          "advanced": false,
          "description": "The value to convert to a universal type.",
          "secret": false,
          "title": "Value"
        },
        "type": {
          "enum": ["string", "number", "boolean", "list", "dictionary"],
          "title": "TypeOptions",
          "type": "string",
          "advanced": false,
          "description": "The type to convert the value to.",
          "secret": false
        }
      },
      "required": ["value", "type"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "value": {
          "advanced": false,
          "description": "The converted value.",
          "secret": false,
          "title": "Value"
        }
      },
      "required": ["value"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block is used to convert a value to a universal type.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "286380af-9529-4b55-8be0-1d7c854abdb5",
    "name": "XMLParserBlock",
    "inputSchema": {
      "properties": {
        "input_xml": {
          "advanced": false,
          "description": "input xml to be parsed",
          "secret": false,
          "title": "Input Xml",
          "type": "string"
        }
      },
      "required": ["input_xml"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "parsed_xml": {
          "additionalProperties": true,
          "advanced": false,
          "description": "output parsed xml to dict",
          "secret": false,
          "title": "Parsed Xml",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error in parsing",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["parsed_xml", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Parses XML using gravitasml to tokenize and coverts it to dict",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4a448883-71fa-49cf-91cf-70d793bd7d87",
    "name": "DataSamplingBlock",
    "inputSchema": {
      "properties": {
        "data": {
          "advanced": false,
          "anyOf": [
            { "additionalProperties": true, "type": "object" },
            {
              "items": {
                "anyOf": [
                  { "additionalProperties": true, "type": "object" },
                  { "items": {}, "type": "array" }
                ]
              },
              "type": "array"
            }
          ],
          "description": "The dataset to sample from. Can be a single dictionary, a list of dictionaries, or a list of lists.",
          "placeholder": "{'id': 1, 'value': 'a'} or [{'id': 1, 'value': 'a'}, {'id': 2, 'value': 'b'}, ...]",
          "secret": false,
          "title": "Data"
        },
        "sample_size": {
          "advanced": true,
          "default": 10,
          "description": "The number of samples to take from the dataset.",
          "placeholder": "10",
          "secret": false,
          "title": "Sample Size",
          "type": "integer"
        },
        "sampling_method": {
          "enum": [
            "random",
            "systematic",
            "top",
            "bottom",
            "stratified",
            "weighted",
            "reservoir",
            "cluster"
          ],
          "title": "SamplingMethod",
          "type": "string",
          "advanced": true,
          "default": "random",
          "description": "The method to use for sampling.",
          "secret": false
        },
        "accumulate": {
          "advanced": true,
          "default": false,
          "description": "Whether to accumulate data before sampling.",
          "secret": false,
          "title": "Accumulate",
          "type": "boolean"
        },
        "random_seed": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Seed for random number generator (optional).",
          "secret": false,
          "title": "Random Seed"
        },
        "stratify_key": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Key to use for stratified sampling (required for stratified sampling).",
          "secret": false,
          "title": "Stratify Key"
        },
        "weight_key": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Key to use for weighted sampling (required for weighted sampling).",
          "secret": false,
          "title": "Weight Key"
        },
        "cluster_key": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Key to use for cluster sampling (required for cluster sampling).",
          "secret": false,
          "title": "Cluster Key"
        }
      },
      "required": ["data"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "sampled_data": {
          "advanced": false,
          "description": "The sampled subset of the input data.",
          "items": {
            "anyOf": [
              { "additionalProperties": true, "type": "object" },
              { "items": {}, "type": "array" }
            ]
          },
          "secret": false,
          "title": "Sampled Data",
          "type": "array"
        },
        "sample_indices": {
          "advanced": false,
          "description": "The indices of the sampled data in the original dataset.",
          "items": { "type": "integer" },
          "secret": false,
          "title": "Sample Indices",
          "type": "array"
        }
      },
      "required": ["sampled_data", "sample_indices"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block samples data from a given dataset using various sampling methods.",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3f7b2dcb-4a78-4e3f-b0f1-88132e1b89df",
    "name": "PublishToMediumBlock",
    "inputSchema": {
      "properties": {
        "author_id": {
          "advanced": true,
          "default": "<secret>",
          "description": "The Medium AuthorID of the user. You can get this by calling the /me endpoint of the Medium API.\n\ncurl -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\" https://api.medium.com/v1/me\" the response will contain the authorId field.",
          "placeholder": "Enter the author's Medium AuthorID",
          "secret": true,
          "title": "Author Id",
          "type": "string"
        },
        "title": {
          "advanced": false,
          "description": "The title of your Medium post",
          "placeholder": "Enter your post title",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "The main content of your Medium post",
          "placeholder": "Enter your post content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "content_format": {
          "advanced": false,
          "description": "The format of the content: 'html' or 'markdown'",
          "placeholder": "html",
          "secret": false,
          "title": "Content Format",
          "type": "string"
        },
        "tags": {
          "advanced": false,
          "description": "List of tags for your Medium post (up to 5)",
          "items": { "type": "string" },
          "placeholder": "['technology', 'AI', 'blogging']",
          "secret": false,
          "title": "Tags",
          "type": "array"
        },
        "canonical_url": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The original home of this content, if it was originally published elsewhere",
          "placeholder": "https://yourblog.com/original-post",
          "secret": false,
          "title": "Canonical Url"
        },
        "publish_status": {
          "enum": ["public", "draft", "unlisted"],
          "title": "PublishToMediumStatus",
          "type": "string",
          "advanced": false,
          "description": "The publish status",
          "placeholder": "draft",
          "secret": false
        },
        "license": {
          "advanced": true,
          "default": "all-rights-reserved",
          "description": "The license of the post: 'all-rights-reserved', 'cc-40-by', 'cc-40-by-sa', 'cc-40-by-nd', 'cc-40-by-nc', 'cc-40-by-nc-nd', 'cc-40-by-nc-sa', 'cc-40-zero', 'public-domain'",
          "placeholder": "all-rights-reserved",
          "secret": false,
          "title": "License",
          "type": "string"
        },
        "notify_followers": {
          "advanced": true,
          "default": false,
          "description": "Whether to notify followers that the user has published",
          "placeholder": "False",
          "secret": false,
          "title": "Notify Followers",
          "type": "boolean"
        },
        "credentials": {
          "credentials_provider": ["medium"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "medium",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.MEDIUM: 'medium'>], Literal['api_key']]",
          "type": "object",
          "description": "The Medium integration can be used with any API key with sufficient permissions for the blocks it is used on."
        }
      },
      "required": [
        "title",
        "content",
        "content_format",
        "tags",
        "publish_status",
        "credentials"
      ],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "post_id": {
          "advanced": false,
          "description": "The ID of the created Medium post",
          "secret": false,
          "title": "Post Id",
          "type": "string"
        },
        "post_url": {
          "advanced": false,
          "description": "The URL of the created Medium post",
          "secret": false,
          "title": "Post Url",
          "type": "string"
        },
        "published_at": {
          "advanced": false,
          "description": "The timestamp when the post was published",
          "secret": false,
          "title": "Published At",
          "type": "integer"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the post creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["post_id", "post_url", "published_at", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Publishes a post to Medium.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4335878a-394e-4e67-adf2-919877ff49ae",
    "name": "SendEmailBlock",
    "inputSchema": {
      "properties": {
        "to_email": {
          "advanced": false,
          "description": "Recipient email address",
          "placeholder": "recipient@example.com",
          "secret": false,
          "title": "To Email",
          "type": "string"
        },
        "subject": {
          "advanced": false,
          "description": "Subject of the email",
          "placeholder": "Enter the email subject",
          "secret": false,
          "title": "Subject",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Body of the email",
          "placeholder": "Enter the email body",
          "secret": false,
          "title": "Body",
          "type": "string"
        },
        "config": {
          "properties": {
            "smtp_server": {
              "advanced": true,
              "default": "smtp.example.com",
              "description": "SMTP server address",
              "secret": false,
              "title": "Smtp Server",
              "type": "string"
            },
            "smtp_port": {
              "advanced": true,
              "default": 25,
              "description": "SMTP port number",
              "secret": false,
              "title": "Smtp Port",
              "type": "integer"
            }
          },
          "title": "SMTP Config",
          "type": "object",
          "advanced": true,
          "default": { "smtp_server": "smtp.example.com", "smtp_port": 25 },
          "description": "SMTP Config",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["smtp"],
          "credentials_types": ["user_password"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "smtp",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "const": "user_password",
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SMTP: 'smtp'>], Literal['user_password']]",
          "type": "object",
          "description": "The SMTP integration requires a username and password."
        }
      },
      "required": ["to_email", "subject", "body", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the email sending operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the email sending failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block sends an email using the provided SMTP credentials.",
    "categories": [
      {
        "category": "OUTPUT",
        "description": "Block that interacts with output of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3060088f-6ed9-4928-9ba7-9c92823a7ccd",
    "name": "MatchTextPatternBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "Text to match",
          "secret": false,
          "title": "Text"
        },
        "match": {
          "advanced": false,
          "description": "Pattern (Regex) to match",
          "secret": false,
          "title": "Match",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Data to be forwarded to output",
          "secret": false,
          "title": "Data"
        },
        "case_sensitive": {
          "advanced": true,
          "default": true,
          "description": "Case sensitive match",
          "secret": false,
          "title": "Case Sensitive",
          "type": "boolean"
        },
        "dot_all": {
          "advanced": true,
          "default": true,
          "description": "Dot matches all",
          "secret": false,
          "title": "Dot All",
          "type": "boolean"
        }
      },
      "required": ["text", "match", "data"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "positive": {
          "advanced": false,
          "description": "Output data if match is found",
          "secret": false,
          "title": "Positive"
        },
        "negative": {
          "advanced": false,
          "description": "Output data if match is not found",
          "secret": false,
          "title": "Negative"
        }
      },
      "required": ["positive", "negative"],
      "title": "Output",
      "type": "object"
    },
    "description": "Matches text against a regex pattern and forwards data to positive or negative output based on the match.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3146e4fe-2cdd-4f29-bd12-0c9d5bb4deb0",
    "name": "ExtractTextInformationBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "Text to parse",
          "secret": false,
          "title": "Text"
        },
        "pattern": {
          "advanced": false,
          "description": "Pattern (Regex) to parse",
          "secret": false,
          "title": "Pattern",
          "type": "string"
        },
        "group": {
          "advanced": true,
          "default": 0,
          "description": "Group number to extract",
          "secret": false,
          "title": "Group",
          "type": "integer"
        },
        "case_sensitive": {
          "advanced": true,
          "default": true,
          "description": "Case sensitive match",
          "secret": false,
          "title": "Case Sensitive",
          "type": "boolean"
        },
        "dot_all": {
          "advanced": true,
          "default": true,
          "description": "Dot matches all",
          "secret": false,
          "title": "Dot All",
          "type": "boolean"
        },
        "find_all": {
          "advanced": true,
          "default": false,
          "description": "Find all matches",
          "secret": false,
          "title": "Find All",
          "type": "boolean"
        }
      },
      "required": ["text", "pattern"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "positive": {
          "advanced": false,
          "description": "Extracted text",
          "secret": false,
          "title": "Positive",
          "type": "string"
        },
        "negative": {
          "advanced": false,
          "description": "Original text",
          "secret": false,
          "title": "Negative",
          "type": "string"
        },
        "matched_results": {
          "advanced": false,
          "description": "List of matched results",
          "items": { "type": "string" },
          "secret": false,
          "title": "Matched Results",
          "type": "array"
        },
        "matched_count": {
          "advanced": false,
          "description": "Number of matched results",
          "secret": false,
          "title": "Matched Count",
          "type": "integer"
        }
      },
      "required": ["positive", "negative", "matched_results", "matched_count"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block extracts the text from the given text using the pattern (regex).",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "db7d8f02-2f44-4c55-ab7a-eae0941f0c30",
    "name": "FillTextTemplateBlock",
    "inputSchema": {
      "properties": {
        "values": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Values (dict) to be used in format. These values can be used by putting them in double curly braces in the format template. e.g. {{value_name}}.",
          "secret": false,
          "title": "Values",
          "type": "object"
        },
        "format": {
          "advanced": false,
          "description": "Template to format the text using `values`. Use Jinja2 syntax.",
          "secret": false,
          "title": "Format",
          "type": "string"
        }
      },
      "required": ["values", "format"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "Formatted text",
          "secret": false,
          "title": "Output",
          "type": "string"
        }
      },
      "required": ["output"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block formats the given texts using the format template.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e30a4d42-7b7d-4e6a-b36e-1f9b8e3b7d85",
    "name": "CombineTextsBlock",
    "inputSchema": {
      "properties": {
        "input": {
          "advanced": false,
          "description": "text input to combine",
          "items": { "type": "string" },
          "secret": false,
          "title": "Input",
          "type": "array"
        },
        "delimiter": {
          "advanced": true,
          "default": "",
          "description": "Delimiter to combine texts",
          "secret": false,
          "title": "Delimiter",
          "type": "string"
        }
      },
      "required": ["input"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "Combined text",
          "secret": false,
          "title": "Output",
          "type": "string"
        }
      },
      "required": ["output"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block combines multiple input texts into a single output text.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d5ea33c8-a575-477a-b42f-2fe3be5055ec",
    "name": "TextSplitBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "The text to split.",
          "secret": false,
          "title": "Text",
          "type": "string"
        },
        "delimiter": {
          "advanced": false,
          "description": "The delimiter to split the text by.",
          "secret": false,
          "title": "Delimiter",
          "type": "string"
        },
        "strip": {
          "advanced": true,
          "default": true,
          "description": "Whether to strip the text.",
          "secret": false,
          "title": "Strip",
          "type": "boolean"
        }
      },
      "required": ["text", "delimiter"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "texts": {
          "advanced": false,
          "description": "The text split into a list of strings.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        }
      },
      "required": ["texts"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block is used to split a text into a list of strings.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7e7c87ab-3469-4bcc-9abe-67705091b713",
    "name": "TextReplaceBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "The text to replace.",
          "secret": false,
          "title": "Text",
          "type": "string"
        },
        "old": {
          "advanced": false,
          "description": "The old text to replace.",
          "secret": false,
          "title": "Old",
          "type": "string"
        },
        "new": {
          "advanced": false,
          "description": "The new text to replace with.",
          "secret": false,
          "title": "New",
          "type": "string"
        }
      },
      "required": ["text", "old", "new"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output": {
          "advanced": false,
          "description": "The text with the replaced text.",
          "secret": false,
          "title": "Output",
          "type": "string"
        }
      },
      "required": ["output"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block is used to replace a text with a new text.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b1ab9b19-67a6-406d-abf5-2dba76d00c79",
    "name": "CalculatorBlock",
    "inputSchema": {
      "properties": {
        "operation": {
          "enum": ["Add", "Subtract", "Multiply", "Divide", "Power"],
          "title": "Operation",
          "type": "string",
          "advanced": false,
          "description": "Choose the math operation you want to perform",
          "placeholder": "Select an operation",
          "secret": false
        },
        "a": {
          "advanced": false,
          "description": "Enter the first number (A)",
          "placeholder": "For example: 10",
          "secret": false,
          "title": "A",
          "type": "number"
        },
        "b": {
          "advanced": false,
          "description": "Enter the second number (B)",
          "placeholder": "For example: 5",
          "secret": false,
          "title": "B",
          "type": "number"
        },
        "round_result": {
          "advanced": true,
          "default": false,
          "description": "Do you want to round the result to a whole number?",
          "secret": false,
          "title": "Round Result",
          "type": "boolean"
        }
      },
      "required": ["operation", "a", "b"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "The result of your calculation",
          "secret": false,
          "title": "Result",
          "type": "number"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Performs a mathematical operation on two numbers.",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3c9c2f42-b0c3-435f-ba35-05f7a25c772a",
    "name": "CountItemsBlock",
    "inputSchema": {
      "properties": {
        "collection": {
          "advanced": false,
          "description": "Enter the collection you want to count. This can be a list, dictionary, string, or any other iterable.",
          "placeholder": "For example: [1, 2, 3] or {'a': 1, 'b': 2} or 'hello'",
          "secret": false,
          "title": "Collection"
        }
      },
      "required": ["collection"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "count": {
          "advanced": false,
          "description": "The number of items in the collection",
          "secret": false,
          "title": "Count",
          "type": "integer"
        }
      },
      "required": ["count"],
      "title": "Output",
      "type": "object"
    },
    "description": "Counts the number of items in a collection.",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3a7c4b8d-6e2f-4a5d-b9c1-f8d23c5a9b0e",
    "name": "ScreenshotWebPageBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["screenshotone"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "screenshotone",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SCREENSHOTONE: 'screenshotone'>], Literal['api_key']]",
          "type": "object",
          "description": "The ScreenshotOne API key"
        },
        "url": {
          "advanced": false,
          "description": "URL of the website to screenshot",
          "placeholder": "https://example.com",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "viewport_width": {
          "advanced": true,
          "default": 1920,
          "description": "Width of the viewport in pixels",
          "secret": false,
          "title": "Viewport Width",
          "type": "integer"
        },
        "viewport_height": {
          "advanced": true,
          "default": 1080,
          "description": "Height of the viewport in pixels",
          "secret": false,
          "title": "Viewport Height",
          "type": "integer"
        },
        "full_page": {
          "advanced": true,
          "default": false,
          "description": "Whether to capture the full page length",
          "secret": false,
          "title": "Full Page",
          "type": "boolean"
        },
        "format": {
          "enum": ["png", "jpeg", "webp"],
          "title": "Format",
          "type": "string",
          "advanced": true,
          "default": "png",
          "description": "Output format (png, jpeg, webp)",
          "secret": false
        },
        "block_ads": {
          "advanced": true,
          "default": true,
          "description": "Whether to block ads",
          "secret": false,
          "title": "Block Ads",
          "type": "boolean"
        },
        "block_cookie_banners": {
          "advanced": true,
          "default": true,
          "description": "Whether to block cookie banners",
          "secret": false,
          "title": "Block Cookie Banners",
          "type": "boolean"
        },
        "block_chats": {
          "advanced": true,
          "default": true,
          "description": "Whether to block chat widgets",
          "secret": false,
          "title": "Block Chats",
          "type": "boolean"
        },
        "cache": {
          "advanced": true,
          "default": false,
          "description": "Whether to enable caching",
          "secret": false,
          "title": "Cache",
          "type": "boolean"
        }
      },
      "required": ["credentials", "url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "image": {
          "advanced": false,
          "description": "The screenshot image data",
          "format": "file",
          "secret": false,
          "title": "Image",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the screenshot failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["image", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Takes a screenshot of a specified website using ScreenshotOne API",
    "categories": [
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6595ae1f-b924-42cb-9a41-551a0611c4b4",
    "name": "SendWebRequestBlock",
    "inputSchema": {
      "properties": {
        "url": {
          "advanced": false,
          "description": "The URL to send the request to",
          "placeholder": "https://api.example.com",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "method": {
          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD"],
          "title": "HttpMethod",
          "type": "string",
          "advanced": true,
          "default": "POST",
          "description": "The HTTP method to use for the request",
          "secret": false
        },
        "headers": {
          "additionalProperties": { "type": "string" },
          "advanced": true,
          "description": "The headers to include in the request",
          "secret": false,
          "title": "Headers",
          "type": "object"
        },
        "json_format": {
          "advanced": true,
          "default": true,
          "description": "Whether to send and receive body as JSON",
          "secret": false,
          "title": "JSON format",
          "type": "boolean"
        },
        "body": {
          "advanced": true,
          "default": null,
          "description": "The body of the request",
          "secret": false,
          "title": "Body"
        }
      },
      "required": ["url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "advanced": false,
          "description": "The response from the server",
          "secret": false,
          "title": "Response"
        },
        "client_error": {
          "advanced": false,
          "description": "Errors on 4xx status codes",
          "secret": false,
          "title": "Client Error"
        },
        "server_error": {
          "advanced": false,
          "description": "Errors on 5xx status codes",
          "secret": false,
          "title": "Server Error"
        },
        "error": {
          "advanced": false,
          "description": "Errors for all other exceptions",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "client_error", "server_error", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block makes an HTTP request to the given URL.",
    "categories": [
      {
        "category": "OUTPUT",
        "description": "Block that interacts with output of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "48d8fdab-8f03-41f3-8407-8107ba11ec9b",
    "name": "PineconeInitBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["pinecone"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "pinecone",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.PINECONE: 'pinecone'>], Literal['api_key']]",
          "type": "object",
          "description": "The Pinecone integration can be used with an API Key."
        },
        "index_name": {
          "advanced": false,
          "description": "Name of the Pinecone index",
          "secret": false,
          "title": "Index Name",
          "type": "string"
        },
        "dimension": {
          "advanced": true,
          "default": 768,
          "description": "Dimension of the vectors",
          "secret": false,
          "title": "Dimension",
          "type": "integer"
        },
        "metric": {
          "advanced": true,
          "default": "cosine",
          "description": "Distance metric for the index",
          "secret": false,
          "title": "Metric",
          "type": "string"
        },
        "cloud": {
          "advanced": true,
          "default": "aws",
          "description": "Cloud provider for serverless",
          "secret": false,
          "title": "Cloud",
          "type": "string"
        },
        "region": {
          "advanced": true,
          "default": "us-east-1",
          "description": "Region for serverless",
          "secret": false,
          "title": "Region",
          "type": "string"
        }
      },
      "required": ["credentials", "index_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "index": {
          "advanced": false,
          "description": "Name of the initialized Pinecone index",
          "secret": false,
          "title": "Index",
          "type": "string"
        },
        "message": {
          "advanced": false,
          "description": "Status message",
          "secret": false,
          "title": "Message",
          "type": "string"
        }
      },
      "required": ["index", "message"],
      "title": "Output",
      "type": "object"
    },
    "description": "Initializes a Pinecone index",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9ad93d0f-91b4-4c9c-8eb1-82e26b4a01c5",
    "name": "PineconeQueryBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["pinecone"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "pinecone",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.PINECONE: 'pinecone'>], Literal['api_key']]",
          "type": "object",
          "description": "The Pinecone integration can be used with an API Key."
        },
        "query_vector": {
          "advanced": false,
          "description": "Query vector",
          "items": {},
          "secret": false,
          "title": "Query Vector",
          "type": "array"
        },
        "namespace": {
          "advanced": true,
          "default": "",
          "description": "Namespace to query in Pinecone",
          "secret": false,
          "title": "Namespace",
          "type": "string"
        },
        "top_k": {
          "advanced": true,
          "default": 3,
          "description": "Number of top results to return",
          "secret": false,
          "title": "Top K",
          "type": "integer"
        },
        "include_values": {
          "advanced": true,
          "default": false,
          "description": "Whether to include vector values in the response",
          "secret": false,
          "title": "Include Values",
          "type": "boolean"
        },
        "include_metadata": {
          "advanced": true,
          "default": true,
          "description": "Whether to include metadata in the response",
          "secret": false,
          "title": "Include Metadata",
          "type": "boolean"
        },
        "host": {
          "advanced": true,
          "default": "",
          "description": "Host for pinecone",
          "secret": false,
          "title": "Host",
          "type": "string"
        },
        "idx_name": {
          "advanced": false,
          "description": "Index name for pinecone",
          "secret": false,
          "title": "Idx Name",
          "type": "string"
        }
      },
      "required": ["credentials", "query_vector", "idx_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "results": {
          "advanced": false,
          "description": "Query results from Pinecone",
          "secret": false,
          "title": "Results"
        },
        "combined_results": {
          "advanced": false,
          "description": "Combined results from Pinecone",
          "secret": false,
          "title": "Combined Results"
        }
      },
      "required": ["results", "combined_results"],
      "title": "Output",
      "type": "object"
    },
    "description": "Queries a Pinecone index",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "477f2168-cd91-475a-8146-9499a5982434",
    "name": "PineconeInsertBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["pinecone"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "pinecone",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.PINECONE: 'pinecone'>], Literal['api_key']]",
          "type": "object",
          "description": "The Pinecone integration can be used with an API Key."
        },
        "index": {
          "advanced": false,
          "description": "Initialized Pinecone index",
          "secret": false,
          "title": "Index",
          "type": "string"
        },
        "chunks": {
          "advanced": false,
          "description": "List of text chunks to ingest",
          "items": {},
          "secret": false,
          "title": "Chunks",
          "type": "array"
        },
        "embeddings": {
          "advanced": false,
          "description": "List of embeddings corresponding to the chunks",
          "items": {},
          "secret": false,
          "title": "Embeddings",
          "type": "array"
        },
        "namespace": {
          "advanced": true,
          "default": "",
          "description": "Namespace to use in Pinecone",
          "secret": false,
          "title": "Namespace",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": true,
          "advanced": true,
          "description": "Additional metadata to store with each vector",
          "secret": false,
          "title": "Metadata",
          "type": "object"
        }
      },
      "required": ["credentials", "index", "chunks", "embeddings"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "upsert_response": {
          "advanced": false,
          "description": "Response from Pinecone upsert operation",
          "secret": false,
          "title": "Upsert Response",
          "type": "string"
        }
      },
      "required": ["upsert_response"],
      "title": "Output",
      "type": "object"
    },
    "description": "Upload data to a Pinecone index",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ed1ae7a0-b770-4089-b520-1f0005fad19a",
    "name": "AIImageGeneratorBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["replicate"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "replicate",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.REPLICATE: 'replicate'>], Literal['api_key']]",
          "type": "object",
          "description": "Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens."
        },
        "prompt": {
          "advanced": false,
          "description": "Text prompt for image generation",
          "placeholder": "e.g., 'A red panda using a laptop in a snowy forest'",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "model": {
          "description": "The AI model to use for image generation",
          "enum": [
            "Flux 1.1 Pro",
            "Flux 1.1 Pro Ultra",
            "Recraft v3",
            "Stable Diffusion 3.5 Medium"
          ],
          "title": "Model",
          "type": "string",
          "advanced": true,
          "default": "Stable Diffusion 3.5 Medium",
          "secret": false
        },
        "size": {
          "description": "Format of the generated image:\n- Square: Perfect for profile pictures, icons\n- Landscape: Traditional photo format\n- Portrait: Vertical photos, portraits\n- Wide: Cinematic format, desktop wallpapers\n- Tall: Mobile wallpapers, social media stories",
          "enum": ["square", "landscape", "portrait", "wide", "tall"],
          "title": "Image Format",
          "type": "string",
          "advanced": true,
          "default": "square",
          "secret": false
        },
        "style": {
          "description": "Visual style for the generated image",
          "enum": [
            "any",
            "realistic_image",
            "realistic_image/b_and_w",
            "realistic_image/hdr",
            "realistic_image/natural_light",
            "realistic_image/studio_portrait",
            "realistic_image/enterprise",
            "realistic_image/hard_flash",
            "realistic_image/motion_blur",
            "digital_illustration",
            "digital_illustration/pixel_art",
            "digital_illustration/hand_drawn",
            "digital_illustration/grain",
            "digital_illustration/infantile_sketch",
            "digital_illustration/2d_art_poster",
            "digital_illustration/2d_art_poster_2",
            "digital_illustration/handmade_3d",
            "digital_illustration/hand_drawn_outline",
            "digital_illustration/engraving_color"
          ],
          "title": "Image Style",
          "type": "string",
          "advanced": true,
          "default": "any",
          "secret": false
        }
      },
      "required": ["credentials", "prompt"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "image_url": {
          "advanced": false,
          "description": "URL of the generated image",
          "secret": false,
          "title": "Image Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if generation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["image_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Generate images using various AI models through a unified interface",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ab2a782d-22cf-4587-8a70-55b59b3f9f90",
    "name": "WordCharacterCountBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "Input text to count words and characters",
          "placeholder": "Enter your text here",
          "secret": false,
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "word_count": {
          "advanced": false,
          "description": "Number of words in the input text",
          "secret": false,
          "title": "Word Count",
          "type": "integer"
        },
        "character_count": {
          "advanced": false,
          "description": "Number of characters in the input text",
          "secret": false,
          "title": "Character Count",
          "type": "integer"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the counting operation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["word_count", "character_count", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Counts the number of words and characters in a given text.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d8b91fd4-da26-42d4-8ecb-8b196c6d84b6",
    "name": "MediaDurationBlock",
    "inputSchema": {
      "properties": {
        "media_in": {
          "advanced": false,
          "description": "Media input (URL, data URI, or local path).",
          "format": "file",
          "secret": false,
          "title": "Media In",
          "type": "string"
        },
        "is_video": {
          "advanced": true,
          "default": true,
          "description": "Whether the media is a video (True) or audio (False).",
          "secret": false,
          "title": "Is Video",
          "type": "boolean"
        }
      },
      "required": ["media_in"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "duration": {
          "advanced": false,
          "description": "Duration of the media file (in seconds).",
          "secret": false,
          "title": "Duration",
          "type": "number"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if something fails.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["duration"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block to get the duration of a media file.",
    "categories": [
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8bf9eef6-5451-4213-b265-25306446e94b",
    "name": "LoopVideoBlock",
    "inputSchema": {
      "properties": {
        "video_in": {
          "advanced": false,
          "description": "The input video (can be a URL, data URI, or local path).",
          "format": "file",
          "secret": false,
          "title": "Video In",
          "type": "string"
        },
        "duration": {
          "advanced": true,
          "anyOf": [{ "minimum": 0.0, "type": "number" }, { "type": "null" }],
          "default": null,
          "description": "Target duration (in seconds) to loop the video to. If omitted, defaults to no looping.",
          "secret": false,
          "title": "Duration"
        },
        "n_loops": {
          "advanced": true,
          "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Number of times to repeat the video. If omitted, defaults to 1 (no repeat).",
          "secret": false,
          "title": "N Loops"
        },
        "output_return_type": {
          "advanced": true,
          "default": "file_path",
          "description": "How to return the output video. Either a relative path or base64 data URI.",
          "enum": ["file_path", "data_uri"],
          "secret": false,
          "title": "Output Return Type",
          "type": "string"
        }
      },
      "required": ["video_in"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_out": {
          "advanced": false,
          "description": "Looped video returned either as a relative path or a data URI.",
          "secret": false,
          "title": "Video Out",
          "type": "string"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if something fails.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["video_out"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block to loop a video to a given duration or number of repeats.",
    "categories": [
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3503748d-62b6-4425-91d6-725b064af509",
    "name": "AddAudioToVideoBlock",
    "inputSchema": {
      "properties": {
        "video_in": {
          "advanced": false,
          "description": "Video input (URL, data URI, or local path).",
          "format": "file",
          "secret": false,
          "title": "Video In",
          "type": "string"
        },
        "audio_in": {
          "advanced": false,
          "description": "Audio input (URL, data URI, or local path).",
          "format": "file",
          "secret": false,
          "title": "Audio In",
          "type": "string"
        },
        "volume": {
          "advanced": true,
          "default": 1.0,
          "description": "Volume scale for the newly attached audio track (1.0 = original).",
          "secret": false,
          "title": "Volume",
          "type": "number"
        },
        "output_return_type": {
          "advanced": true,
          "default": "file_path",
          "description": "Return the final output as a relative path or base64 data URI.",
          "enum": ["file_path", "data_uri"],
          "secret": false,
          "title": "Output Return Type",
          "type": "string"
        }
      },
      "required": ["video_in", "audio_in"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_out": {
          "advanced": false,
          "description": "Final video (with attached audio), as a path or data URI.",
          "format": "file",
          "secret": false,
          "title": "Video Out",
          "type": "string"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if something fails.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["video_out"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block to attach an audio file to a video file using moviepy.",
    "categories": [
      {
        "category": "MULTIMEDIA",
        "description": "Block that interacts with multimedia content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
    "name": "GoogleMapsSearchBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google_maps"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google_maps",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE_MAPS: 'google_maps'>], Literal['api_key']]",
          "type": "object",
          "description": "Google Maps API Key"
        },
        "query": {
          "advanced": false,
          "description": "Search query for local businesses",
          "placeholder": "e.g., 'restaurants in New York'",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "radius": {
          "advanced": true,
          "default": 5000,
          "description": "Search radius in meters (max 50000)",
          "maximum": 50000,
          "minimum": 1,
          "secret": false,
          "title": "Radius",
          "type": "integer"
        },
        "max_results": {
          "advanced": true,
          "default": 20,
          "description": "Maximum number of results to return (max 60)",
          "maximum": 60,
          "minimum": 1,
          "secret": false,
          "title": "Max Results",
          "type": "integer"
        }
      },
      "required": ["credentials", "query"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "place": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "address": { "title": "Address", "type": "string" },
            "phone": { "title": "Phone", "type": "string" },
            "rating": { "title": "Rating", "type": "number" },
            "reviews": { "title": "Reviews", "type": "integer" },
            "website": { "title": "Website", "type": "string" }
          },
          "required": [
            "name",
            "address",
            "phone",
            "rating",
            "reviews",
            "website"
          ],
          "title": "Place",
          "type": "object",
          "advanced": false,
          "description": "Place found",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if the search failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["place", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block searches for local businesses using Google Maps API.",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8",
    "name": "CodeExtractionBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "Text containing code blocks to extract (e.g., AI response)",
          "placeholder": "Enter text containing code blocks",
          "secret": false,
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "html": {
          "advanced": false,
          "description": "Extracted HTML code",
          "secret": false,
          "title": "Html",
          "type": "string"
        },
        "css": {
          "advanced": false,
          "description": "Extracted CSS code",
          "secret": false,
          "title": "Css",
          "type": "string"
        },
        "javascript": {
          "advanced": false,
          "description": "Extracted JavaScript code",
          "secret": false,
          "title": "Javascript",
          "type": "string"
        },
        "python": {
          "advanced": false,
          "description": "Extracted Python code",
          "secret": false,
          "title": "Python",
          "type": "string"
        },
        "sql": {
          "advanced": false,
          "description": "Extracted SQL code",
          "secret": false,
          "title": "Sql",
          "type": "string"
        },
        "java": {
          "advanced": false,
          "description": "Extracted Java code",
          "secret": false,
          "title": "Java",
          "type": "string"
        },
        "cpp": {
          "advanced": false,
          "description": "Extracted C++ code",
          "secret": false,
          "title": "Cpp",
          "type": "string"
        },
        "csharp": {
          "advanced": false,
          "description": "Extracted C# code",
          "secret": false,
          "title": "Csharp",
          "type": "string"
        },
        "json_code": {
          "advanced": false,
          "description": "Extracted JSON code",
          "secret": false,
          "title": "Json Code",
          "type": "string"
        },
        "bash": {
          "advanced": false,
          "description": "Extracted Bash code",
          "secret": false,
          "title": "Bash",
          "type": "string"
        },
        "php": {
          "advanced": false,
          "description": "Extracted PHP code",
          "secret": false,
          "title": "Php",
          "type": "string"
        },
        "ruby": {
          "advanced": false,
          "description": "Extracted Ruby code",
          "secret": false,
          "title": "Ruby",
          "type": "string"
        },
        "yaml": {
          "advanced": false,
          "description": "Extracted YAML code",
          "secret": false,
          "title": "Yaml",
          "type": "string"
        },
        "markdown": {
          "advanced": false,
          "description": "Extracted Markdown code",
          "secret": false,
          "title": "Markdown",
          "type": "string"
        },
        "typescript": {
          "advanced": false,
          "description": "Extracted TypeScript code",
          "secret": false,
          "title": "Typescript",
          "type": "string"
        },
        "xml": {
          "advanced": false,
          "description": "Extracted XML code",
          "secret": false,
          "title": "Xml",
          "type": "string"
        },
        "remaining_text": {
          "advanced": false,
          "description": "Remaining text after code extraction",
          "secret": false,
          "title": "Remaining Text",
          "type": "string"
        }
      },
      "required": [
        "html",
        "css",
        "javascript",
        "python",
        "sql",
        "java",
        "cpp",
        "csharp",
        "json_code",
        "bash",
        "php",
        "ruby",
        "yaml",
        "markdown",
        "typescript",
        "xml",
        "remaining_text"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Extracts code blocks from text and identifies their programming languages",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "dce97578-86be-45a4-ae50-f6de33fc935a",
    "name": "AddMemoryBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["mem0"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "mem0",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.MEM0: 'mem0'>], Literal['api_key']]",
          "type": "object",
          "description": "Mem0 API key credentials"
        },
        "content": {
          "advanced": true,
          "default": {
            "discriminator": "content",
            "content": "I'm a vegetarian"
          },
          "description": "Content to add - either a string or list of message objects as output from an AI block",
          "discriminator": {
            "mapping": {
              "content": "#/$defs/Content",
              "conversation": "#/$defs/Conversation"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "content",
                  "title": "Discriminator",
                  "type": "string"
                },
                "content": { "title": "Content", "type": "string" }
              },
              "required": ["discriminator", "content"],
              "title": "Content",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "conversation",
                  "title": "Discriminator",
                  "type": "string"
                },
                "messages": {
                  "items": {
                    "additionalProperties": { "type": "string" },
                    "type": "object"
                  },
                  "title": "Messages",
                  "type": "array"
                }
              },
              "required": ["discriminator", "messages"],
              "title": "Conversation",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Content"
        },
        "metadata": {
          "additionalProperties": true,
          "advanced": true,
          "description": "Optional metadata for the memory",
          "secret": false,
          "title": "Metadata",
          "type": "object"
        },
        "limit_memory_to_run": {
          "advanced": true,
          "default": false,
          "description": "Limit the memory to the run",
          "secret": false,
          "title": "Limit Memory To Run",
          "type": "boolean"
        },
        "limit_memory_to_agent": {
          "advanced": true,
          "default": false,
          "description": "Limit the memory to the agent",
          "secret": false,
          "title": "Limit Memory To Agent",
          "type": "boolean"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "action": {
          "advanced": false,
          "description": "Action of the operation",
          "secret": false,
          "title": "Action",
          "type": "string"
        },
        "memory": {
          "advanced": false,
          "description": "Memory created",
          "secret": false,
          "title": "Memory",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if operation fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["action", "memory", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Add new memories to Mem0 with user segmentation",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "bd7c84e3-e073-4b75-810c-600886ec8a5b",
    "name": "SearchMemoryBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["mem0"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "mem0",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.MEM0: 'mem0'>], Literal['api_key']]",
          "type": "object",
          "description": "Mem0 API key credentials"
        },
        "query": {
          "advanced": false,
          "description": "Search query",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "trigger": {
          "advanced": false,
          "default": false,
          "description": "An unused field that is used to (re-)trigger the block when you have no other inputs",
          "secret": false,
          "title": "Trigger",
          "type": "boolean"
        },
        "categories_filter": {
          "advanced": true,
          "description": "Categories to filter by",
          "items": { "type": "string" },
          "secret": false,
          "title": "Categories Filter",
          "type": "array"
        },
        "limit_memory_to_run": {
          "advanced": true,
          "default": false,
          "description": "Limit the memory to the run",
          "secret": false,
          "title": "Limit Memory To Run",
          "type": "boolean"
        },
        "limit_memory_to_agent": {
          "advanced": true,
          "default": true,
          "description": "Limit the memory to the agent",
          "secret": false,
          "title": "Limit Memory To Agent",
          "type": "boolean"
        }
      },
      "required": ["credentials", "query"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "memories": {
          "advanced": false,
          "description": "List of matching memories",
          "secret": false,
          "title": "Memories"
        },
        "error": {
          "advanced": false,
          "description": "Error message if operation fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["memories", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Search memories in Mem0 by user",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "45aee5bf-4767-45d1-a28b-e01c5aae9fc1",
    "name": "GetAllMemoriesBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["mem0"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "mem0",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.MEM0: 'mem0'>], Literal['api_key']]",
          "type": "object",
          "description": "Mem0 API key credentials"
        },
        "trigger": {
          "advanced": false,
          "default": false,
          "description": "An unused field that is used to trigger the block when you have no other inputs",
          "secret": false,
          "title": "Trigger",
          "type": "boolean"
        },
        "categories": {
          "advanced": true,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Filter by categories",
          "secret": false,
          "title": "Categories"
        },
        "limit_memory_to_run": {
          "advanced": true,
          "default": false,
          "description": "Limit the memory to the run",
          "secret": false,
          "title": "Limit Memory To Run",
          "type": "boolean"
        },
        "limit_memory_to_agent": {
          "advanced": true,
          "default": false,
          "description": "Limit the memory to the agent",
          "secret": false,
          "title": "Limit Memory To Agent",
          "type": "boolean"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "memories": {
          "advanced": false,
          "description": "List of memories",
          "secret": false,
          "title": "Memories"
        },
        "error": {
          "advanced": false,
          "description": "Error message if operation fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["memories", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Retrieve all memories from Mem0 with pagination",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "2570e8fe-8447-43ed-84c7-70d657923231",
    "name": "TextDecoderBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "A string containing escaped characters to be decoded",
          "placeholder": "Your entire text block with \\n and \\\" escaped characters",
          "secret": false,
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "decoded_text": {
          "advanced": false,
          "description": "The decoded text with escape sequences processed",
          "secret": false,
          "title": "Decoded Text",
          "type": "string"
        }
      },
      "required": ["decoded_text"],
      "title": "Output",
      "type": "object"
    },
    "description": "Decodes a string containing escape sequences into actual text",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a892b8d9-3e4e-4e9c-9c1e-75f8efcf1bfa",
    "name": "GetCurrentTimeBlock",
    "inputSchema": {
      "properties": {
        "trigger": {
          "advanced": false,
          "description": "Trigger any data to output the current time",
          "secret": false,
          "title": "Trigger",
          "type": "string"
        },
        "format": {
          "advanced": true,
          "default": "%H:%M:%S",
          "description": "Format of the time to output",
          "secret": false,
          "title": "Format",
          "type": "string"
        }
      },
      "required": ["trigger"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "time": {
          "advanced": false,
          "description": "Current time in the specified format (default: %H:%M:%S)",
          "secret": false,
          "title": "Time",
          "type": "string"
        }
      },
      "required": ["time"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block outputs the current time.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b29c1b50-5d0e-4d9f-8f9d-1b0e6fcbf0b1",
    "name": "GetCurrentDateBlock",
    "inputSchema": {
      "properties": {
        "trigger": {
          "advanced": false,
          "description": "Trigger any data to output the current date",
          "secret": false,
          "title": "Trigger",
          "type": "string"
        },
        "offset": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "string" }],
          "default": 0,
          "description": "Offset in days from the current date",
          "secret": false,
          "title": "Days Offset"
        },
        "format": {
          "advanced": true,
          "default": "%Y-%m-%d",
          "description": "Format of the date to output",
          "secret": false,
          "title": "Format",
          "type": "string"
        }
      },
      "required": ["trigger"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "date": {
          "advanced": false,
          "description": "Current date in the specified format (default: YYYY-MM-DD)",
          "secret": false,
          "title": "Date",
          "type": "string"
        }
      },
      "required": ["date"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block outputs the current date with an optional offset.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "716a67b3-6760-42e7-86dc-18645c6e00fc",
    "name": "GetCurrentDateAndTimeBlock",
    "inputSchema": {
      "properties": {
        "trigger": {
          "advanced": false,
          "description": "Trigger any data to output the current date and time",
          "secret": false,
          "title": "Trigger",
          "type": "string"
        },
        "format": {
          "advanced": true,
          "default": "%Y-%m-%d %H:%M:%S",
          "description": "Format of the date and time to output",
          "secret": false,
          "title": "Format",
          "type": "string"
        }
      },
      "required": ["trigger"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "date_time": {
          "advanced": false,
          "description": "Current date and time in the specified format (default: YYYY-MM-DD HH:MM:SS)",
          "secret": false,
          "title": "Date Time",
          "type": "string"
        }
      },
      "required": ["date_time"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block outputs the current date and time.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d67a9c52-5e4e-11e2-bcfd-0800200c9a71",
    "name": "CountdownTimerBlock",
    "inputSchema": {
      "properties": {
        "input_message": {
          "advanced": false,
          "default": "timer finished",
          "description": "Message to output after the timer finishes",
          "secret": false,
          "title": "Input Message"
        },
        "seconds": {
          "advanced": false,
          "anyOf": [{ "type": "integer" }, { "type": "string" }],
          "default": 0,
          "description": "Duration in seconds",
          "secret": false,
          "title": "Seconds"
        },
        "minutes": {
          "advanced": false,
          "anyOf": [{ "type": "integer" }, { "type": "string" }],
          "default": 0,
          "description": "Duration in minutes",
          "secret": false,
          "title": "Minutes"
        },
        "hours": {
          "advanced": false,
          "anyOf": [{ "type": "integer" }, { "type": "string" }],
          "default": 0,
          "description": "Duration in hours",
          "secret": false,
          "title": "Hours"
        },
        "days": {
          "advanced": false,
          "anyOf": [{ "type": "integer" }, { "type": "string" }],
          "default": 0,
          "description": "Duration in days",
          "secret": false,
          "title": "Days"
        },
        "repeat": {
          "advanced": true,
          "default": 1,
          "description": "Number of times to repeat the timer",
          "secret": false,
          "title": "Repeat",
          "type": "integer"
        }
      },
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "output_message": {
          "advanced": false,
          "description": "Message after the timer finishes",
          "secret": false,
          "title": "Output Message"
        }
      },
      "required": ["output_message"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block triggers after a specified duration.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5ebe6768-8e5d-41e3-9134-1c7bd89a8d52",
    "name": "ReadRSSFeedBlock",
    "inputSchema": {
      "properties": {
        "rss_url": {
          "advanced": false,
          "description": "The URL of the RSS feed to read",
          "placeholder": "https://example.com/rss",
          "secret": false,
          "title": "Rss Url",
          "type": "string"
        },
        "time_period": {
          "advanced": true,
          "default": 1440,
          "description": "The time period to check in minutes relative to the run block runtime, e.g. 60 would check for new entries in the last hour.",
          "placeholder": "1440",
          "secret": false,
          "title": "Time Period",
          "type": "integer"
        },
        "polling_rate": {
          "advanced": false,
          "description": "The number of seconds to wait between polling attempts.",
          "placeholder": "300",
          "secret": false,
          "title": "Polling Rate",
          "type": "integer"
        },
        "run_continuously": {
          "advanced": true,
          "default": true,
          "description": "Whether to run the block continuously or just once.",
          "secret": false,
          "title": "Run Continuously",
          "type": "boolean"
        }
      },
      "required": ["rss_url", "polling_rate"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "entry": {
          "properties": {
            "title": { "title": "Title", "type": "string" },
            "link": { "title": "Link", "type": "string" },
            "description": { "title": "Description", "type": "string" },
            "pub_date": {
              "format": "date-time",
              "title": "Pub Date",
              "type": "string"
            },
            "author": { "title": "Author", "type": "string" },
            "categories": {
              "items": { "type": "string" },
              "title": "Categories",
              "type": "array"
            }
          },
          "required": [
            "title",
            "link",
            "description",
            "pub_date",
            "author",
            "categories"
          ],
          "title": "RSSEntry",
          "type": "object",
          "advanced": false,
          "description": "The RSS item",
          "secret": false
        }
      },
      "required": ["entry"],
      "title": "Output",
      "type": "object"
    },
    "description": "Reads RSS feed entries from a given URL.",
    "categories": [
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "715696a0-e1da-45c8-b209-c2fa9c3b0be6",
    "name": "ConditionBlock",
    "inputSchema": {
      "properties": {
        "value1": {
          "advanced": false,
          "description": "Enter the first value for comparison",
          "placeholder": "For example: 10 or 'hello' or True",
          "secret": false,
          "title": "Value1"
        },
        "operator": {
          "enum": ["==", "!=", ">", "<", ">=", "<="],
          "title": "ComparisonOperator",
          "type": "string",
          "advanced": false,
          "description": "Choose the comparison operator",
          "placeholder": "Select an operator",
          "secret": false
        },
        "value2": {
          "advanced": false,
          "description": "Enter the second value for comparison",
          "placeholder": "For example: 20 or 'world' or False",
          "secret": false,
          "title": "Value2"
        },
        "yes_value": {
          "advanced": true,
          "default": null,
          "description": "(Optional) Value to output if the condition is true. If not provided, value1 will be used.",
          "placeholder": "Leave empty to use value1, or enter a specific value",
          "secret": false,
          "title": "Yes Value"
        },
        "no_value": {
          "advanced": true,
          "default": null,
          "description": "(Optional) Value to output if the condition is false. If not provided, value1 will be used.",
          "placeholder": "Leave empty to use value1, or enter a specific value",
          "secret": false,
          "title": "No Value"
        }
      },
      "required": ["value1", "operator", "value2"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "The result of the condition evaluation (True or False)",
          "secret": false,
          "title": "Result",
          "type": "boolean"
        },
        "yes_output": {
          "advanced": false,
          "description": "The output value if the condition is true",
          "secret": false,
          "title": "Yes Output"
        },
        "no_output": {
          "advanced": false,
          "description": "The output value if the condition is false",
          "secret": false,
          "title": "No Output"
        }
      },
      "required": ["result", "yes_output", "no_output"],
      "title": "Output",
      "type": "object"
    },
    "description": "Handles conditional logic based on comparison operators",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6dbbc4b3-ca6c-42b6-b508-da52d23e13f2",
    "name": "IfInputMatchesBlock",
    "inputSchema": {
      "properties": {
        "input": {
          "advanced": false,
          "description": "The input to match against",
          "placeholder": "For example: 10 or 'hello' or True",
          "secret": false,
          "title": "Input"
        },
        "value": {
          "advanced": false,
          "description": "The value to output if the input matches",
          "placeholder": "For example: 'Greater' or 20 or False",
          "secret": false,
          "title": "Value"
        },
        "yes_value": {
          "advanced": true,
          "default": null,
          "description": "The value to output if the input matches",
          "placeholder": "For example: 'Greater' or 20 or False",
          "secret": false,
          "title": "Yes Value"
        },
        "no_value": {
          "advanced": true,
          "default": null,
          "description": "The value to output if the input does not match",
          "placeholder": "For example: 'Greater' or 20 or False",
          "secret": false,
          "title": "No Value"
        }
      },
      "required": ["input", "value"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "The result of the condition evaluation (True or False)",
          "secret": false,
          "title": "Result",
          "type": "boolean"
        },
        "yes_output": {
          "advanced": false,
          "description": "The output value if the condition is true",
          "secret": false,
          "title": "Yes Output"
        },
        "no_output": {
          "advanced": false,
          "description": "The output value if the condition is false",
          "secret": false,
          "title": "No Output"
        }
      },
      "required": ["result", "yes_output", "no_output"],
      "title": "Output",
      "type": "object"
    },
    "description": "Handles conditional logic based on comparison operators",
    "categories": [
      {
        "category": "LOGIC",
        "description": "Programming logic to control the flow of your agent"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1bba7e54-2310-4a31-8e6f-54d5f9ab7459",
    "name": "TodoistCreateCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "content": {
          "advanced": false,
          "description": "Comment content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "id_type": {
          "advanced": false,
          "default": { "discriminator": "task", "task_id": "" },
          "description": "Specify either task_id or project_id to comment on",
          "discriminator": {
            "mapping": {
              "project": "#/$defs/ProjectId",
              "task": "#/$defs/TaskId"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "task",
                  "title": "Discriminator",
                  "type": "string"
                },
                "task_id": { "title": "Task Id", "type": "string" }
              },
              "required": ["discriminator", "task_id"],
              "title": "TaskId",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "project",
                  "title": "Discriminator",
                  "type": "string"
                },
                "project_id": { "title": "Project Id", "type": "string" }
              },
              "required": ["discriminator", "project_id"],
              "title": "ProjectId",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Id Type"
        },
        "attachment": {
          "advanced": true,
          "anyOf": [
            { "additionalProperties": true, "type": "object" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Optional file attachment",
          "secret": false,
          "title": "Attachment"
        }
      },
      "required": ["credentials", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of created comment",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "Comment content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "posted_at": {
          "advanced": false,
          "description": "Comment timestamp",
          "secret": false,
          "title": "Posted At",
          "type": "string"
        },
        "task_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Associated task ID",
          "secret": false,
          "title": "Task Id"
        },
        "project_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Associated project ID",
          "secret": false,
          "title": "Project Id"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "content", "posted_at", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new comment on a Todoist task or project",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9972d8ae-ddf2-11ef-a9b8-32d3674e8b7e",
    "name": "TodoistGetCommentsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "id_type": {
          "advanced": false,
          "default": { "discriminator": "task", "task_id": "" },
          "description": "Specify either task_id or project_id to get comments for",
          "discriminator": {
            "mapping": {
              "project": "#/$defs/ProjectId",
              "task": "#/$defs/TaskId"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "task",
                  "title": "Discriminator",
                  "type": "string"
                },
                "task_id": { "title": "Task Id", "type": "string" }
              },
              "required": ["discriminator", "task_id"],
              "title": "TaskId",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "project",
                  "title": "Discriminator",
                  "type": "string"
                },
                "project_id": { "title": "Project Id", "type": "string" }
              },
              "required": ["discriminator", "project_id"],
              "title": "ProjectId",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Id Type"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "comments": {
          "advanced": false,
          "description": "List of comments",
          "items": {},
          "secret": false,
          "title": "Comments",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["comments", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get all comments for a Todoist task or project",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a809d264-ddf2-11ef-9764-32d3674e8b7e",
    "name": "TodoistGetCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "comment_id": {
          "advanced": false,
          "description": "Comment ID to retrieve",
          "secret": false,
          "title": "Comment Id",
          "type": "string"
        }
      },
      "required": ["credentials", "comment_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "content": {
          "advanced": false,
          "description": "Comment content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "id": {
          "advanced": false,
          "description": "Comment ID",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "posted_at": {
          "advanced": false,
          "description": "Comment timestamp",
          "secret": false,
          "title": "Posted At",
          "type": "string"
        },
        "project_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Associated project ID",
          "secret": false,
          "title": "Project Id"
        },
        "task_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Associated task ID",
          "secret": false,
          "title": "Task Id"
        },
        "attachment": {
          "advanced": true,
          "anyOf": [
            { "additionalProperties": true, "type": "object" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Optional file attachment",
          "secret": false,
          "title": "Attachment"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["content", "id", "posted_at", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get a single comment from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b773c520-ddf2-11ef-9f34-32d3674e8b7e",
    "name": "TodoistUpdateCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "comment_id": {
          "advanced": false,
          "description": "Comment ID to update",
          "secret": false,
          "title": "Comment Id",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "New content for the comment",
          "secret": false,
          "title": "Content",
          "type": "string"
        }
      },
      "required": ["credentials", "comment_id", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the update was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Updates a Todoist comment",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "bda4c020-ddf2-11ef-b114-32d3674e8b7e",
    "name": "TodoistDeleteCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "comment_id": {
          "advanced": false,
          "description": "Comment ID to delete",
          "secret": false,
          "title": "Comment Id",
          "type": "string"
        }
      },
      "required": ["credentials", "comment_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the deletion was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Deletes a Todoist comment",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7288a968-de14-11ef-8997-32d3674e8b7e",
    "name": "TodoistCreateLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "name": {
          "advanced": false,
          "description": "Name of the label",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "order": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Label order",
          "secret": false,
          "title": "Order"
        },
        "color": {
          "advanced": true,
          "anyOf": [
            {
              "enum": [
                "berry_red",
                "red",
                "orange",
                "yellow",
                "olive_green",
                "lime_green",
                "green",
                "mint_green",
                "teal",
                "sky_blue",
                "light_blue",
                "blue",
                "grape",
                "violet",
                "lavender",
                "magenta",
                "salmon",
                "charcoal",
                "grey",
                "taupe"
              ],
              "title": "Colors",
              "type": "string"
            },
            { "type": "null" }
          ],
          "default": "charcoal",
          "description": "The color of the label icon",
          "secret": false
        },
        "is_favorite": {
          "advanced": true,
          "default": false,
          "description": "Whether the label is a favorite",
          "secret": false,
          "title": "Is Favorite",
          "type": "boolean"
        }
      },
      "required": ["credentials", "name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of the created label",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "name": {
          "advanced": false,
          "description": "Name of the label",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "color": {
          "advanced": false,
          "description": "Color of the label",
          "secret": false,
          "title": "Color",
          "type": "string"
        },
        "order": {
          "advanced": false,
          "description": "Label order",
          "secret": false,
          "title": "Order",
          "type": "integer"
        },
        "is_favorite": {
          "advanced": false,
          "description": "Favorite status",
          "secret": false,
          "title": "Is Favorite",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "name", "color", "order", "is_favorite", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new label in Todoist, It will not work if same name already exists",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "776dd750-de14-11ef-b927-32d3674e8b7e",
    "name": "TodoistListLabelsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "labels": {
          "advanced": false,
          "description": "List of complete label data",
          "items": {},
          "secret": false,
          "title": "Labels",
          "type": "array"
        },
        "label_ids": {
          "advanced": false,
          "description": "List of label IDs",
          "items": {},
          "secret": false,
          "title": "Label Ids",
          "type": "array"
        },
        "label_names": {
          "advanced": false,
          "description": "List of label names",
          "items": {},
          "secret": false,
          "title": "Label Names",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["labels", "label_ids", "label_names", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets all personal labels from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7f236514-de14-11ef-bd7a-32d3674e8b7e",
    "name": "TodoistGetLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "label_id": {
          "advanced": false,
          "description": "ID of the label to retrieve",
          "secret": false,
          "title": "Label Id",
          "type": "string"
        }
      },
      "required": ["credentials", "label_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of the label",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "name": {
          "advanced": false,
          "description": "Name of the label",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "color": {
          "advanced": false,
          "description": "Color of the label",
          "secret": false,
          "title": "Color",
          "type": "string"
        },
        "order": {
          "advanced": false,
          "description": "Label order",
          "secret": false,
          "title": "Order",
          "type": "integer"
        },
        "is_favorite": {
          "advanced": false,
          "description": "Favorite status",
          "secret": false,
          "title": "Is Favorite",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "name", "color", "order", "is_favorite", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets a personal label from Todoist by ID",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8755614c-de14-11ef-9b56-32d3674e8b7e",
    "name": "TodoistUpdateLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "label_id": {
          "advanced": false,
          "description": "ID of the label to update",
          "secret": false,
          "title": "Label Id",
          "type": "string"
        },
        "name": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "New name of the label",
          "secret": false,
          "title": "Name"
        },
        "order": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Label order",
          "secret": false,
          "title": "Order"
        },
        "color": {
          "advanced": true,
          "anyOf": [
            {
              "enum": [
                "berry_red",
                "red",
                "orange",
                "yellow",
                "olive_green",
                "lime_green",
                "green",
                "mint_green",
                "teal",
                "sky_blue",
                "light_blue",
                "blue",
                "grape",
                "violet",
                "lavender",
                "magenta",
                "salmon",
                "charcoal",
                "grey",
                "taupe"
              ],
              "title": "Colors",
              "type": "string"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "The color of the label icon",
          "secret": false
        },
        "is_favorite": {
          "advanced": true,
          "default": false,
          "description": "Whether the label is a favorite (true/false)",
          "secret": false,
          "title": "Is Favorite",
          "type": "boolean"
        }
      },
      "required": ["credentials", "label_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the update was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Updates a personal label in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "901b8f86-de14-11ef-98b8-32d3674e8b7e",
    "name": "TodoistDeleteLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "label_id": {
          "advanced": false,
          "description": "ID of the label to delete",
          "secret": false,
          "title": "Label Id",
          "type": "string"
        }
      },
      "required": ["credentials", "label_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the deletion was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Deletes a personal label in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "55fba510-de15-11ef-aed2-32d3674e8b7e",
    "name": "TodoistGetSharedLabelsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "labels": {
          "advanced": false,
          "description": "List of shared label names",
          "items": {},
          "secret": false,
          "title": "Labels",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["labels", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets all shared labels from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9d63ad9a-de14-11ef-ab3f-32d3674e8b7e",
    "name": "TodoistRenameSharedLabelsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "name": {
          "advanced": false,
          "description": "The name of the existing label to rename",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "new_name": {
          "advanced": false,
          "description": "The new name for the label",
          "secret": false,
          "title": "New Name",
          "type": "string"
        }
      },
      "required": ["credentials", "name", "new_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the rename was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Renames all instances of a shared label",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a6c5cbde-de14-11ef-8863-32d3674e8b7e",
    "name": "TodoistRemoveSharedLabelsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "name": {
          "advanced": false,
          "description": "The name of the label to remove",
          "secret": false,
          "title": "Name",
          "type": "string"
        }
      },
      "required": ["credentials", "name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the removal was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Removes all instances of a shared label",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "fde4f458-de14-11ef-bf0c-32d3674e8b7e",
    "name": "TodoistCreateTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "content": {
          "advanced": false,
          "description": "Task content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "description": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Task description",
          "secret": false,
          "title": "Description"
        },
        "project_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Project ID this task should belong to",
          "secret": false,
          "title": "Project Id"
        },
        "section_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Section ID this task should belong to",
          "secret": false,
          "title": "Section Id"
        },
        "parent_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Parent task ID",
          "secret": false,
          "title": "Parent Id"
        },
        "order": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Optional order among other tasks,[Non-zero integer value used by clients to sort tasks under the same parent]",
          "secret": false,
          "title": "Order"
        },
        "labels": {
          "advanced": true,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Task labels",
          "secret": false,
          "title": "Labels"
        },
        "priority": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Task priority from 1 (normal) to 4 (urgent)",
          "secret": false,
          "title": "Priority"
        },
        "due_date": {
          "advanced": true,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Due date in YYYY-MM-DD format",
          "secret": false,
          "title": "Due Date"
        },
        "deadline_date": {
          "advanced": true,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Specific date in YYYY-MM-DD format relative to user's timezone",
          "secret": false,
          "title": "Deadline Date"
        },
        "assignee_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Responsible user ID",
          "secret": false,
          "title": "Assignee Id"
        },
        "duration_unit": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Task duration unit (minute/day)",
          "secret": false,
          "title": "Duration Unit"
        },
        "duration": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "depends_on": ["duration_unit"],
          "description": "Task duration amount, You need to selecct the duration unit first",
          "secret": false,
          "title": "Duration"
        }
      },
      "required": ["credentials", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "Task ID",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "url": {
          "advanced": false,
          "description": "Task URL",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "complete_data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete task data as dictionary",
          "secret": false,
          "title": "Complete Data",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "url", "complete_data", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new task in a Todoist project",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "0b706e86-de15-11ef-a113-32d3674e8b7e",
    "name": "TodoistGetTasksBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Filter tasks by project ID",
          "secret": false,
          "title": "Project Id"
        },
        "section_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Filter tasks by section ID",
          "secret": false,
          "title": "Section Id"
        },
        "label": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Filter tasks by label name",
          "secret": false,
          "title": "Label"
        },
        "filter": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Filter by any supported filter, You can see How to use filters or create one of your one here - https://todoist.com/help/articles/introduction-to-filters-V98wIH",
          "secret": false,
          "title": "Filter"
        },
        "lang": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "IETF language tag for filter language",
          "secret": false,
          "title": "Lang"
        },
        "ids": {
          "advanced": false,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "List of task IDs to retrieve",
          "secret": false,
          "title": "Ids"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "Task IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "urls": {
          "advanced": false,
          "description": "Task URLs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Urls",
          "type": "array"
        },
        "complete_data": {
          "advanced": false,
          "description": "Complete task data as dictionary",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Complete Data",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["ids", "urls", "complete_data", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get active tasks from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "16d7dc8c-de15-11ef-8ace-32d3674e8b7e",
    "name": "TodoistGetTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "task_id": {
          "advanced": false,
          "description": "Task ID to retrieve",
          "secret": false,
          "title": "Task Id",
          "type": "string"
        }
      },
      "required": ["credentials", "task_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "project_id": {
          "advanced": false,
          "description": "Project ID containing the task",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        },
        "url": {
          "advanced": false,
          "description": "Task URL",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "complete_data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete task data as dictionary",
          "secret": false,
          "title": "Complete Data",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["project_id", "url", "complete_data", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get an active task from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1eee6d32-de15-11ef-a2ff-32d3674e8b7e",
    "name": "TodoistUpdateTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "task_id": {
          "advanced": false,
          "description": "Task ID to update",
          "secret": false,
          "title": "Task Id",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "Task content",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "description": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Task description",
          "secret": false,
          "title": "Description"
        },
        "project_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Project ID this task should belong to",
          "secret": false,
          "title": "Project Id"
        },
        "section_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Section ID this task should belong to",
          "secret": false,
          "title": "Section Id"
        },
        "parent_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Parent task ID",
          "secret": false,
          "title": "Parent Id"
        },
        "order": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Optional order among other tasks,[Non-zero integer value used by clients to sort tasks under the same parent]",
          "secret": false,
          "title": "Order"
        },
        "labels": {
          "advanced": true,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Task labels",
          "secret": false,
          "title": "Labels"
        },
        "priority": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Task priority from 1 (normal) to 4 (urgent)",
          "secret": false,
          "title": "Priority"
        },
        "due_date": {
          "advanced": true,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Due date in YYYY-MM-DD format",
          "secret": false,
          "title": "Due Date"
        },
        "deadline_date": {
          "advanced": true,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Specific date in YYYY-MM-DD format relative to user's timezone",
          "secret": false,
          "title": "Deadline Date"
        },
        "assignee_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Responsible user ID",
          "secret": false,
          "title": "Assignee Id"
        },
        "duration_unit": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Task duration unit (minute/day)",
          "secret": false,
          "title": "Duration Unit"
        },
        "duration": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "depends_on": ["duration_unit"],
          "description": "Task duration amount, You need to selecct the duration unit first",
          "secret": false,
          "title": "Duration"
        }
      },
      "required": ["credentials", "task_id", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the update was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Updates an existing task in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "29fac798-de15-11ef-b839-32d3674e8b7e",
    "name": "TodoistCloseTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "task_id": {
          "advanced": false,
          "description": "Task ID to close",
          "secret": false,
          "title": "Task Id",
          "type": "string"
        }
      },
      "required": ["credentials", "task_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the task was successfully closed",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Closes a task in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "2e6bf6f8-de15-11ef-ae7c-32d3674e8b7e",
    "name": "TodoistReopenTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "task_id": {
          "advanced": false,
          "description": "Task ID to reopen",
          "secret": false,
          "title": "Task Id",
          "type": "string"
        }
      },
      "required": ["credentials", "task_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the task was successfully reopened",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Reopens a task in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "33c29ada-de15-11ef-bcbb-32d3674e8b7e",
    "name": "TodoistDeleteTaskBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "task_id": {
          "advanced": false,
          "description": "Task ID to delete",
          "secret": false,
          "title": "Task Id",
          "type": "string"
        }
      },
      "required": ["credentials", "task_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the task was successfully deleted",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Deletes a task in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5f3e1d5b-6bc5-40e3-97ee-1318b3f38813",
    "name": "TodoistListProjectsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "names_list": {
          "advanced": false,
          "description": "List of project names",
          "items": { "type": "string" },
          "secret": false,
          "title": "Names List",
          "type": "array"
        },
        "ids_list": {
          "advanced": false,
          "description": "List of project IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids List",
          "type": "array"
        },
        "url_list": {
          "advanced": false,
          "description": "List of project URLs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Url List",
          "type": "array"
        },
        "complete_data": {
          "advanced": false,
          "description": "Complete project data including all fields",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Complete Data",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "names_list",
        "ids_list",
        "url_list",
        "complete_data",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets all projects and their details from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ade60136-de14-11ef-b5e5-32d3674e8b7e",
    "name": "TodoistCreateProjectBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "name": {
          "advanced": false,
          "description": "Name of the project",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "parent_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Parent project ID",
          "secret": false,
          "title": "Parent Id"
        },
        "color": {
          "advanced": true,
          "anyOf": [
            {
              "enum": [
                "berry_red",
                "red",
                "orange",
                "yellow",
                "olive_green",
                "lime_green",
                "green",
                "mint_green",
                "teal",
                "sky_blue",
                "light_blue",
                "blue",
                "grape",
                "violet",
                "lavender",
                "magenta",
                "salmon",
                "charcoal",
                "grey",
                "taupe"
              ],
              "title": "Colors",
              "type": "string"
            },
            { "type": "null" }
          ],
          "default": "charcoal",
          "description": "Color of the project icon",
          "secret": false
        },
        "is_favorite": {
          "advanced": true,
          "default": false,
          "description": "Whether the project is a favorite",
          "secret": false,
          "title": "Is Favorite",
          "type": "boolean"
        },
        "view_style": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Display style (list or board)",
          "secret": false,
          "title": "View Style"
        }
      },
      "required": ["credentials", "name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the creation was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new project in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b435b5ea-de14-11ef-8b51-32d3674e8b7e",
    "name": "TodoistGetProjectBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "description": "ID of the project to get details for",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        }
      },
      "required": ["credentials", "project_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "project_id": {
          "advanced": false,
          "description": "ID of project",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        },
        "project_name": {
          "advanced": false,
          "description": "Name of project",
          "secret": false,
          "title": "Project Name",
          "type": "string"
        },
        "project_url": {
          "advanced": false,
          "description": "URL of project",
          "secret": false,
          "title": "Project Url",
          "type": "string"
        },
        "complete_data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete project data including all fields",
          "secret": false,
          "title": "Complete Data",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "project_id",
        "project_name",
        "project_url",
        "complete_data",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets details for a specific Todoist project",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ba41a20a-de14-11ef-91d7-32d3674e8b7e",
    "name": "TodoistUpdateProjectBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "description": "ID of project to update",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        },
        "name": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "New name for the project",
          "secret": false,
          "title": "Name"
        },
        "color": {
          "advanced": true,
          "anyOf": [
            {
              "enum": [
                "berry_red",
                "red",
                "orange",
                "yellow",
                "olive_green",
                "lime_green",
                "green",
                "mint_green",
                "teal",
                "sky_blue",
                "light_blue",
                "blue",
                "grape",
                "violet",
                "lavender",
                "magenta",
                "salmon",
                "charcoal",
                "grey",
                "taupe"
              ],
              "title": "Colors",
              "type": "string"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "New color for the project icon",
          "secret": false
        },
        "is_favorite": {
          "advanced": true,
          "anyOf": [{ "type": "boolean" }, { "type": "null" }],
          "default": null,
          "description": "Whether the project should be a favorite",
          "secret": false,
          "title": "Is Favorite"
        },
        "view_style": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Display style (list or board)",
          "secret": false,
          "title": "View Style"
        }
      },
      "required": ["credentials", "project_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the update was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Updates an existing project in Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c2893acc-de14-11ef-a113-32d3674e8b7e",
    "name": "TodoistDeleteProjectBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "description": "ID of project to delete",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        }
      },
      "required": ["credentials", "project_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the deletion was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Deletes a Todoist project and all its contents",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c99c804e-de14-11ef-9f47-32d3674e8b7e",
    "name": "TodoistListCollaboratorsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "description": "ID of the project to get collaborators for",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        }
      },
      "required": ["credentials", "project_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "collaborator_ids": {
          "advanced": false,
          "description": "List of collaborator IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Collaborator Ids",
          "type": "array"
        },
        "collaborator_names": {
          "advanced": false,
          "description": "List of collaborator names",
          "items": { "type": "string" },
          "secret": false,
          "title": "Collaborator Names",
          "type": "array"
        },
        "collaborator_emails": {
          "advanced": false,
          "description": "List of collaborator email addresses",
          "items": { "type": "string" },
          "secret": false,
          "title": "Collaborator Emails",
          "type": "array"
        },
        "complete_data": {
          "advanced": false,
          "description": "Complete collaborator data including all fields",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Complete Data",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "collaborator_ids",
        "collaborator_names",
        "collaborator_emails",
        "complete_data",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets all collaborators for a specific Todoist project",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d6a116d8-de14-11ef-a94c-32d3674e8b7e",
    "name": "TodoistListSectionsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "project_id": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "description": "Optional project ID to filter sections",
          "secret": false,
          "title": "Project Id"
        }
      },
      "required": ["credentials", "project_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "names_list": {
          "advanced": false,
          "description": "List of section names",
          "items": { "type": "string" },
          "secret": false,
          "title": "Names List",
          "type": "array"
        },
        "ids_list": {
          "advanced": false,
          "description": "List of section IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids List",
          "type": "array"
        },
        "complete_data": {
          "advanced": false,
          "description": "Complete section data including all fields",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Complete Data",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["names_list", "ids_list", "complete_data", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets all sections and their details from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ea5580e2-de14-11ef-a5d3-32d3674e8b7e",
    "name": "TodoistGetSectionBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "section_id": {
          "advanced": false,
          "description": "ID of section to fetch",
          "secret": false,
          "title": "Section Id",
          "type": "string"
        }
      },
      "required": ["credentials", "section_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of section",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "project_id": {
          "advanced": false,
          "description": "Project ID the section belongs to",
          "secret": false,
          "title": "Project Id",
          "type": "string"
        },
        "order": {
          "advanced": false,
          "description": "Order of the section",
          "secret": false,
          "title": "Order",
          "type": "integer"
        },
        "name": {
          "advanced": false,
          "description": "Name of the section",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "project_id", "order", "name", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Gets a single section by ID from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f0e52eee-de14-11ef-9b12-32d3674e8b7e",
    "name": "TodoistDeleteSectionBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["todoist"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "todoist",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TODOIST: 'todoist'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "task:add",
            "data:delete",
            "project:delete",
            "data:read_write",
            "data:read"
          ],
          "description": "The Todoist integration requires OAuth2 authentication."
        },
        "section_id": {
          "advanced": false,
          "description": "ID of section to delete",
          "secret": false,
          "title": "Section Id",
          "type": "string"
        }
      },
      "required": ["credentials", "section_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether section was successfully deleted",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Deletes a section and all its tasks from Todoist",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8865699f-9188-43c4-89b0-79c84cfaa03e",
    "name": "CreateCampaignBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the campaign",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["smartlead"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "smartlead",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SMARTLEAD: 'smartlead'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "SmartLead credentials",
          "secret": false
        }
      },
      "required": ["name", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "The ID of the created campaign",
          "secret": false,
          "title": "Id",
          "type": "integer"
        },
        "name": {
          "advanced": false,
          "description": "The name of the created campaign",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "created_at": {
          "advanced": false,
          "description": "The date and time the campaign was created",
          "secret": false,
          "title": "Created At",
          "type": "string"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the search failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "name", "created_at"],
      "title": "Output",
      "type": "object"
    },
    "description": "Create a campaign in SmartLead",
    "categories": [
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "fb8106a4-1a8f-42f9-a502-f6d07e6fe0ec",
    "name": "AddLeadToCampaignBlock",
    "inputSchema": {
      "properties": {
        "campaign_id": {
          "advanced": false,
          "description": "The ID of the campaign to add the lead to",
          "secret": false,
          "title": "Campaign Id",
          "type": "integer"
        },
        "lead_list": {
          "advanced": false,
          "description": "An array of JSON objects, each representing a lead's details. Can hold max 100 leads.",
          "items": {
            "description": "Single lead input data",
            "properties": {
              "first_name": { "title": "First Name", "type": "string" },
              "last_name": { "title": "Last Name", "type": "string" },
              "email": { "title": "Email", "type": "string" },
              "phone_number": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Phone Number"
              },
              "company_name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Company Name"
              },
              "website": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Website"
              },
              "location": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Location"
              },
              "custom_fields": {
                "anyOf": [
                  {
                    "description": "Custom fields for a lead (max 20 fields)",
                    "properties": {
                      "fields": {
                        "additionalProperties": { "type": "string" },
                        "advanced": true,
                        "description": "Custom fields for a lead (max 20 fields)",
                        "maxProperties": 20,
                        "secret": false,
                        "title": "Fields",
                        "type": "object"
                      }
                    },
                    "title": "LeadCustomFields",
                    "type": "object"
                  },
                  { "type": "null" }
                ],
                "default": null
              },
              "linkedin_profile": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Linkedin Profile"
              },
              "company_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Company Url"
              }
            },
            "required": ["first_name", "last_name", "email"],
            "title": "LeadInput",
            "type": "object"
          },
          "maxItems": 100,
          "secret": false,
          "title": "Lead List",
          "type": "array"
        },
        "settings": {
          "description": "Settings for lead upload",
          "properties": {
            "ignore_global_block_list": {
              "advanced": true,
              "default": false,
              "description": "Ignore the global block list",
              "secret": false,
              "title": "Ignore Global Block List",
              "type": "boolean"
            },
            "ignore_unsubscribe_list": {
              "advanced": true,
              "default": false,
              "description": "Ignore the unsubscribe list",
              "secret": false,
              "title": "Ignore Unsubscribe List",
              "type": "boolean"
            },
            "ignore_community_bounce_list": {
              "advanced": true,
              "default": false,
              "description": "Ignore the community bounce list",
              "secret": false,
              "title": "Ignore Community Bounce List",
              "type": "boolean"
            },
            "ignore_duplicate_leads_in_other_campaign": {
              "advanced": true,
              "default": false,
              "description": "Ignore duplicate leads in other campaigns",
              "secret": false,
              "title": "Ignore Duplicate Leads In Other Campaign",
              "type": "boolean"
            }
          },
          "title": "LeadUploadSettings",
          "type": "object",
          "advanced": true,
          "default": {
            "ignore_global_block_list": false,
            "ignore_unsubscribe_list": false,
            "ignore_community_bounce_list": false,
            "ignore_duplicate_leads_in_other_campaign": false
          },
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["smartlead"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "smartlead",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SMARTLEAD: 'smartlead'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "SmartLead credentials",
          "secret": false
        }
      },
      "required": ["campaign_id", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "campaign_id": {
          "advanced": false,
          "description": "The ID of the campaign the lead was added to (passed through)",
          "secret": false,
          "title": "Campaign Id",
          "type": "integer"
        },
        "upload_count": {
          "advanced": false,
          "description": "The number of leads added to the campaign",
          "secret": false,
          "title": "Upload Count",
          "type": "integer"
        },
        "already_added_to_campaign": {
          "advanced": false,
          "description": "The number of leads that were already added to the campaign",
          "secret": false,
          "title": "Already Added To Campaign",
          "type": "integer"
        },
        "duplicate_count": {
          "advanced": false,
          "description": "The number of emails that were duplicates",
          "secret": false,
          "title": "Duplicate Count",
          "type": "integer"
        },
        "invalid_email_count": {
          "advanced": false,
          "description": "The number of emails that were invalidly formatted",
          "secret": false,
          "title": "Invalid Email Count",
          "type": "integer"
        },
        "is_lead_limit_exhausted": {
          "advanced": false,
          "description": "Whether the lead limit was exhausted",
          "secret": false,
          "title": "Is Lead Limit Exhausted",
          "type": "boolean"
        },
        "lead_import_stopped_count": {
          "advanced": false,
          "description": "The number of leads that were not added to the campaign because the lead import was stopped",
          "secret": false,
          "title": "Lead Import Stopped Count",
          "type": "integer"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the lead was not added to the campaign",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "campaign_id",
        "upload_count",
        "already_added_to_campaign",
        "duplicate_count",
        "invalid_email_count",
        "is_lead_limit_exhausted",
        "lead_import_stopped_count"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "Add a lead to a campaign in SmartLead",
    "categories": [
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e7d9f41c-dc10-4f39-98ba-a432abd128c0",
    "name": "SaveCampaignSequencesBlock",
    "inputSchema": {
      "properties": {
        "campaign_id": {
          "advanced": false,
          "description": "The ID of the campaign to save sequences for",
          "secret": false,
          "title": "Campaign Id",
          "type": "integer"
        },
        "sequences": {
          "advanced": false,
          "description": "The sequences to save",
          "items": {
            "properties": {
              "seq_number": {
                "advanced": true,
                "default": 1,
                "description": "The sequence number",
                "secret": false,
                "title": "Seq Number",
                "type": "integer"
              },
              "seq_delay_details": {
                "properties": {
                  "delay_in_days": {
                    "title": "Delay In Days",
                    "type": "integer"
                  }
                },
                "required": ["delay_in_days"],
                "title": "SequenceDelayDetails",
                "type": "object"
              },
              "id": {
                "anyOf": [{ "type": "integer" }, { "type": "null" }],
                "default": null,
                "title": "Id"
              },
              "variant_distribution_type": {
                "anyOf": [
                  {
                    "enum": ["MANUAL_EQUAL", "MANUAL_PERCENTAGE", "AI_EQUAL"],
                    "title": "VariantDistributionType",
                    "type": "string"
                  },
                  { "type": "null" }
                ],
                "default": null
              },
              "lead_distribution_percentage": {
                "advanced": true,
                "anyOf": [
                  { "maximum": 100, "minimum": 20, "type": "integer" },
                  { "type": "null" }
                ],
                "default": null,
                "secret": false,
                "title": "Lead Distribution Percentage"
              },
              "winning_metric_property": {
                "anyOf": [
                  {
                    "enum": [
                      "OPEN_RATE",
                      "CLICK_RATE",
                      "REPLY_RATE",
                      "POSITIVE_REPLY_RATE"
                    ],
                    "title": "WinningMetricProperty",
                    "type": "string"
                  },
                  { "type": "null" }
                ],
                "default": null
              },
              "seq_variants": {
                "anyOf": [
                  {
                    "items": {
                      "properties": {
                        "subject": { "title": "Subject", "type": "string" },
                        "email_body": {
                          "title": "Email Body",
                          "type": "string"
                        },
                        "variant_label": {
                          "title": "Variant Label",
                          "type": "string"
                        },
                        "id": {
                          "anyOf": [{ "type": "integer" }, { "type": "null" }],
                          "default": null,
                          "title": "Id"
                        },
                        "variant_distribution_percentage": {
                          "anyOf": [{ "type": "integer" }, { "type": "null" }],
                          "default": null,
                          "title": "Variant Distribution Percentage"
                        }
                      },
                      "required": ["subject", "email_body", "variant_label"],
                      "title": "SequenceVariant",
                      "type": "object"
                    },
                    "type": "array"
                  },
                  { "type": "null" }
                ],
                "default": null,
                "title": "Seq Variants"
              },
              "subject": {
                "default": "",
                "title": "Subject",
                "type": "string"
              },
              "email_body": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email Body"
              }
            },
            "required": ["seq_delay_details"],
            "title": "Sequence",
            "type": "object"
          },
          "secret": false,
          "title": "Sequences",
          "type": "array"
        },
        "credentials": {
          "credentials_provider": ["smartlead"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "smartlead",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SMARTLEAD: 'smartlead'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "SmartLead credentials",
          "secret": false
        }
      },
      "required": ["campaign_id", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "data": {
          "advanced": true,
          "anyOf": [
            { "additionalProperties": true, "type": "object" },
            { "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Data from the API",
          "secret": false,
          "title": "Data"
        },
        "message": {
          "advanced": true,
          "default": "",
          "description": "Message from the API",
          "secret": false,
          "title": "Message",
          "type": "string"
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the sequences were not saved",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "title": "Output",
      "type": "object"
    },
    "description": "Save sequences within a campaign",
    "categories": [
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "806fb15e-830f-4796-8692-557d300ff43c",
    "name": "JinaChunkingBlock",
    "inputSchema": {
      "properties": {
        "texts": {
          "advanced": false,
          "description": "List of texts to chunk",
          "items": {},
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "credentials": {
          "credentials_provider": ["jina"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "jina",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.JINA: 'jina'>], Literal['api_key']]",
          "type": "object",
          "description": "The Jina integration can be used with an API Key."
        },
        "max_chunk_length": {
          "advanced": true,
          "default": 1000,
          "description": "Maximum length of each chunk",
          "secret": false,
          "title": "Max Chunk Length",
          "type": "integer"
        },
        "return_tokens": {
          "advanced": true,
          "default": false,
          "description": "Whether to return token information",
          "secret": false,
          "title": "Return Tokens",
          "type": "boolean"
        }
      },
      "required": ["texts", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "chunks": {
          "advanced": false,
          "description": "List of chunked texts",
          "items": {},
          "secret": false,
          "title": "Chunks",
          "type": "array"
        },
        "tokens": {
          "advanced": false,
          "description": "List of token information for each chunk",
          "items": {},
          "secret": false,
          "title": "Tokens",
          "type": "array"
        }
      },
      "required": ["chunks", "tokens"],
      "title": "Output",
      "type": "object"
    },
    "description": "Chunks texts using Jina AI's segmentation service",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." },
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d38b6c5e-9968-4271-8423-6cfe60d6e7e6",
    "name": "FactCheckerBlock",
    "inputSchema": {
      "properties": {
        "statement": {
          "advanced": false,
          "description": "The statement to check for factuality",
          "secret": false,
          "title": "Statement",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["jina"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "jina",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.JINA: 'jina'>], Literal['api_key']]",
          "type": "object",
          "description": "The Jina integration can be used with an API Key."
        }
      },
      "required": ["statement", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "factuality": {
          "advanced": false,
          "description": "The factuality score of the statement",
          "secret": false,
          "title": "Factuality",
          "type": "number"
        },
        "result": {
          "advanced": false,
          "description": "The result of the factuality check",
          "secret": false,
          "title": "Result",
          "type": "boolean"
        },
        "reason": {
          "advanced": false,
          "description": "The reason for the factuality result",
          "secret": false,
          "title": "Reason",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the check fails",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["factuality", "result", "reason", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block checks the factuality of a given statement using Jina AI's Grounding API.",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c2adb3aa-5aae-488d-8a6e-4eb8c23e2ed6",
    "name": "SearchPeopleBlock",
    "inputSchema": {
      "properties": {
        "person_titles": {
          "advanced": false,
          "description": "Job titles held by the people you want to find. For a person to be included in search results, they only need to match 1 of the job titles you add. Adding more job titles expands your search results.\n\n        Results also include job titles with the same terms, even if they are not exact matches. For example, searching for marketing manager might return people with the job title content marketing manager.\n\n        Use this parameter in combination with the person_seniorities[] parameter to find people based on specific job functions and seniority levels.\n        ",
          "items": { "type": "string" },
          "secret": false,
          "title": "Person Titles",
          "type": "array"
        },
        "person_locations": {
          "advanced": false,
          "description": "The location where people live. You can search across cities, US states, and countries.\n\n        To find people based on the headquarters locations of their current employer, use the organization_locations parameter.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Person Locations",
          "type": "array"
        },
        "person_seniorities": {
          "advanced": false,
          "description": "The job seniority that people hold within their current employer. This enables you to find people that currently hold positions at certain reporting levels, such as Director level or senior IC level.\n\n        For a person to be included in search results, they only need to match 1 of the seniorities you add. Adding more seniorities expands your search results.\n\n        Searches only return results based on their current job title, so searching for Director-level employees only returns people that currently hold a Director-level title. If someone was previously a Director, but is currently a VP, they would not be included in your search results.\n\n        Use this parameter in combination with the person_titles[] parameter to find people based on specific job functions and seniority levels.",
          "items": {
            "description": "Seniority levels in Apollo",
            "enum": [
              "owner",
              "founder",
              "c_suite",
              "partner",
              "vp",
              "head",
              "director",
              "manager",
              "senior",
              "entry",
              "intern"
            ],
            "title": "SenorityLevels",
            "type": "string"
          },
          "secret": false,
          "title": "Person Seniorities",
          "type": "array"
        },
        "organization_locations": {
          "advanced": false,
          "description": "The location of the company headquarters for a person's current employer. You can search across cities, US states, and countries.\n\n        If a company has several office locations, results are still based on the headquarters location. For example, if you search chicago but a company's HQ location is in boston, people that work for the Boston-based company will not appear in your results, even if they match other parameters.\n\n        To find people based on their personal location, use the person_locations parameter.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Organization Locations",
          "type": "array"
        },
        "q_organization_domains": {
          "advanced": false,
          "description": "The domain name for the person's employer. This can be the current employer or a previous employer. Do not include www., the @ symbol, or similar.\n\n        You can add multiple domains to search across companies.\n\n          Examples: apollo.io and microsoft.com",
          "items": { "type": "string" },
          "secret": false,
          "title": "Q Organization Domains",
          "type": "array"
        },
        "contact_email_statuses": {
          "advanced": false,
          "description": "The email statuses for the people you want to find. You can add multiple statuses to expand your search.",
          "items": {
            "description": "Contact email statuses in Apollo",
            "enum": [
              "verified",
              "unverified",
              "likely_to_engage",
              "unavailable"
            ],
            "title": "ContactEmailStatuses",
            "type": "string"
          },
          "secret": false,
          "title": "Contact Email Statuses",
          "type": "array"
        },
        "organization_ids": {
          "advanced": false,
          "description": "The Apollo IDs for the companies (employers) you want to include in your search results. Each company in the Apollo database is assigned a unique ID.\n\n        To find IDs, call the Organization Search endpoint and identify the values for organization_id.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Organization Ids",
          "type": "array"
        },
        "organization_num_empoloyees_range": {
          "advanced": false,
          "description": "The number range of employees working for the company. This enables you to find companies based on headcount. You can add multiple ranges to expand your search results.\n\n        Each range you add needs to be a string, with the upper and lower numbers of the range separated only by a comma.",
          "items": { "type": "integer" },
          "secret": false,
          "title": "Organization Num Empoloyees Range",
          "type": "array"
        },
        "q_keywords": {
          "advanced": false,
          "default": "",
          "description": "A string of words over which we want to filter the results",
          "secret": false,
          "title": "Q Keywords",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "default": 100,
          "description": "The maximum number of results to return. If you don't specify this parameter, the default is 100.",
          "maximum": 50000,
          "minimum": 1,
          "secret": false,
          "title": "Max Results",
          "type": "integer"
        },
        "credentials": {
          "credentials_provider": ["apollo"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "apollo",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.APOLLO: 'apollo'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "Apollo credentials",
          "secret": false
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "people": {
          "advanced": true,
          "description": "List of people found",
          "items": {
            "additionalProperties": true,
            "description": "A contact in Apollo",
            "properties": {
              "contact_roles": {
                "default": [],
                "items": {},
                "title": "Contact Roles",
                "type": "array"
              },
              "id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Id"
              },
              "first_name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "First Name"
              },
              "last_name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Last Name"
              },
              "name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Name"
              },
              "linkedin_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Linkedin Url"
              },
              "title": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Title"
              },
              "contact_stage_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Contact Stage Id"
              },
              "owner_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Owner Id"
              },
              "creator_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Creator Id"
              },
              "person_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Person Id"
              },
              "email_needs_tickling": {
                "default": true,
                "title": "Email Needs Tickling",
                "type": "boolean"
              },
              "organization_name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Organization Name"
              },
              "source": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Source"
              },
              "original_source": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Original Source"
              },
              "organization_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Organization Id"
              },
              "headline": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Headline"
              },
              "photo_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Photo Url"
              },
              "present_raw_address": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Present Raw Address"
              },
              "linkededin_uid": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Linkededin Uid"
              },
              "extrapolated_email_confidence": {
                "anyOf": [{ "type": "number" }, { "type": "null" }],
                "default": null,
                "title": "Extrapolated Email Confidence"
              },
              "salesforce_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Salesforce Id"
              },
              "salesforce_lead_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Salesforce Lead Id"
              },
              "salesforce_contact_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Salesforce Contact Id"
              },
              "saleforce_account_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Saleforce Account Id"
              },
              "crm_owner_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Crm Owner Id"
              },
              "created_at": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Created At"
              },
              "emailer_campaign_ids": {
                "default": [],
                "items": { "type": "string" },
                "title": "Emailer Campaign Ids",
                "type": "array"
              },
              "direct_dial_status": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Direct Dial Status"
              },
              "direct_dial_enrichment_failed_at": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Direct Dial Enrichment Failed At"
              },
              "email_status": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email Status"
              },
              "email_source": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email Source"
              },
              "account_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Account Id"
              },
              "last_activity_date": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Last Activity Date"
              },
              "hubspot_vid": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Hubspot Vid"
              },
              "hubspot_company_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Hubspot Company Id"
              },
              "crm_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Crm Id"
              },
              "sanitized_phone": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Sanitized Phone"
              },
              "merged_crm_ids": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Merged Crm Ids"
              },
              "updated_at": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Updated At"
              },
              "queued_for_crm_push": {
                "default": true,
                "title": "Queued For Crm Push",
                "type": "boolean"
              },
              "suggested_from_rule_engine_config_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Suggested From Rule Engine Config Id"
              },
              "email_unsubscribed": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email Unsubscribed"
              },
              "label_ids": {
                "default": [],
                "items": {},
                "title": "Label Ids",
                "type": "array"
              },
              "has_pending_email_arcgate_request": {
                "default": true,
                "title": "Has Pending Email Arcgate Request",
                "type": "boolean"
              },
              "has_email_arcgate_request": {
                "default": true,
                "title": "Has Email Arcgate Request",
                "type": "boolean"
              },
              "existence_level": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Existence Level"
              },
              "email": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email"
              },
              "email_from_customer": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email From Customer"
              },
              "typed_custom_fields": {
                "default": [],
                "items": {
                  "description": "A typed custom field in Apollo",
                  "properties": {
                    "id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Id"
                    },
                    "value": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Value"
                    }
                  },
                  "title": "TypedCustomField",
                  "type": "object"
                },
                "title": "Typed Custom Fields",
                "type": "array"
              },
              "custom_field_errors": {
                "default": null,
                "title": "Custom Field Errors"
              },
              "salesforce_record_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Salesforce Record Id"
              },
              "crm_record_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Crm Record Url"
              },
              "email_status_unavailable_reason": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email Status Unavailable Reason"
              },
              "email_true_status": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Email True Status"
              },
              "updated_email_true_status": {
                "default": true,
                "title": "Updated Email True Status",
                "type": "boolean"
              },
              "contact_rule_config_statuses": {
                "default": [],
                "items": {
                  "description": "A rule config status in Apollo",
                  "properties": {
                    "created_at": { "title": "Created At", "type": "string" },
                    "rule_action_config_id": {
                      "title": "Rule Action Config Id",
                      "type": "string"
                    },
                    "rule_config_id": {
                      "title": "Rule Config Id",
                      "type": "string"
                    },
                    "status_cd": { "title": "Status Cd", "type": "string" },
                    "updated_at": { "title": "Updated At", "type": "string" },
                    "id": { "title": "Id", "type": "string" },
                    "key": { "title": "Key", "type": "string" }
                  },
                  "required": [
                    "created_at",
                    "rule_action_config_id",
                    "rule_config_id",
                    "status_cd",
                    "updated_at",
                    "id",
                    "key"
                  ],
                  "title": "RuleConfigStatus",
                  "type": "object"
                },
                "title": "Contact Rule Config Statuses",
                "type": "array"
              },
              "source_display_name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Source Display Name"
              },
              "twitter_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Twitter Url"
              },
              "contact_campaign_statuses": {
                "default": [],
                "items": {
                  "description": "A contact campaign status in Apollo",
                  "properties": {
                    "id": { "title": "Id", "type": "string" },
                    "emailer_campaign_id": {
                      "title": "Emailer Campaign Id",
                      "type": "string"
                    },
                    "send_email_from_user_id": {
                      "title": "Send Email From User Id",
                      "type": "string"
                    },
                    "inactive_reason": {
                      "title": "Inactive Reason",
                      "type": "string"
                    },
                    "status": { "title": "Status", "type": "string" },
                    "added_at": { "title": "Added At", "type": "string" },
                    "added_by_user_id": {
                      "title": "Added By User Id",
                      "type": "string"
                    },
                    "finished_at": { "title": "Finished At", "type": "string" },
                    "paused_at": { "title": "Paused At", "type": "string" },
                    "auto_unpause_at": {
                      "title": "Auto Unpause At",
                      "type": "string"
                    },
                    "send_email_from_email_address": {
                      "title": "Send Email From Email Address",
                      "type": "string"
                    },
                    "send_email_from_email_account_id": {
                      "title": "Send Email From Email Account Id",
                      "type": "string"
                    },
                    "manually_set_unpause": {
                      "title": "Manually Set Unpause",
                      "type": "string"
                    },
                    "failure_reason": {
                      "title": "Failure Reason",
                      "type": "string"
                    },
                    "current_step_id": {
                      "title": "Current Step Id",
                      "type": "string"
                    },
                    "in_response_to_emailer_message_id": {
                      "title": "In Response To Emailer Message Id",
                      "type": "string"
                    },
                    "cc_emails": { "title": "Cc Emails", "type": "string" },
                    "bcc_emails": { "title": "Bcc Emails", "type": "string" },
                    "to_emails": { "title": "To Emails", "type": "string" }
                  },
                  "required": [
                    "id",
                    "emailer_campaign_id",
                    "send_email_from_user_id",
                    "inactive_reason",
                    "status",
                    "added_at",
                    "added_by_user_id",
                    "finished_at",
                    "paused_at",
                    "auto_unpause_at",
                    "send_email_from_email_address",
                    "send_email_from_email_account_id",
                    "manually_set_unpause",
                    "failure_reason",
                    "current_step_id",
                    "in_response_to_emailer_message_id",
                    "cc_emails",
                    "bcc_emails",
                    "to_emails"
                  ],
                  "title": "ContactCampaignStatus",
                  "type": "object"
                },
                "title": "Contact Campaign Statuses",
                "type": "array"
              },
              "state": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "State"
              },
              "city": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "City"
              },
              "country": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Country"
              },
              "account": {
                "anyOf": [
                  {
                    "description": "An account in Apollo",
                    "properties": {
                      "id": { "title": "Id", "type": "string" },
                      "name": { "title": "Name", "type": "string" },
                      "website_url": {
                        "title": "Website Url",
                        "type": "string"
                      },
                      "blog_url": { "title": "Blog Url", "type": "string" },
                      "angellist_url": {
                        "title": "Angellist Url",
                        "type": "string"
                      },
                      "linkedin_url": {
                        "title": "Linkedin Url",
                        "type": "string"
                      },
                      "twitter_url": {
                        "title": "Twitter Url",
                        "type": "string"
                      },
                      "facebook_url": {
                        "title": "Facebook Url",
                        "type": "string"
                      },
                      "primary_phone": {
                        "description": "A primary phone in Apollo",
                        "properties": {
                          "number": { "title": "Number", "type": "string" },
                          "source": { "title": "Source", "type": "string" },
                          "sanitized_number": {
                            "title": "Sanitized Number",
                            "type": "string"
                          }
                        },
                        "required": ["number", "source", "sanitized_number"],
                        "title": "PrimaryPhone",
                        "type": "object"
                      },
                      "languages": {
                        "items": { "type": "string" },
                        "title": "Languages",
                        "type": "array"
                      },
                      "alexa_ranking": {
                        "title": "Alexa Ranking",
                        "type": "integer"
                      },
                      "phone": { "title": "Phone", "type": "string" },
                      "linkedin_uid": {
                        "title": "Linkedin Uid",
                        "type": "string"
                      },
                      "founded_year": {
                        "title": "Founded Year",
                        "type": "integer"
                      },
                      "publicly_traded_symbol": {
                        "title": "Publicly Traded Symbol",
                        "type": "string"
                      },
                      "publicly_traded_exchange": {
                        "title": "Publicly Traded Exchange",
                        "type": "string"
                      },
                      "logo_url": { "title": "Logo Url", "type": "string" },
                      "chrunchbase_url": {
                        "title": "Chrunchbase Url",
                        "type": "string"
                      },
                      "primary_domain": {
                        "title": "Primary Domain",
                        "type": "string"
                      },
                      "domain": { "title": "Domain", "type": "string" },
                      "team_id": { "title": "Team Id", "type": "string" },
                      "organization_id": {
                        "title": "Organization Id",
                        "type": "string"
                      },
                      "account_stage_id": {
                        "title": "Account Stage Id",
                        "type": "string"
                      },
                      "source": { "title": "Source", "type": "string" },
                      "original_source": {
                        "title": "Original Source",
                        "type": "string"
                      },
                      "creator_id": { "title": "Creator Id", "type": "string" },
                      "owner_id": { "title": "Owner Id", "type": "string" },
                      "created_at": { "title": "Created At", "type": "string" },
                      "phone_status": {
                        "title": "Phone Status",
                        "type": "string"
                      },
                      "hubspot_id": { "title": "Hubspot Id", "type": "string" },
                      "salesforce_id": {
                        "title": "Salesforce Id",
                        "type": "string"
                      },
                      "crm_owner_id": {
                        "title": "Crm Owner Id",
                        "type": "string"
                      },
                      "parent_account_id": {
                        "title": "Parent Account Id",
                        "type": "string"
                      },
                      "sanitized_phone": {
                        "title": "Sanitized Phone",
                        "type": "string"
                      },
                      "account_playbook_statues": {
                        "items": {},
                        "title": "Account Playbook Statues",
                        "type": "array"
                      },
                      "account_rule_config_statuses": {
                        "items": {
                          "description": "A rule config status in Apollo",
                          "properties": {
                            "created_at": {
                              "title": "Created At",
                              "type": "string"
                            },
                            "rule_action_config_id": {
                              "title": "Rule Action Config Id",
                              "type": "string"
                            },
                            "rule_config_id": {
                              "title": "Rule Config Id",
                              "type": "string"
                            },
                            "status_cd": {
                              "title": "Status Cd",
                              "type": "string"
                            },
                            "updated_at": {
                              "title": "Updated At",
                              "type": "string"
                            },
                            "id": { "title": "Id", "type": "string" },
                            "key": { "title": "Key", "type": "string" }
                          },
                          "required": [
                            "created_at",
                            "rule_action_config_id",
                            "rule_config_id",
                            "status_cd",
                            "updated_at",
                            "id",
                            "key"
                          ],
                          "title": "RuleConfigStatus",
                          "type": "object"
                        },
                        "title": "Account Rule Config Statuses",
                        "type": "array"
                      },
                      "existence_level": {
                        "title": "Existence Level",
                        "type": "string"
                      },
                      "label_ids": {
                        "items": { "type": "string" },
                        "title": "Label Ids",
                        "type": "array"
                      },
                      "typed_custom_fields": { "title": "Typed Custom Fields" },
                      "custom_field_errors": { "title": "Custom Field Errors" },
                      "modality": { "title": "Modality", "type": "string" },
                      "source_display_name": {
                        "title": "Source Display Name",
                        "type": "string"
                      },
                      "salesforce_record_id": {
                        "title": "Salesforce Record Id",
                        "type": "string"
                      },
                      "crm_record_url": {
                        "title": "Crm Record Url",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "website_url",
                      "blog_url",
                      "angellist_url",
                      "linkedin_url",
                      "twitter_url",
                      "facebook_url",
                      "primary_phone",
                      "languages",
                      "alexa_ranking",
                      "phone",
                      "linkedin_uid",
                      "founded_year",
                      "publicly_traded_symbol",
                      "publicly_traded_exchange",
                      "logo_url",
                      "chrunchbase_url",
                      "primary_domain",
                      "domain",
                      "team_id",
                      "organization_id",
                      "account_stage_id",
                      "source",
                      "original_source",
                      "creator_id",
                      "owner_id",
                      "created_at",
                      "phone_status",
                      "hubspot_id",
                      "salesforce_id",
                      "crm_owner_id",
                      "parent_account_id",
                      "sanitized_phone",
                      "account_playbook_statues",
                      "account_rule_config_statuses",
                      "existence_level",
                      "label_ids",
                      "typed_custom_fields",
                      "custom_field_errors",
                      "modality",
                      "source_display_name",
                      "salesforce_record_id",
                      "crm_record_url"
                    ],
                    "title": "Account",
                    "type": "object"
                  },
                  { "type": "null" }
                ],
                "default": null
              },
              "contact_emails": {
                "default": [],
                "items": {
                  "description": "A contact email in Apollo",
                  "properties": {
                    "email": {
                      "default": "",
                      "title": "Email",
                      "type": "string"
                    },
                    "email_md5": {
                      "default": "",
                      "title": "Email Md5",
                      "type": "string"
                    },
                    "email_sha256": {
                      "default": "",
                      "title": "Email Sha256",
                      "type": "string"
                    },
                    "email_status": {
                      "default": "",
                      "title": "Email Status",
                      "type": "string"
                    },
                    "email_source": {
                      "default": "",
                      "title": "Email Source",
                      "type": "string"
                    },
                    "extrapolated_email_confidence": {
                      "default": "",
                      "title": "Extrapolated Email Confidence",
                      "type": "string"
                    },
                    "position": {
                      "default": 0,
                      "title": "Position",
                      "type": "integer"
                    },
                    "email_from_customer": {
                      "default": "",
                      "title": "Email From Customer",
                      "type": "string"
                    },
                    "free_domain": {
                      "default": true,
                      "title": "Free Domain",
                      "type": "boolean"
                    }
                  },
                  "title": "ContactEmail",
                  "type": "object"
                },
                "title": "Contact Emails",
                "type": "array"
              },
              "organization": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "description": "An organization in Apollo",
                    "properties": {
                      "id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Id"
                      },
                      "name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Name"
                      },
                      "website_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Website Url"
                      },
                      "blog_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Blog Url"
                      },
                      "angellist_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Angellist Url"
                      },
                      "linkedin_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Linkedin Url"
                      },
                      "twitter_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Twitter Url"
                      },
                      "facebook_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Facebook Url"
                      },
                      "primary_phone": {
                        "anyOf": [
                          {
                            "description": "A primary phone in Apollo",
                            "properties": {
                              "number": { "title": "Number", "type": "string" },
                              "source": { "title": "Source", "type": "string" },
                              "sanitized_number": {
                                "title": "Sanitized Number",
                                "type": "string"
                              }
                            },
                            "required": [
                              "number",
                              "source",
                              "sanitized_number"
                            ],
                            "title": "PrimaryPhone",
                            "type": "object"
                          },
                          { "type": "null" }
                        ],
                        "default": {
                          "number": "N/A",
                          "source": "N/A",
                          "sanitized_number": "N/A"
                        }
                      },
                      "languages": {
                        "default": [],
                        "items": { "type": "string" },
                        "title": "Languages",
                        "type": "array"
                      },
                      "alexa_ranking": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "default": 0,
                        "title": "Alexa Ranking"
                      },
                      "phone": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Phone"
                      },
                      "linkedin_uid": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Linkedin Uid"
                      },
                      "founded_year": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "default": 0,
                        "title": "Founded Year"
                      },
                      "publicly_traded_symbol": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Publicly Traded Symbol"
                      },
                      "publicly_traded_exchange": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Publicly Traded Exchange"
                      },
                      "logo_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Logo Url"
                      },
                      "chrunchbase_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Chrunchbase Url"
                      },
                      "primary_domain": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Primary Domain"
                      },
                      "sanitized_phone": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Sanitized Phone"
                      },
                      "owned_by_organization_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Owned By Organization Id"
                      },
                      "intent_strength": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Intent Strength"
                      },
                      "show_intent": {
                        "default": true,
                        "title": "Show Intent",
                        "type": "boolean"
                      },
                      "has_intent_signal_account": {
                        "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                        "default": true,
                        "title": "Has Intent Signal Account"
                      },
                      "intent_signal_account": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "default": "N/A",
                        "title": "Intent Signal Account"
                      }
                    },
                    "title": "Organization",
                    "type": "object"
                  },
                  { "type": "null" }
                ],
                "default": null
              },
              "employment_history": {
                "default": [],
                "items": {
                  "additionalProperties": true,
                  "description": "An employment history in Apollo",
                  "properties": {
                    "created_at": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Created At"
                    },
                    "current": {
                      "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                      "default": null,
                      "title": "Current"
                    },
                    "degree": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Degree"
                    },
                    "description": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Description"
                    },
                    "emails": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Emails"
                    },
                    "end_date": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "End Date"
                    },
                    "grade_level": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Grade Level"
                    },
                    "kind": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Kind"
                    },
                    "major": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Major"
                    },
                    "organization_id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Organization Id"
                    },
                    "organization_name": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Organization Name"
                    },
                    "raw_address": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Raw Address"
                    },
                    "start_date": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Start Date"
                    },
                    "title": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Title"
                    },
                    "updated_at": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Updated At"
                    },
                    "id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Id"
                    },
                    "key": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Key"
                    }
                  },
                  "title": "EmploymentHistory",
                  "type": "object"
                },
                "title": "Employment History",
                "type": "array"
              },
              "time_zone": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Time Zone"
              },
              "intent_strength": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Intent Strength"
              },
              "show_intent": {
                "default": true,
                "title": "Show Intent",
                "type": "boolean"
              },
              "phone_numbers": {
                "default": [],
                "items": {
                  "description": "A phone number in Apollo",
                  "properties": {
                    "raw_number": {
                      "default": "",
                      "title": "Raw Number",
                      "type": "string"
                    },
                    "sanitized_number": {
                      "default": "",
                      "title": "Sanitized Number",
                      "type": "string"
                    },
                    "type": {
                      "default": "",
                      "title": "Type",
                      "type": "string"
                    },
                    "position": {
                      "default": 0,
                      "title": "Position",
                      "type": "integer"
                    },
                    "status": {
                      "default": "",
                      "title": "Status",
                      "type": "string"
                    },
                    "dnc_status": {
                      "default": "",
                      "title": "Dnc Status",
                      "type": "string"
                    },
                    "dnc_other_info": {
                      "default": "",
                      "title": "Dnc Other Info",
                      "type": "string"
                    },
                    "dailer_flags": {
                      "description": "A dialer flags in Apollo",
                      "properties": {
                        "country_name": {
                          "title": "Country Name",
                          "type": "string"
                        },
                        "country_enabled": {
                          "title": "Country Enabled",
                          "type": "boolean"
                        },
                        "high_risk_calling_enabled": {
                          "title": "High Risk Calling Enabled",
                          "type": "boolean"
                        },
                        "potential_high_risk_number": {
                          "title": "Potential High Risk Number",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "country_name",
                        "country_enabled",
                        "high_risk_calling_enabled",
                        "potential_high_risk_number"
                      ],
                      "title": "DialerFlags",
                      "type": "object",
                      "default": {
                        "country_name": "",
                        "country_enabled": true,
                        "high_risk_calling_enabled": true,
                        "potential_high_risk_number": true
                      }
                    }
                  },
                  "title": "PhoneNumber",
                  "type": "object"
                },
                "title": "Phone Numbers",
                "type": "array"
              },
              "account_phone_note": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Account Phone Note"
              },
              "free_domain": {
                "default": true,
                "title": "Free Domain",
                "type": "boolean"
              },
              "is_likely_to_engage": {
                "default": true,
                "title": "Is Likely To Engage",
                "type": "boolean"
              },
              "email_domain_catchall": {
                "default": true,
                "title": "Email Domain Catchall",
                "type": "boolean"
              },
              "contact_job_change_event": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": null,
                "title": "Contact Job Change Event"
              }
            },
            "title": "Contact",
            "type": "object"
          },
          "secret": false,
          "title": "People",
          "type": "array"
        },
        "person": {
          "additionalProperties": true,
          "description": "Each found person, one at a time",
          "properties": {
            "contact_roles": {
              "default": [],
              "items": {},
              "title": "Contact Roles",
              "type": "array"
            },
            "id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Id"
            },
            "first_name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "First Name"
            },
            "last_name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Last Name"
            },
            "name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Name"
            },
            "linkedin_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Linkedin Url"
            },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "contact_stage_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Contact Stage Id"
            },
            "owner_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Owner Id"
            },
            "creator_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Creator Id"
            },
            "person_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Person Id"
            },
            "email_needs_tickling": {
              "default": true,
              "title": "Email Needs Tickling",
              "type": "boolean"
            },
            "organization_name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Organization Name"
            },
            "source": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Source"
            },
            "original_source": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Original Source"
            },
            "organization_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Organization Id"
            },
            "headline": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Headline"
            },
            "photo_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Photo Url"
            },
            "present_raw_address": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Present Raw Address"
            },
            "linkededin_uid": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Linkededin Uid"
            },
            "extrapolated_email_confidence": {
              "anyOf": [{ "type": "number" }, { "type": "null" }],
              "default": null,
              "title": "Extrapolated Email Confidence"
            },
            "salesforce_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Salesforce Id"
            },
            "salesforce_lead_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Salesforce Lead Id"
            },
            "salesforce_contact_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Salesforce Contact Id"
            },
            "saleforce_account_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Saleforce Account Id"
            },
            "crm_owner_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Crm Owner Id"
            },
            "created_at": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Created At"
            },
            "emailer_campaign_ids": {
              "default": [],
              "items": { "type": "string" },
              "title": "Emailer Campaign Ids",
              "type": "array"
            },
            "direct_dial_status": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Direct Dial Status"
            },
            "direct_dial_enrichment_failed_at": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Direct Dial Enrichment Failed At"
            },
            "email_status": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email Status"
            },
            "email_source": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email Source"
            },
            "account_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Account Id"
            },
            "last_activity_date": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Last Activity Date"
            },
            "hubspot_vid": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Hubspot Vid"
            },
            "hubspot_company_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Hubspot Company Id"
            },
            "crm_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Crm Id"
            },
            "sanitized_phone": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Sanitized Phone"
            },
            "merged_crm_ids": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Merged Crm Ids"
            },
            "updated_at": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Updated At"
            },
            "queued_for_crm_push": {
              "default": true,
              "title": "Queued For Crm Push",
              "type": "boolean"
            },
            "suggested_from_rule_engine_config_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Suggested From Rule Engine Config Id"
            },
            "email_unsubscribed": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email Unsubscribed"
            },
            "label_ids": {
              "default": [],
              "items": {},
              "title": "Label Ids",
              "type": "array"
            },
            "has_pending_email_arcgate_request": {
              "default": true,
              "title": "Has Pending Email Arcgate Request",
              "type": "boolean"
            },
            "has_email_arcgate_request": {
              "default": true,
              "title": "Has Email Arcgate Request",
              "type": "boolean"
            },
            "existence_level": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Existence Level"
            },
            "email": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email"
            },
            "email_from_customer": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email From Customer"
            },
            "typed_custom_fields": {
              "default": [],
              "items": {
                "description": "A typed custom field in Apollo",
                "properties": {
                  "id": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": "N/A",
                    "title": "Id"
                  },
                  "value": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": "N/A",
                    "title": "Value"
                  }
                },
                "title": "TypedCustomField",
                "type": "object"
              },
              "title": "Typed Custom Fields",
              "type": "array"
            },
            "custom_field_errors": {
              "default": null,
              "title": "Custom Field Errors"
            },
            "salesforce_record_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Salesforce Record Id"
            },
            "crm_record_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Crm Record Url"
            },
            "email_status_unavailable_reason": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email Status Unavailable Reason"
            },
            "email_true_status": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Email True Status"
            },
            "updated_email_true_status": {
              "default": true,
              "title": "Updated Email True Status",
              "type": "boolean"
            },
            "contact_rule_config_statuses": {
              "default": [],
              "items": {
                "description": "A rule config status in Apollo",
                "properties": {
                  "created_at": { "title": "Created At", "type": "string" },
                  "rule_action_config_id": {
                    "title": "Rule Action Config Id",
                    "type": "string"
                  },
                  "rule_config_id": {
                    "title": "Rule Config Id",
                    "type": "string"
                  },
                  "status_cd": { "title": "Status Cd", "type": "string" },
                  "updated_at": { "title": "Updated At", "type": "string" },
                  "id": { "title": "Id", "type": "string" },
                  "key": { "title": "Key", "type": "string" }
                },
                "required": [
                  "created_at",
                  "rule_action_config_id",
                  "rule_config_id",
                  "status_cd",
                  "updated_at",
                  "id",
                  "key"
                ],
                "title": "RuleConfigStatus",
                "type": "object"
              },
              "title": "Contact Rule Config Statuses",
              "type": "array"
            },
            "source_display_name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Source Display Name"
            },
            "twitter_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Twitter Url"
            },
            "contact_campaign_statuses": {
              "default": [],
              "items": {
                "description": "A contact campaign status in Apollo",
                "properties": {
                  "id": { "title": "Id", "type": "string" },
                  "emailer_campaign_id": {
                    "title": "Emailer Campaign Id",
                    "type": "string"
                  },
                  "send_email_from_user_id": {
                    "title": "Send Email From User Id",
                    "type": "string"
                  },
                  "inactive_reason": {
                    "title": "Inactive Reason",
                    "type": "string"
                  },
                  "status": { "title": "Status", "type": "string" },
                  "added_at": { "title": "Added At", "type": "string" },
                  "added_by_user_id": {
                    "title": "Added By User Id",
                    "type": "string"
                  },
                  "finished_at": { "title": "Finished At", "type": "string" },
                  "paused_at": { "title": "Paused At", "type": "string" },
                  "auto_unpause_at": {
                    "title": "Auto Unpause At",
                    "type": "string"
                  },
                  "send_email_from_email_address": {
                    "title": "Send Email From Email Address",
                    "type": "string"
                  },
                  "send_email_from_email_account_id": {
                    "title": "Send Email From Email Account Id",
                    "type": "string"
                  },
                  "manually_set_unpause": {
                    "title": "Manually Set Unpause",
                    "type": "string"
                  },
                  "failure_reason": {
                    "title": "Failure Reason",
                    "type": "string"
                  },
                  "current_step_id": {
                    "title": "Current Step Id",
                    "type": "string"
                  },
                  "in_response_to_emailer_message_id": {
                    "title": "In Response To Emailer Message Id",
                    "type": "string"
                  },
                  "cc_emails": { "title": "Cc Emails", "type": "string" },
                  "bcc_emails": { "title": "Bcc Emails", "type": "string" },
                  "to_emails": { "title": "To Emails", "type": "string" }
                },
                "required": [
                  "id",
                  "emailer_campaign_id",
                  "send_email_from_user_id",
                  "inactive_reason",
                  "status",
                  "added_at",
                  "added_by_user_id",
                  "finished_at",
                  "paused_at",
                  "auto_unpause_at",
                  "send_email_from_email_address",
                  "send_email_from_email_account_id",
                  "manually_set_unpause",
                  "failure_reason",
                  "current_step_id",
                  "in_response_to_emailer_message_id",
                  "cc_emails",
                  "bcc_emails",
                  "to_emails"
                ],
                "title": "ContactCampaignStatus",
                "type": "object"
              },
              "title": "Contact Campaign Statuses",
              "type": "array"
            },
            "state": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "State"
            },
            "city": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "City"
            },
            "country": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Country"
            },
            "account": {
              "anyOf": [
                {
                  "description": "An account in Apollo",
                  "properties": {
                    "id": { "title": "Id", "type": "string" },
                    "name": { "title": "Name", "type": "string" },
                    "website_url": { "title": "Website Url", "type": "string" },
                    "blog_url": { "title": "Blog Url", "type": "string" },
                    "angellist_url": {
                      "title": "Angellist Url",
                      "type": "string"
                    },
                    "linkedin_url": {
                      "title": "Linkedin Url",
                      "type": "string"
                    },
                    "twitter_url": { "title": "Twitter Url", "type": "string" },
                    "facebook_url": {
                      "title": "Facebook Url",
                      "type": "string"
                    },
                    "primary_phone": {
                      "description": "A primary phone in Apollo",
                      "properties": {
                        "number": { "title": "Number", "type": "string" },
                        "source": { "title": "Source", "type": "string" },
                        "sanitized_number": {
                          "title": "Sanitized Number",
                          "type": "string"
                        }
                      },
                      "required": ["number", "source", "sanitized_number"],
                      "title": "PrimaryPhone",
                      "type": "object"
                    },
                    "languages": {
                      "items": { "type": "string" },
                      "title": "Languages",
                      "type": "array"
                    },
                    "alexa_ranking": {
                      "title": "Alexa Ranking",
                      "type": "integer"
                    },
                    "phone": { "title": "Phone", "type": "string" },
                    "linkedin_uid": {
                      "title": "Linkedin Uid",
                      "type": "string"
                    },
                    "founded_year": {
                      "title": "Founded Year",
                      "type": "integer"
                    },
                    "publicly_traded_symbol": {
                      "title": "Publicly Traded Symbol",
                      "type": "string"
                    },
                    "publicly_traded_exchange": {
                      "title": "Publicly Traded Exchange",
                      "type": "string"
                    },
                    "logo_url": { "title": "Logo Url", "type": "string" },
                    "chrunchbase_url": {
                      "title": "Chrunchbase Url",
                      "type": "string"
                    },
                    "primary_domain": {
                      "title": "Primary Domain",
                      "type": "string"
                    },
                    "domain": { "title": "Domain", "type": "string" },
                    "team_id": { "title": "Team Id", "type": "string" },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string"
                    },
                    "account_stage_id": {
                      "title": "Account Stage Id",
                      "type": "string"
                    },
                    "source": { "title": "Source", "type": "string" },
                    "original_source": {
                      "title": "Original Source",
                      "type": "string"
                    },
                    "creator_id": { "title": "Creator Id", "type": "string" },
                    "owner_id": { "title": "Owner Id", "type": "string" },
                    "created_at": { "title": "Created At", "type": "string" },
                    "phone_status": {
                      "title": "Phone Status",
                      "type": "string"
                    },
                    "hubspot_id": { "title": "Hubspot Id", "type": "string" },
                    "salesforce_id": {
                      "title": "Salesforce Id",
                      "type": "string"
                    },
                    "crm_owner_id": {
                      "title": "Crm Owner Id",
                      "type": "string"
                    },
                    "parent_account_id": {
                      "title": "Parent Account Id",
                      "type": "string"
                    },
                    "sanitized_phone": {
                      "title": "Sanitized Phone",
                      "type": "string"
                    },
                    "account_playbook_statues": {
                      "items": {},
                      "title": "Account Playbook Statues",
                      "type": "array"
                    },
                    "account_rule_config_statuses": {
                      "items": {
                        "description": "A rule config status in Apollo",
                        "properties": {
                          "created_at": {
                            "title": "Created At",
                            "type": "string"
                          },
                          "rule_action_config_id": {
                            "title": "Rule Action Config Id",
                            "type": "string"
                          },
                          "rule_config_id": {
                            "title": "Rule Config Id",
                            "type": "string"
                          },
                          "status_cd": {
                            "title": "Status Cd",
                            "type": "string"
                          },
                          "updated_at": {
                            "title": "Updated At",
                            "type": "string"
                          },
                          "id": { "title": "Id", "type": "string" },
                          "key": { "title": "Key", "type": "string" }
                        },
                        "required": [
                          "created_at",
                          "rule_action_config_id",
                          "rule_config_id",
                          "status_cd",
                          "updated_at",
                          "id",
                          "key"
                        ],
                        "title": "RuleConfigStatus",
                        "type": "object"
                      },
                      "title": "Account Rule Config Statuses",
                      "type": "array"
                    },
                    "existence_level": {
                      "title": "Existence Level",
                      "type": "string"
                    },
                    "label_ids": {
                      "items": { "type": "string" },
                      "title": "Label Ids",
                      "type": "array"
                    },
                    "typed_custom_fields": { "title": "Typed Custom Fields" },
                    "custom_field_errors": { "title": "Custom Field Errors" },
                    "modality": { "title": "Modality", "type": "string" },
                    "source_display_name": {
                      "title": "Source Display Name",
                      "type": "string"
                    },
                    "salesforce_record_id": {
                      "title": "Salesforce Record Id",
                      "type": "string"
                    },
                    "crm_record_url": {
                      "title": "Crm Record Url",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "website_url",
                    "blog_url",
                    "angellist_url",
                    "linkedin_url",
                    "twitter_url",
                    "facebook_url",
                    "primary_phone",
                    "languages",
                    "alexa_ranking",
                    "phone",
                    "linkedin_uid",
                    "founded_year",
                    "publicly_traded_symbol",
                    "publicly_traded_exchange",
                    "logo_url",
                    "chrunchbase_url",
                    "primary_domain",
                    "domain",
                    "team_id",
                    "organization_id",
                    "account_stage_id",
                    "source",
                    "original_source",
                    "creator_id",
                    "owner_id",
                    "created_at",
                    "phone_status",
                    "hubspot_id",
                    "salesforce_id",
                    "crm_owner_id",
                    "parent_account_id",
                    "sanitized_phone",
                    "account_playbook_statues",
                    "account_rule_config_statuses",
                    "existence_level",
                    "label_ids",
                    "typed_custom_fields",
                    "custom_field_errors",
                    "modality",
                    "source_display_name",
                    "salesforce_record_id",
                    "crm_record_url"
                  ],
                  "title": "Account",
                  "type": "object"
                },
                { "type": "null" }
              ],
              "default": null
            },
            "contact_emails": {
              "default": [],
              "items": {
                "description": "A contact email in Apollo",
                "properties": {
                  "email": {
                    "default": "",
                    "title": "Email",
                    "type": "string"
                  },
                  "email_md5": {
                    "default": "",
                    "title": "Email Md5",
                    "type": "string"
                  },
                  "email_sha256": {
                    "default": "",
                    "title": "Email Sha256",
                    "type": "string"
                  },
                  "email_status": {
                    "default": "",
                    "title": "Email Status",
                    "type": "string"
                  },
                  "email_source": {
                    "default": "",
                    "title": "Email Source",
                    "type": "string"
                  },
                  "extrapolated_email_confidence": {
                    "default": "",
                    "title": "Extrapolated Email Confidence",
                    "type": "string"
                  },
                  "position": {
                    "default": 0,
                    "title": "Position",
                    "type": "integer"
                  },
                  "email_from_customer": {
                    "default": "",
                    "title": "Email From Customer",
                    "type": "string"
                  },
                  "free_domain": {
                    "default": true,
                    "title": "Free Domain",
                    "type": "boolean"
                  }
                },
                "title": "ContactEmail",
                "type": "object"
              },
              "title": "Contact Emails",
              "type": "array"
            },
            "organization": {
              "anyOf": [
                {
                  "additionalProperties": true,
                  "description": "An organization in Apollo",
                  "properties": {
                    "id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Id"
                    },
                    "name": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Name"
                    },
                    "website_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Website Url"
                    },
                    "blog_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Blog Url"
                    },
                    "angellist_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Angellist Url"
                    },
                    "linkedin_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Linkedin Url"
                    },
                    "twitter_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Twitter Url"
                    },
                    "facebook_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Facebook Url"
                    },
                    "primary_phone": {
                      "anyOf": [
                        {
                          "description": "A primary phone in Apollo",
                          "properties": {
                            "number": { "title": "Number", "type": "string" },
                            "source": { "title": "Source", "type": "string" },
                            "sanitized_number": {
                              "title": "Sanitized Number",
                              "type": "string"
                            }
                          },
                          "required": ["number", "source", "sanitized_number"],
                          "title": "PrimaryPhone",
                          "type": "object"
                        },
                        { "type": "null" }
                      ],
                      "default": {
                        "number": "N/A",
                        "source": "N/A",
                        "sanitized_number": "N/A"
                      }
                    },
                    "languages": {
                      "default": [],
                      "items": { "type": "string" },
                      "title": "Languages",
                      "type": "array"
                    },
                    "alexa_ranking": {
                      "anyOf": [{ "type": "integer" }, { "type": "null" }],
                      "default": 0,
                      "title": "Alexa Ranking"
                    },
                    "phone": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Phone"
                    },
                    "linkedin_uid": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Linkedin Uid"
                    },
                    "founded_year": {
                      "anyOf": [{ "type": "integer" }, { "type": "null" }],
                      "default": 0,
                      "title": "Founded Year"
                    },
                    "publicly_traded_symbol": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Publicly Traded Symbol"
                    },
                    "publicly_traded_exchange": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Publicly Traded Exchange"
                    },
                    "logo_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Logo Url"
                    },
                    "chrunchbase_url": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Chrunchbase Url"
                    },
                    "primary_domain": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Primary Domain"
                    },
                    "sanitized_phone": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Sanitized Phone"
                    },
                    "owned_by_organization_id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Owned By Organization Id"
                    },
                    "intent_strength": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Intent Strength"
                    },
                    "show_intent": {
                      "default": true,
                      "title": "Show Intent",
                      "type": "boolean"
                    },
                    "has_intent_signal_account": {
                      "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                      "default": true,
                      "title": "Has Intent Signal Account"
                    },
                    "intent_signal_account": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": "N/A",
                      "title": "Intent Signal Account"
                    }
                  },
                  "title": "Organization",
                  "type": "object"
                },
                { "type": "null" }
              ],
              "default": null
            },
            "employment_history": {
              "default": [],
              "items": {
                "additionalProperties": true,
                "description": "An employment history in Apollo",
                "properties": {
                  "created_at": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Created At"
                  },
                  "current": {
                    "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                    "default": null,
                    "title": "Current"
                  },
                  "degree": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Degree"
                  },
                  "description": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Description"
                  },
                  "emails": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Emails"
                  },
                  "end_date": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "End Date"
                  },
                  "grade_level": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Grade Level"
                  },
                  "kind": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Kind"
                  },
                  "major": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Major"
                  },
                  "organization_id": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Organization Id"
                  },
                  "organization_name": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Organization Name"
                  },
                  "raw_address": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Raw Address"
                  },
                  "start_date": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Start Date"
                  },
                  "title": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Title"
                  },
                  "updated_at": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Updated At"
                  },
                  "id": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Id"
                  },
                  "key": {
                    "anyOf": [{ "type": "string" }, { "type": "null" }],
                    "default": null,
                    "title": "Key"
                  }
                },
                "title": "EmploymentHistory",
                "type": "object"
              },
              "title": "Employment History",
              "type": "array"
            },
            "time_zone": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Time Zone"
            },
            "intent_strength": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Intent Strength"
            },
            "show_intent": {
              "default": true,
              "title": "Show Intent",
              "type": "boolean"
            },
            "phone_numbers": {
              "default": [],
              "items": {
                "description": "A phone number in Apollo",
                "properties": {
                  "raw_number": {
                    "default": "",
                    "title": "Raw Number",
                    "type": "string"
                  },
                  "sanitized_number": {
                    "default": "",
                    "title": "Sanitized Number",
                    "type": "string"
                  },
                  "type": { "default": "", "title": "Type", "type": "string" },
                  "position": {
                    "default": 0,
                    "title": "Position",
                    "type": "integer"
                  },
                  "status": {
                    "default": "",
                    "title": "Status",
                    "type": "string"
                  },
                  "dnc_status": {
                    "default": "",
                    "title": "Dnc Status",
                    "type": "string"
                  },
                  "dnc_other_info": {
                    "default": "",
                    "title": "Dnc Other Info",
                    "type": "string"
                  },
                  "dailer_flags": {
                    "description": "A dialer flags in Apollo",
                    "properties": {
                      "country_name": {
                        "title": "Country Name",
                        "type": "string"
                      },
                      "country_enabled": {
                        "title": "Country Enabled",
                        "type": "boolean"
                      },
                      "high_risk_calling_enabled": {
                        "title": "High Risk Calling Enabled",
                        "type": "boolean"
                      },
                      "potential_high_risk_number": {
                        "title": "Potential High Risk Number",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "country_name",
                      "country_enabled",
                      "high_risk_calling_enabled",
                      "potential_high_risk_number"
                    ],
                    "title": "DialerFlags",
                    "type": "object",
                    "default": {
                      "country_name": "",
                      "country_enabled": true,
                      "high_risk_calling_enabled": true,
                      "potential_high_risk_number": true
                    }
                  }
                },
                "title": "PhoneNumber",
                "type": "object"
              },
              "title": "Phone Numbers",
              "type": "array"
            },
            "account_phone_note": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Account Phone Note"
            },
            "free_domain": {
              "default": true,
              "title": "Free Domain",
              "type": "boolean"
            },
            "is_likely_to_engage": {
              "default": true,
              "title": "Is Likely To Engage",
              "type": "boolean"
            },
            "email_domain_catchall": {
              "default": true,
              "title": "Email Domain Catchall",
              "type": "boolean"
            },
            "contact_job_change_event": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Contact Job Change Event"
            }
          },
          "title": "Contact",
          "type": "object",
          "advanced": false,
          "secret": false
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the search failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["person"],
      "title": "Output",
      "type": "object"
    },
    "description": "Search for people in Apollo",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3d71270d-599e-4148-9b95-71b35d2f44f0",
    "name": "SearchOrganizationsBlock",
    "inputSchema": {
      "properties": {
        "organization_num_empoloyees_range": {
          "advanced": true,
          "default": [0, 1000000],
          "description": "The number range of employees working for the company. This enables you to find companies based on headcount. You can add multiple ranges to expand your search results.\n\nEach range you add needs to be a string, with the upper and lower numbers of the range separated only by a comma.",
          "items": { "type": "integer" },
          "secret": false,
          "title": "Organization Num Empoloyees Range",
          "type": "array"
        },
        "organization_locations": {
          "advanced": true,
          "description": "The location of the company headquarters. You can search across cities, US states, and countries.\n\nIf a company has several office locations, results are still based on the headquarters location. For example, if you search chicago but a company's HQ location is in boston, any Boston-based companies will not appearch in your search results, even if they match other parameters.\n\nTo exclude companies based on location, use the organization_not_locations parameter.\n",
          "items": { "type": "string" },
          "secret": false,
          "title": "Organization Locations",
          "type": "array"
        },
        "organizations_not_locations": {
          "advanced": true,
          "description": "Exclude companies from search results based on the location of the company headquarters. You can use cities, US states, and countries as locations to exclude.\n\nThis parameter is useful for ensuring you do not prospect in an undesirable territory. For example, if you use ireland as a value, no Ireland-based companies will appear in your search results.\n",
          "items": { "type": "string" },
          "secret": false,
          "title": "Organizations Not Locations",
          "type": "array"
        },
        "q_organization_keyword_tags": {
          "advanced": true,
          "description": "Filter search results based on keywords associated with companies. For example, you can enter mining as a value to return only companies that have an association with the mining industry.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Q Organization Keyword Tags",
          "type": "array"
        },
        "q_organization_name": {
          "advanced": false,
          "default": "",
          "description": "Filter search results to include a specific company name.\n\nIf the value you enter for this parameter does not match with a company's name, the company will not appear in search results, even if it matches other parameters. Partial matches are accepted. For example, if you filter by the value marketing, a company called NY Marketing Unlimited would still be eligible as a search result, but NY Market Analysis would not be eligible.",
          "secret": false,
          "title": "Q Organization Name",
          "type": "string"
        },
        "organization_ids": {
          "advanced": true,
          "description": "The Apollo IDs for the companies you want to include in your search results. Each company in the Apollo database is assigned a unique ID.\n\nTo find IDs, identify the values for organization_id when you call this endpoint.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Organization Ids",
          "type": "array"
        },
        "max_results": {
          "advanced": true,
          "default": 100,
          "description": "The maximum number of results to return. If you don't specify this parameter, the default is 100.",
          "maximum": 50000,
          "minimum": 1,
          "secret": false,
          "title": "Max Results",
          "type": "integer"
        },
        "credentials": {
          "credentials_provider": ["apollo"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "apollo",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.APOLLO: 'apollo'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "Apollo credentials",
          "secret": false
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "organizations": {
          "advanced": true,
          "description": "List of organizations found",
          "items": {
            "additionalProperties": true,
            "description": "An organization in Apollo",
            "properties": {
              "id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Id"
              },
              "name": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Name"
              },
              "website_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Website Url"
              },
              "blog_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Blog Url"
              },
              "angellist_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Angellist Url"
              },
              "linkedin_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Linkedin Url"
              },
              "twitter_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Twitter Url"
              },
              "facebook_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Facebook Url"
              },
              "primary_phone": {
                "anyOf": [
                  {
                    "description": "A primary phone in Apollo",
                    "properties": {
                      "number": { "title": "Number", "type": "string" },
                      "source": { "title": "Source", "type": "string" },
                      "sanitized_number": {
                        "title": "Sanitized Number",
                        "type": "string"
                      }
                    },
                    "required": ["number", "source", "sanitized_number"],
                    "title": "PrimaryPhone",
                    "type": "object"
                  },
                  { "type": "null" }
                ],
                "default": {
                  "number": "N/A",
                  "source": "N/A",
                  "sanitized_number": "N/A"
                }
              },
              "languages": {
                "default": [],
                "items": { "type": "string" },
                "title": "Languages",
                "type": "array"
              },
              "alexa_ranking": {
                "anyOf": [{ "type": "integer" }, { "type": "null" }],
                "default": 0,
                "title": "Alexa Ranking"
              },
              "phone": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Phone"
              },
              "linkedin_uid": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Linkedin Uid"
              },
              "founded_year": {
                "anyOf": [{ "type": "integer" }, { "type": "null" }],
                "default": 0,
                "title": "Founded Year"
              },
              "publicly_traded_symbol": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Publicly Traded Symbol"
              },
              "publicly_traded_exchange": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Publicly Traded Exchange"
              },
              "logo_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Logo Url"
              },
              "chrunchbase_url": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Chrunchbase Url"
              },
              "primary_domain": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Primary Domain"
              },
              "sanitized_phone": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Sanitized Phone"
              },
              "owned_by_organization_id": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Owned By Organization Id"
              },
              "intent_strength": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Intent Strength"
              },
              "show_intent": {
                "default": true,
                "title": "Show Intent",
                "type": "boolean"
              },
              "has_intent_signal_account": {
                "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                "default": true,
                "title": "Has Intent Signal Account"
              },
              "intent_signal_account": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "default": "N/A",
                "title": "Intent Signal Account"
              }
            },
            "title": "Organization",
            "type": "object"
          },
          "secret": false,
          "title": "Organizations",
          "type": "array"
        },
        "organization": {
          "additionalProperties": true,
          "description": "Each found organization, one at a time",
          "properties": {
            "id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Id"
            },
            "name": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Name"
            },
            "website_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Website Url"
            },
            "blog_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Blog Url"
            },
            "angellist_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Angellist Url"
            },
            "linkedin_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Linkedin Url"
            },
            "twitter_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Twitter Url"
            },
            "facebook_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Facebook Url"
            },
            "primary_phone": {
              "anyOf": [
                {
                  "description": "A primary phone in Apollo",
                  "properties": {
                    "number": { "title": "Number", "type": "string" },
                    "source": { "title": "Source", "type": "string" },
                    "sanitized_number": {
                      "title": "Sanitized Number",
                      "type": "string"
                    }
                  },
                  "required": ["number", "source", "sanitized_number"],
                  "title": "PrimaryPhone",
                  "type": "object"
                },
                { "type": "null" }
              ],
              "default": {
                "number": "N/A",
                "source": "N/A",
                "sanitized_number": "N/A"
              }
            },
            "languages": {
              "default": [],
              "items": { "type": "string" },
              "title": "Languages",
              "type": "array"
            },
            "alexa_ranking": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "default": 0,
              "title": "Alexa Ranking"
            },
            "phone": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Phone"
            },
            "linkedin_uid": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Linkedin Uid"
            },
            "founded_year": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "default": 0,
              "title": "Founded Year"
            },
            "publicly_traded_symbol": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Publicly Traded Symbol"
            },
            "publicly_traded_exchange": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Publicly Traded Exchange"
            },
            "logo_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Logo Url"
            },
            "chrunchbase_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Chrunchbase Url"
            },
            "primary_domain": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Primary Domain"
            },
            "sanitized_phone": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Sanitized Phone"
            },
            "owned_by_organization_id": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Owned By Organization Id"
            },
            "intent_strength": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Intent Strength"
            },
            "show_intent": {
              "default": true,
              "title": "Show Intent",
              "type": "boolean"
            },
            "has_intent_signal_account": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": true,
              "title": "Has Intent Signal Account"
            },
            "intent_signal_account": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "title": "Intent Signal Account"
            }
          },
          "title": "Organization",
          "type": "object",
          "advanced": false,
          "secret": false
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the search failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["organization"],
      "title": "Output",
      "type": "object"
    },
    "description": "Search for organizations in Apollo",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "530cf046-2ce0-4854-ae2c-659db17c7a46",
    "name": "AIVideoGeneratorBlock",
    "inputSchema": {
      "properties": {
        "prompt": {
          "advanced": false,
          "description": "Description of the video to generate.",
          "placeholder": "A dog running in a field.",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "model": {
          "enum": ["fal-ai/mochi-v1", "fal-ai/luma-dream-machine"],
          "title": "FAL Model",
          "type": "string",
          "advanced": true,
          "default": "fal-ai/mochi-v1",
          "description": "The FAL model to use for video generation.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["fal"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "fal",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.FAL: 'fal'>], Literal['api_key']]",
          "type": "object",
          "description": "The FAL integration can be used with an API Key."
        }
      },
      "required": ["prompt", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "video_url": {
          "advanced": false,
          "description": "The URL of the generated video.",
          "secret": false,
          "title": "Video Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if video generation failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        },
        "logs": {
          "advanced": false,
          "description": "Generation progress logs.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Logs",
          "type": "array"
        }
      },
      "required": ["video_url", "error", "logs"],
      "title": "Output",
      "type": "object"
    },
    "description": "Generate videos using FAL AI models.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c6524385-7d87-49d6-a470-248bd29ca765",
    "name": "HubSpotEngagementBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["hubspot"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "hubspot",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.HUBSPOT: 'hubspot'>], Literal['api_key']]",
          "type": "object",
          "description": "The HubSpot integration requires an API Key."
        },
        "operation": {
          "advanced": true,
          "default": "send_email",
          "description": "Operation to perform (send_email, track_engagement)",
          "secret": false,
          "title": "Operation",
          "type": "string"
        },
        "email_data": {
          "additionalProperties": true,
          "advanced": true,
          "description": "Email data including recipient, subject, content",
          "secret": false,
          "title": "Email Data",
          "type": "object"
        },
        "contact_id": {
          "advanced": true,
          "default": "",
          "description": "Contact ID for engagement tracking",
          "secret": false,
          "title": "Contact Id",
          "type": "string"
        },
        "timeframe_days": {
          "advanced": true,
          "default": 30,
          "description": "Number of days to look back for engagement",
          "secret": false,
          "title": "Timeframe Days",
          "type": "integer"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Operation result",
          "secret": false,
          "title": "Result",
          "type": "object"
        },
        "status": {
          "advanced": false,
          "description": "Operation status",
          "secret": false,
          "title": "Status",
          "type": "string"
        }
      },
      "required": ["result", "status"],
      "title": "Output",
      "type": "object"
    },
    "description": "Manages HubSpot engagements - sends emails and tracks engagement metrics",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      },
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5267326e-c4c1-4016-9f54-4e72ad02f813",
    "name": "HubSpotContactBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["hubspot"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "hubspot",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.HUBSPOT: 'hubspot'>], Literal['api_key']]",
          "type": "object",
          "description": "The HubSpot integration requires an API Key."
        },
        "operation": {
          "advanced": true,
          "default": "get",
          "description": "Operation to perform (create, update, get)",
          "secret": false,
          "title": "Operation",
          "type": "string"
        },
        "contact_data": {
          "additionalProperties": true,
          "advanced": true,
          "description": "Contact data for create/update operations",
          "secret": false,
          "title": "Contact Data",
          "type": "object"
        },
        "email": {
          "advanced": true,
          "default": "",
          "description": "Email address for get/update operations",
          "secret": false,
          "title": "Email",
          "type": "string"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "contact": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Contact information",
          "secret": false,
          "title": "Contact",
          "type": "object"
        },
        "status": {
          "advanced": false,
          "description": "Operation status",
          "secret": false,
          "title": "Status",
          "type": "string"
        }
      },
      "required": ["contact", "status"],
      "title": "Output",
      "type": "object"
    },
    "description": "Manages HubSpot contacts - create, update, and retrieve contact information",
    "categories": [
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3ae02219-d540-47cd-9c78-3ad6c7d9820a",
    "name": "HubSpotCompanyBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["hubspot"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "hubspot",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.HUBSPOT: 'hubspot'>], Literal['api_key']]",
          "type": "object",
          "description": "The HubSpot integration requires an API Key."
        },
        "operation": {
          "advanced": true,
          "default": "get",
          "description": "Operation to perform (create, update, get)",
          "secret": false,
          "title": "Operation",
          "type": "string"
        },
        "company_data": {
          "additionalProperties": true,
          "advanced": true,
          "description": "Company data for create/update operations",
          "secret": false,
          "title": "Company Data",
          "type": "object"
        },
        "domain": {
          "advanced": true,
          "default": "",
          "description": "Company domain for get/update operations",
          "secret": false,
          "title": "Domain",
          "type": "string"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "company": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Company information",
          "secret": false,
          "title": "Company",
          "type": "object"
        },
        "status": {
          "advanced": false,
          "description": "Operation status",
          "secret": false,
          "title": "Status",
          "type": "string"
        }
      },
      "required": ["company", "status"],
      "title": "Output",
      "type": "object"
    },
    "description": "Manages HubSpot companies - create, update, and retrieve company information",
    "categories": [
      {
        "category": "CRM",
        "description": "Block that interacts with CRM services."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9464a020-ed1d-49e1-990f-7f2ac924a2b7",
    "name": "CompassAITriggerBlock",
    "inputSchema": {
      "properties": {
        "payload": {
          "properties": {
            "date": { "title": "Date", "type": "string" },
            "transcription": { "title": "Transcription", "type": "string" },
            "transcriptions": {
              "items": {
                "properties": {
                  "text": { "title": "Text", "type": "string" },
                  "speaker": { "title": "Speaker", "type": "string" },
                  "end": { "title": "End", "type": "number" },
                  "start": { "title": "Start", "type": "number" },
                  "duration": { "title": "Duration", "type": "number" }
                },
                "required": ["text", "speaker", "end", "start", "duration"],
                "title": "Transcription",
                "type": "object"
              },
              "title": "Transcriptions",
              "type": "array"
            }
          },
          "required": ["date", "transcription", "transcriptions"],
          "title": "TranscriptionDataModel",
          "type": "object",
          "advanced": false,
          "hidden": true,
          "secret": false
        }
      },
      "required": ["payload"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "transcription": {
          "advanced": false,
          "description": "The contents of the compass transcription.",
          "secret": false,
          "title": "Transcription",
          "type": "string"
        }
      },
      "required": ["transcription"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block will output the contents of the compass transcription.",
    "categories": [
      {
        "category": "HARDWARE",
        "description": "Block that interacts with hardware."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Webhook (manual)"
  },
  {
    "id": "8c7d0d67-e79c-44f6-92a1-c2600c8aac7f",
    "name": "NvidiaDeepfakeDetectBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["nvidia"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "nvidia",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.NVIDIA: 'nvidia'>], Literal['api_key']]",
          "type": "object",
          "description": "The Nvidia integration requires an API Key."
        },
        "image_base64": {
          "advanced": false,
          "description": "Image to analyze for deepfakes",
          "format": "file",
          "secret": false,
          "title": "Image Base64",
          "type": "string"
        },
        "return_image": {
          "advanced": true,
          "default": false,
          "description": "Whether to return the processed image with markings",
          "secret": false,
          "title": "Return Image",
          "type": "boolean"
        }
      },
      "required": ["credentials", "image_base64"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Detection status (SUCCESS, ERROR, CONTENT_FILTERED)",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "image": {
          "advanced": false,
          "description": "Processed image with detection markings (if return_image=True)",
          "format": "file",
          "secret": false,
          "title": "Image",
          "type": "string"
        },
        "is_deepfake": {
          "advanced": false,
          "description": "Probability that the image is a deepfake (0-1)",
          "secret": false,
          "title": "Is Deepfake",
          "type": "number"
        }
      },
      "required": ["status", "image", "is_deepfake"],
      "title": "Output",
      "type": "object"
    },
    "description": "Detects potential deepfakes in images using Nvidia's AI API",
    "categories": [
      {
        "category": "SAFETY",
        "description": "Block that provides AI safety mechanisms such as detecting harmful content"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c52be83f-f8cd-4180-b243-af35f986b461",
    "name": "ExaContentsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["exa"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "exa",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.EXA: 'exa'>], Literal['api_key']]",
          "type": "object",
          "description": "The Exa integration requires an API Key."
        },
        "ids": {
          "advanced": false,
          "description": "Array of document IDs obtained from searches",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "contents": {
          "properties": {
            "text": {
              "additionalProperties": true,
              "advanced": true,
              "default": { "maxCharacters": 1000, "includeHtmlTags": false },
              "description": "Text content settings",
              "secret": false,
              "title": "Text",
              "type": "object"
            },
            "highlights": {
              "additionalProperties": true,
              "advanced": true,
              "default": {
                "numSentences": 3,
                "highlightsPerUrl": 3,
                "query": ""
              },
              "description": "Highlight settings",
              "secret": false,
              "title": "Highlights",
              "type": "object"
            },
            "summary": {
              "additionalProperties": true,
              "advanced": true,
              "default": { "query": "" },
              "description": "Summary settings",
              "secret": false,
              "title": "Summary",
              "type": "object"
            }
          },
          "title": "ContentRetrievalSettings",
          "type": "object",
          "advanced": true,
          "default": {
            "text": { "includeHtmlTags": false, "maxCharacters": 1000 },
            "highlights": {
              "highlightsPerUrl": 3,
              "numSentences": 3,
              "query": ""
            },
            "summary": { "query": "" }
          },
          "description": "Content retrieval settings",
          "secret": false
        }
      },
      "required": ["credentials", "ids"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "results": {
          "advanced": true,
          "description": "List of document contents",
          "items": {},
          "secret": false,
          "title": "Results",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Retrieves document contents using Exa's contents API",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5e7315d1-af61-4a0c-9350-7c868fa7438a",
    "name": "ExaFindSimilarBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["exa"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "exa",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.EXA: 'exa'>], Literal['api_key']]",
          "type": "object",
          "description": "The Exa integration requires an API Key."
        },
        "url": {
          "advanced": false,
          "description": "The url for which you would like to find similar links",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "number_of_results": {
          "advanced": true,
          "default": 10,
          "description": "Number of results to return",
          "secret": false,
          "title": "Number Of Results",
          "type": "integer"
        },
        "include_domains": {
          "advanced": true,
          "description": "Domains to include in search",
          "items": { "type": "string" },
          "secret": false,
          "title": "Include Domains",
          "type": "array"
        },
        "exclude_domains": {
          "advanced": true,
          "description": "Domains to exclude from search",
          "items": { "type": "string" },
          "secret": false,
          "title": "Exclude Domains",
          "type": "array"
        },
        "start_crawl_date": {
          "advanced": false,
          "description": "Start date for crawled content",
          "format": "date-time",
          "secret": false,
          "title": "Start Crawl Date",
          "type": "string"
        },
        "end_crawl_date": {
          "advanced": false,
          "description": "End date for crawled content",
          "format": "date-time",
          "secret": false,
          "title": "End Crawl Date",
          "type": "string"
        },
        "start_published_date": {
          "advanced": false,
          "description": "Start date for published content",
          "format": "date-time",
          "secret": false,
          "title": "Start Published Date",
          "type": "string"
        },
        "end_published_date": {
          "advanced": false,
          "description": "End date for published content",
          "format": "date-time",
          "secret": false,
          "title": "End Published Date",
          "type": "string"
        },
        "include_text": {
          "advanced": true,
          "description": "Text patterns to include (max 1 string, up to 5 words)",
          "items": { "type": "string" },
          "secret": false,
          "title": "Include Text",
          "type": "array"
        },
        "exclude_text": {
          "advanced": true,
          "description": "Text patterns to exclude (max 1 string, up to 5 words)",
          "items": { "type": "string" },
          "secret": false,
          "title": "Exclude Text",
          "type": "array"
        },
        "contents": {
          "properties": {
            "text": {
              "properties": {
                "max_characters": {
                  "advanced": true,
                  "default": 1000,
                  "description": "Maximum number of characters to return",
                  "placeholder": "1000",
                  "secret": false,
                  "title": "Max Characters",
                  "type": "integer"
                },
                "include_html_tags": {
                  "advanced": true,
                  "default": false,
                  "description": "Whether to include HTML tags in the text",
                  "placeholder": "False",
                  "secret": false,
                  "title": "Include Html Tags",
                  "type": "boolean"
                }
              },
              "title": "TextSettings",
              "type": "object",
              "advanced": true,
              "default": { "max_characters": 1000, "include_html_tags": false },
              "description": "Text content settings",
              "secret": false
            },
            "highlights": {
              "properties": {
                "num_sentences": {
                  "advanced": true,
                  "default": 3,
                  "description": "Number of sentences per highlight",
                  "placeholder": "3",
                  "secret": false,
                  "title": "Num Sentences",
                  "type": "integer"
                },
                "highlights_per_url": {
                  "advanced": true,
                  "default": 3,
                  "description": "Number of highlights per URL",
                  "placeholder": "3",
                  "secret": false,
                  "title": "Highlights Per Url",
                  "type": "integer"
                }
              },
              "title": "HighlightSettings",
              "type": "object",
              "advanced": true,
              "default": { "num_sentences": 3, "highlights_per_url": 3 },
              "description": "Highlight settings",
              "secret": false
            },
            "summary": {
              "properties": {
                "query": {
                  "advanced": true,
                  "anyOf": [{ "type": "string" }, { "type": "null" }],
                  "default": "",
                  "description": "Query string for summarization",
                  "placeholder": "Enter query",
                  "secret": false,
                  "title": "Query"
                }
              },
              "title": "SummarySettings",
              "type": "object",
              "advanced": true,
              "default": { "query": "" },
              "description": "Summary settings",
              "secret": false
            }
          },
          "title": "ContentSettings",
          "type": "object",
          "advanced": true,
          "default": {
            "text": { "include_html_tags": false, "max_characters": 1000 },
            "highlights": { "highlights_per_url": 3, "num_sentences": 3 },
            "summary": { "query": "" }
          },
          "description": "Content retrieval settings",
          "secret": false
        }
      },
      "required": [
        "credentials",
        "url",
        "start_crawl_date",
        "end_crawl_date",
        "start_published_date",
        "end_published_date"
      ],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "results": {
          "advanced": true,
          "description": "List of similar documents with title, URL, published date, author, and score",
          "items": {},
          "secret": false,
          "title": "Results",
          "type": "array"
        }
      },
      "title": "Output",
      "type": "object"
    },
    "description": "Finds similar links using Exa's findSimilar API",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "996cec64-ac40-4dde-982f-b0dc60a5824d",
    "name": "ExaSearchBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["exa"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "exa",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.EXA: 'exa'>], Literal['api_key']]",
          "type": "object",
          "description": "The Exa integration requires an API Key."
        },
        "query": {
          "advanced": false,
          "description": "The search query",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "use_auto_prompt": {
          "advanced": true,
          "default": true,
          "description": "Whether to use autoprompt",
          "secret": false,
          "title": "Use Auto Prompt",
          "type": "boolean"
        },
        "type": {
          "advanced": true,
          "default": "",
          "description": "Type of search",
          "secret": false,
          "title": "Type",
          "type": "string"
        },
        "category": {
          "advanced": true,
          "default": "",
          "description": "Category to search within",
          "secret": false,
          "title": "Category",
          "type": "string"
        },
        "number_of_results": {
          "advanced": true,
          "default": 10,
          "description": "Number of results to return",
          "secret": false,
          "title": "Number Of Results",
          "type": "integer"
        },
        "include_domains": {
          "advanced": true,
          "description": "Domains to include in search",
          "items": { "type": "string" },
          "secret": false,
          "title": "Include Domains",
          "type": "array"
        },
        "exclude_domains": {
          "advanced": true,
          "description": "Domains to exclude from search",
          "items": { "type": "string" },
          "secret": false,
          "title": "Exclude Domains",
          "type": "array"
        },
        "start_crawl_date": {
          "advanced": false,
          "description": "Start date for crawled content",
          "format": "date-time",
          "secret": false,
          "title": "Start Crawl Date",
          "type": "string"
        },
        "end_crawl_date": {
          "advanced": false,
          "description": "End date for crawled content",
          "format": "date-time",
          "secret": false,
          "title": "End Crawl Date",
          "type": "string"
        },
        "start_published_date": {
          "advanced": false,
          "description": "Start date for published content",
          "format": "date-time",
          "secret": false,
          "title": "Start Published Date",
          "type": "string"
        },
        "end_published_date": {
          "advanced": false,
          "description": "End date for published content",
          "format": "date-time",
          "secret": false,
          "title": "End Published Date",
          "type": "string"
        },
        "include_text": {
          "advanced": true,
          "description": "Text patterns to include",
          "items": { "type": "string" },
          "secret": false,
          "title": "Include Text",
          "type": "array"
        },
        "exclude_text": {
          "advanced": true,
          "description": "Text patterns to exclude",
          "items": { "type": "string" },
          "secret": false,
          "title": "Exclude Text",
          "type": "array"
        },
        "contents": {
          "properties": {
            "text": {
              "properties": {
                "max_characters": {
                  "advanced": true,
                  "default": 1000,
                  "description": "Maximum number of characters to return",
                  "placeholder": "1000",
                  "secret": false,
                  "title": "Max Characters",
                  "type": "integer"
                },
                "include_html_tags": {
                  "advanced": true,
                  "default": false,
                  "description": "Whether to include HTML tags in the text",
                  "placeholder": "False",
                  "secret": false,
                  "title": "Include Html Tags",
                  "type": "boolean"
                }
              },
              "title": "TextSettings",
              "type": "object",
              "advanced": true,
              "default": { "max_characters": 1000, "include_html_tags": false },
              "description": "Text content settings",
              "secret": false
            },
            "highlights": {
              "properties": {
                "num_sentences": {
                  "advanced": true,
                  "default": 3,
                  "description": "Number of sentences per highlight",
                  "placeholder": "3",
                  "secret": false,
                  "title": "Num Sentences",
                  "type": "integer"
                },
                "highlights_per_url": {
                  "advanced": true,
                  "default": 3,
                  "description": "Number of highlights per URL",
                  "placeholder": "3",
                  "secret": false,
                  "title": "Highlights Per Url",
                  "type": "integer"
                }
              },
              "title": "HighlightSettings",
              "type": "object",
              "advanced": true,
              "default": { "num_sentences": 3, "highlights_per_url": 3 },
              "description": "Highlight settings",
              "secret": false
            },
            "summary": {
              "properties": {
                "query": {
                  "advanced": true,
                  "anyOf": [{ "type": "string" }, { "type": "null" }],
                  "default": "",
                  "description": "Query string for summarization",
                  "placeholder": "Enter query",
                  "secret": false,
                  "title": "Query"
                }
              },
              "title": "SummarySettings",
              "type": "object",
              "advanced": true,
              "default": { "query": "" },
              "description": "Summary settings",
              "secret": false
            }
          },
          "title": "ContentSettings",
          "type": "object",
          "advanced": true,
          "default": {
            "text": { "include_html_tags": false, "max_characters": 1000 },
            "highlights": { "highlights_per_url": 3, "num_sentences": 3 },
            "summary": { "query": "" }
          },
          "description": "Content retrieval settings",
          "secret": false
        }
      },
      "required": [
        "credentials",
        "query",
        "start_crawl_date",
        "end_crawl_date",
        "start_published_date",
        "end_published_date"
      ],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "results": {
          "advanced": true,
          "description": "List of search results",
          "items": {},
          "secret": false,
          "title": "Results",
          "type": "array"
        }
      },
      "title": "Output",
      "type": "object"
    },
    "description": "Searches the web using Exa's advanced search API",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "25310c70-b89b-43ba-b25c-4dfa7e2a481c",
    "name": "GmailReadBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/gmail.readonly"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "query": {
          "advanced": true,
          "default": "is:unread",
          "description": "Search query for reading emails",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "default": 10,
          "description": "Maximum number of emails to retrieve",
          "secret": false,
          "title": "Max Results",
          "type": "integer"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "email": {
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "subject": { "title": "Subject", "type": "string" },
            "snippet": { "title": "Snippet", "type": "string" },
            "from_": { "title": "From", "type": "string" },
            "to": { "title": "To", "type": "string" },
            "date": { "title": "Date", "type": "string" },
            "body": { "default": "", "title": "Body", "type": "string" },
            "sizeEstimate": { "title": "Sizeestimate", "type": "integer" },
            "attachments": {
              "items": {
                "properties": {
                  "filename": { "title": "Filename", "type": "string" },
                  "content_type": { "title": "Content Type", "type": "string" },
                  "size": { "title": "Size", "type": "integer" },
                  "attachment_id": {
                    "title": "Attachment Id",
                    "type": "string"
                  }
                },
                "required": [
                  "filename",
                  "content_type",
                  "size",
                  "attachment_id"
                ],
                "title": "Attachment",
                "type": "object"
              },
              "title": "Attachments",
              "type": "array"
            }
          },
          "required": [
            "id",
            "subject",
            "snippet",
            "from_",
            "to",
            "date",
            "sizeEstimate",
            "attachments"
          ],
          "title": "Email",
          "type": "object",
          "advanced": false,
          "description": "Email data",
          "secret": false
        },
        "emails": {
          "advanced": false,
          "description": "List of email data",
          "items": {
            "properties": {
              "id": { "title": "Id", "type": "string" },
              "subject": { "title": "Subject", "type": "string" },
              "snippet": { "title": "Snippet", "type": "string" },
              "from_": { "title": "From", "type": "string" },
              "to": { "title": "To", "type": "string" },
              "date": { "title": "Date", "type": "string" },
              "body": { "default": "", "title": "Body", "type": "string" },
              "sizeEstimate": { "title": "Sizeestimate", "type": "integer" },
              "attachments": {
                "items": {
                  "properties": {
                    "filename": { "title": "Filename", "type": "string" },
                    "content_type": {
                      "title": "Content Type",
                      "type": "string"
                    },
                    "size": { "title": "Size", "type": "integer" },
                    "attachment_id": {
                      "title": "Attachment Id",
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename",
                    "content_type",
                    "size",
                    "attachment_id"
                  ],
                  "title": "Attachment",
                  "type": "object"
                },
                "title": "Attachments",
                "type": "array"
              }
            },
            "required": [
              "id",
              "subject",
              "snippet",
              "from_",
              "to",
              "date",
              "sizeEstimate",
              "attachments"
            ],
            "title": "Email",
            "type": "object"
          },
          "secret": false,
          "title": "Emails",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["email", "emails", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads emails from Gmail.",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6c27abc2-e51d-499e-a85f-5a0041ba94f0",
    "name": "GmailSendBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": ["https://www.googleapis.com/auth/gmail.send"],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "to": {
          "advanced": false,
          "description": "Recipient email address",
          "secret": false,
          "title": "To",
          "type": "string"
        },
        "subject": {
          "advanced": false,
          "description": "Email subject",
          "secret": false,
          "title": "Subject",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Email body",
          "secret": false,
          "title": "Body",
          "type": "string"
        }
      },
      "required": ["credentials", "to", "subject", "body"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Send confirmation",
          "secret": false,
          "title": "Result",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block sends an email using Gmail.",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3e1c2c1c-c689-4520-b956-1f3bf4e02bb7",
    "name": "GmailListLabelsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/gmail.labels"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "List of labels",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Result",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all labels in Gmail.",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f884b2fb-04f4-4265-9658-14f433926ac9",
    "name": "GmailAddLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/gmail.modify"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "message_id": {
          "advanced": false,
          "description": "Message ID to add label to",
          "secret": false,
          "title": "Message Id",
          "type": "string"
        },
        "label_name": {
          "advanced": false,
          "description": "Label name to add",
          "secret": false,
          "title": "Label Name",
          "type": "string"
        }
      },
      "required": ["credentials", "message_id", "label_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Label addition result",
          "secret": false,
          "title": "Result",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block adds a label to a Gmail message.",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "0afc0526-aba1-4b2b-888e-a22b7c3f359d",
    "name": "GmailRemoveLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/gmail.modify"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "message_id": {
          "advanced": false,
          "description": "Message ID to remove label from",
          "secret": false,
          "title": "Message Id",
          "type": "string"
        },
        "label_name": {
          "advanced": false,
          "description": "Label name to remove",
          "secret": false,
          "title": "Label Name",
          "type": "string"
        }
      },
      "required": ["credentials", "message_id", "label_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Label removal result",
          "secret": false,
          "title": "Result",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block removes a label from a Gmail message.",
    "categories": [
      {
        "category": "COMMUNICATION",
        "description": "Block that interacts with communication platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5724e902-3635-47e9-a108-aaa0263a4988",
    "name": "GoogleSheetsReadBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/spreadsheets.readonly"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "spreadsheet_id": {
          "advanced": false,
          "description": "The ID of the spreadsheet to read from",
          "secret": false,
          "title": "Spreadsheet Id",
          "type": "string"
        },
        "range": {
          "advanced": false,
          "description": "The A1 notation of the range to read",
          "secret": false,
          "title": "Range",
          "type": "string"
        }
      },
      "required": ["credentials", "spreadsheet_id", "range"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "The data read from the spreadsheet",
          "items": { "items": { "type": "string" }, "type": "array" },
          "secret": false,
          "title": "Result",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads data from a Google Sheets spreadsheet.",
    "categories": [
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d9291e87-301d-47a8-91fe-907fb55460e5",
    "name": "GoogleSheetsWriteBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["google"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "google",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GOOGLE: 'google'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "https://www.googleapis.com/auth/spreadsheets"
          ],
          "description": "The Google integration requires OAuth2 authentication."
        },
        "spreadsheet_id": {
          "advanced": false,
          "description": "The ID of the spreadsheet to write to",
          "secret": false,
          "title": "Spreadsheet Id",
          "type": "string"
        },
        "range": {
          "advanced": false,
          "description": "The A1 notation of the range to write",
          "secret": false,
          "title": "Range",
          "type": "string"
        },
        "values": {
          "advanced": false,
          "description": "The data to write to the spreadsheet",
          "items": { "items": { "type": "string" }, "type": "array" },
          "secret": false,
          "title": "Values",
          "type": "array"
        }
      },
      "required": ["credentials", "spreadsheet_id", "range", "values"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The result of the write operation",
          "secret": false,
          "title": "Result",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if any",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["result", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block writes data to a Google Sheets spreadsheet.",
    "categories": [
      {
        "category": "DATA",
        "description": "Block that interacts with structured data."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a8db4d8d-db1c-4a25-a1b0-416a8c33602b",
    "name": "GithubCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue or pull request",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "comment": {
          "advanced": false,
          "description": "Comment to post on the issue or pull request",
          "placeholder": "Enter your comment",
          "secret": false,
          "title": "Comment",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url", "comment"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of the created comment",
          "secret": false,
          "title": "Id",
          "type": "integer"
        },
        "url": {
          "advanced": false,
          "description": "URL to the comment on GitHub",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the comment posting failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block posts a comment on a specified GitHub issue or pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b3f4d747-10e3-4e69-8c51-f2be1d99c9a7",
    "name": "GithubUpdateCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "comment_url": {
          "advanced": false,
          "default": "",
          "description": "URL of the GitHub comment",
          "placeholder": "https://github.com/owner/repo/issues/1#issuecomment-123456789",
          "secret": false,
          "title": "Comment Url",
          "type": "string"
        },
        "issue_url": {
          "advanced": true,
          "default": "",
          "description": "URL of the GitHub issue or pull request",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "comment_id": {
          "advanced": true,
          "default": "",
          "description": "ID of the GitHub comment",
          "placeholder": "123456789",
          "secret": false,
          "title": "Comment Id",
          "type": "string"
        },
        "comment": {
          "advanced": false,
          "description": "Comment to update",
          "placeholder": "Enter your comment",
          "secret": false,
          "title": "Comment",
          "type": "string"
        }
      },
      "required": ["credentials", "comment"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of the updated comment",
          "secret": false,
          "title": "Id",
          "type": "integer"
        },
        "url": {
          "advanced": false,
          "description": "URL to the comment on GitHub",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the comment update failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block updates a comment on a specified GitHub issue or pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c4b5fb63-0005-4a11-b35a-0c2467bd6b59",
    "name": "GithubListCommentsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue or pull request",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "comment": {
          "properties": {
            "id": { "title": "Id", "type": "integer" },
            "body": { "title": "Body", "type": "string" },
            "user": { "title": "User", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["id", "body", "user", "url"],
          "title": "Comment",
          "type": "object",
          "advanced": false,
          "description": "Comments with their ID, body, user, and URL",
          "secret": false
        },
        "comments": {
          "advanced": false,
          "description": "List of comments with their ID, body, user, and URL",
          "items": {
            "properties": {
              "id": { "title": "Id", "type": "integer" },
              "body": { "title": "Body", "type": "string" },
              "user": { "title": "User", "type": "string" },
              "url": { "title": "Url", "type": "string" }
            },
            "required": ["id", "body", "user", "url"],
            "title": "CommentItem",
            "type": "object"
          },
          "secret": false,
          "title": "Comments",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing comments failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["comment", "comments", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all comments for a specified GitHub issue or pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "691dad47-f494-44c3-a1e8-05b7990f2dab",
    "name": "GithubMakeIssueBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "title": {
          "advanced": false,
          "description": "Title of the issue",
          "placeholder": "Enter the issue title",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Body of the issue",
          "placeholder": "Enter the issue body",
          "secret": false,
          "title": "Body",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "title", "body"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "number": {
          "advanced": false,
          "description": "Number of the created issue",
          "secret": false,
          "title": "Number",
          "type": "integer"
        },
        "url": {
          "advanced": false,
          "description": "URL of the created issue",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the issue creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["number", "url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new issue on a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6443c75d-032a-4772-9c08-230c707c8acc",
    "name": "GithubReadIssueBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "title": {
          "advanced": false,
          "description": "Title of the issue",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Body of the issue",
          "secret": false,
          "title": "Body",
          "type": "string"
        },
        "user": {
          "advanced": false,
          "description": "User who created the issue",
          "secret": false,
          "title": "User",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if reading the issue failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["title", "body", "user", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads the body, title, and user of a specified GitHub issue.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c215bfd7-0e57-4573-8f8c-f7d4963dcd74",
    "name": "GithubListIssuesBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "issue": {
          "properties": {
            "title": { "title": "Title", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["title", "url"],
          "title": "Issue",
          "type": "object",
          "advanced": false,
          "description": "Issues with their title and URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing issues failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["issue", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all issues for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "98bd6b77-9506-43d5-b669-6b9733c4b1f1",
    "name": "GithubAddLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue or pull request",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "label": {
          "advanced": false,
          "description": "Label to add to the issue or pull request",
          "placeholder": "Enter the label",
          "secret": false,
          "title": "Label",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url", "label"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the label addition operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the label addition failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block adds a label to a specified GitHub issue or pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "78f050c5-3e3a-48c0-9e5b-ef1ceca5589c",
    "name": "GithubRemoveLabelBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue or pull request",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "label": {
          "advanced": false,
          "description": "Label to remove from the issue or pull request",
          "placeholder": "Enter the label",
          "secret": false,
          "title": "Label",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url", "label"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the label removal operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the label removal failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block removes a label from a specified GitHub issue or pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "90507c72-b0ff-413a-886a-23bbbd66f542",
    "name": "GithubAssignIssueBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "assignee": {
          "advanced": false,
          "description": "Username to assign to the issue",
          "placeholder": "Enter the username",
          "secret": false,
          "title": "Assignee",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url", "assignee"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the issue assignment operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the issue assignment failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block assigns a user to a specified GitHub issue.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d154002a-38f4-46c2-962d-2488f2b05ece",
    "name": "GithubUnassignIssueBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_url": {
          "advanced": false,
          "description": "URL of the GitHub issue",
          "placeholder": "https://github.com/owner/repo/issues/1",
          "secret": false,
          "title": "Issue Url",
          "type": "string"
        },
        "assignee": {
          "advanced": false,
          "description": "Username to unassign from the issue",
          "placeholder": "Enter the username",
          "secret": false,
          "title": "Assignee",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_url", "assignee"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the issue unassignment operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the issue unassignment failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unassigns a user from a specified GitHub issue.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ffef3c4c-6cd0-48dd-817d-459f975219f4",
    "name": "GithubListPullRequestsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "pull_request": {
          "properties": {
            "title": { "title": "Title", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["title", "url"],
          "title": "Pull Request",
          "type": "object",
          "advanced": false,
          "description": "PRs with their title and URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing issues failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["pull_request", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all pull requests for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "dfb987f8-f197-4b2e-bf19-111812afd692",
    "name": "GithubMakePullRequestBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "title": {
          "advanced": false,
          "description": "Title of the pull request",
          "placeholder": "Enter the pull request title",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Body of the pull request",
          "placeholder": "Enter the pull request body",
          "secret": false,
          "title": "Body",
          "type": "string"
        },
        "head": {
          "advanced": false,
          "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace head with a user like this: username:branch.",
          "placeholder": "Enter the head branch",
          "secret": false,
          "title": "Head",
          "type": "string"
        },
        "base": {
          "advanced": false,
          "description": "The name of the branch you want the changes pulled into.",
          "placeholder": "Enter the base branch",
          "secret": false,
          "title": "Base",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "title", "body", "head", "base"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "number": {
          "advanced": false,
          "description": "Number of the created pull request",
          "secret": false,
          "title": "Number",
          "type": "integer"
        },
        "url": {
          "advanced": false,
          "description": "URL of the created pull request",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the pull request creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["number", "url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new pull request on a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "bf94b2a4-1a30-4600-a783-a8a44ee31301",
    "name": "GithubReadPullRequestBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "pr_url": {
          "advanced": false,
          "description": "URL of the GitHub pull request",
          "placeholder": "https://github.com/owner/repo/pull/1",
          "secret": false,
          "title": "Pr Url",
          "type": "string"
        },
        "include_pr_changes": {
          "advanced": false,
          "default": false,
          "description": "Whether to include the changes made in the pull request",
          "secret": false,
          "title": "Include Pr Changes",
          "type": "boolean"
        }
      },
      "required": ["credentials", "pr_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "title": {
          "advanced": false,
          "description": "Title of the pull request",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "body": {
          "advanced": false,
          "description": "Body of the pull request",
          "secret": false,
          "title": "Body",
          "type": "string"
        },
        "author": {
          "advanced": false,
          "description": "User who created the pull request",
          "secret": false,
          "title": "Author",
          "type": "string"
        },
        "changes": {
          "advanced": false,
          "description": "Changes made in the pull request",
          "secret": false,
          "title": "Changes",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if reading the pull request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["title", "body", "author", "changes", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads the body, title, user, and changes of a specified GitHub pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c0d22c5e-e688-43e3-ba43-d5faba7927fd",
    "name": "GithubAssignPRReviewerBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "pr_url": {
          "advanced": false,
          "description": "URL of the GitHub pull request",
          "placeholder": "https://github.com/owner/repo/pull/1",
          "secret": false,
          "title": "Pr Url",
          "type": "string"
        },
        "reviewer": {
          "advanced": false,
          "description": "Username of the reviewer to assign",
          "placeholder": "Enter the reviewer's username",
          "secret": false,
          "title": "Reviewer",
          "type": "string"
        }
      },
      "required": ["credentials", "pr_url", "reviewer"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the reviewer assignment operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the reviewer assignment failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block assigns a reviewer to a specified GitHub pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9637945d-c602-4875-899a-9c22f8fd30de",
    "name": "GithubUnassignPRReviewerBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "pr_url": {
          "advanced": false,
          "description": "URL of the GitHub pull request",
          "placeholder": "https://github.com/owner/repo/pull/1",
          "secret": false,
          "title": "Pr Url",
          "type": "string"
        },
        "reviewer": {
          "advanced": false,
          "description": "Username of the reviewer to unassign",
          "placeholder": "Enter the reviewer's username",
          "secret": false,
          "title": "Reviewer",
          "type": "string"
        }
      },
      "required": ["credentials", "pr_url", "reviewer"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the reviewer unassignment operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the reviewer unassignment failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unassigns a reviewer from a specified GitHub pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "2646956e-96d5-4754-a3df-034017e7ed96",
    "name": "GithubListPRReviewersBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "pr_url": {
          "advanced": false,
          "description": "URL of the GitHub pull request",
          "placeholder": "https://github.com/owner/repo/pull/1",
          "secret": false,
          "title": "Pr Url",
          "type": "string"
        }
      },
      "required": ["credentials", "pr_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "reviewer": {
          "properties": {
            "username": { "title": "Username", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["username", "url"],
          "title": "Reviewer",
          "type": "object",
          "advanced": false,
          "description": "Reviewers with their username and profile URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing reviewers failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["reviewer", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all reviewers for a specified GitHub pull request.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "358924e7-9a11-4d1a-a0f2-13c67fe59e2e",
    "name": "GithubListTagsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "tag": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["name", "url"],
          "title": "Tag",
          "type": "object",
          "advanced": false,
          "description": "Tags with their name and file tree browser URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing tags failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["tag", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all tags for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "74243e49-2bec-4916-8bf4-db43d44aead5",
    "name": "GithubListBranchesBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "branch": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["name", "url"],
          "title": "Branch",
          "type": "object",
          "advanced": false,
          "description": "Branches with their name and file tree browser URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing branches failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["branch", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all branches for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3ef1a419-3d76-4e07-b761-de9dad4d51d7",
    "name": "GithubListDiscussionsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "num_discussions": {
          "advanced": true,
          "default": 5,
          "description": "Number of discussions to fetch",
          "secret": false,
          "title": "Num Discussions",
          "type": "integer"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "discussion": {
          "properties": {
            "title": { "title": "Title", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["title", "url"],
          "title": "Discussion",
          "type": "object",
          "advanced": false,
          "description": "Discussions with their title and URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing discussions failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["discussion", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists recent discussions for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3460367a-6ba7-4645-8ce6-47b05d040b92",
    "name": "GithubListReleasesBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "release": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["name", "url"],
          "title": "Release",
          "type": "object",
          "advanced": false,
          "description": "Releases with their name and file tree browser URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing releases failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["release", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all releases for a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "87ce6c27-5752-4bbc-8e26-6da40a3dcfd3",
    "name": "GithubReadFileBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "file_path": {
          "advanced": false,
          "description": "Path to the file in the repository",
          "placeholder": "path/to/file",
          "secret": false,
          "title": "File Path",
          "type": "string"
        },
        "branch": {
          "advanced": true,
          "default": "master",
          "description": "Branch to read from",
          "placeholder": "branch_name",
          "secret": false,
          "title": "Branch",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "file_path"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "text_content": {
          "advanced": false,
          "description": "Content of the file (decoded as UTF-8 text)",
          "secret": false,
          "title": "Text Content",
          "type": "string"
        },
        "raw_content": {
          "advanced": false,
          "description": "Raw base64-encoded content of the file",
          "secret": false,
          "title": "Raw Content",
          "type": "string"
        },
        "size": {
          "advanced": false,
          "description": "The size of the file (in bytes)",
          "secret": false,
          "title": "Size",
          "type": "integer"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the file reading failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["text_content", "raw_content", "size", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads the content of a specified file from a GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1355f863-2db3-4d75-9fba-f91e8a8ca400",
    "name": "GithubReadFolderBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "folder_path": {
          "advanced": false,
          "description": "Path to the folder in the repository",
          "placeholder": "path/to/folder",
          "secret": false,
          "title": "Folder Path",
          "type": "string"
        },
        "branch": {
          "advanced": true,
          "default": "master",
          "description": "Branch name to read from (defaults to master)",
          "placeholder": "branch_name",
          "secret": false,
          "title": "Branch",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "folder_path"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "file": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "path": { "title": "Path", "type": "string" },
            "size": { "title": "Size", "type": "integer" }
          },
          "required": ["name", "path", "size"],
          "title": "FileEntry",
          "type": "object",
          "advanced": false,
          "description": "Files in the folder",
          "secret": false
        },
        "dir": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "path": { "title": "Path", "type": "string" }
          },
          "required": ["name", "path"],
          "title": "DirEntry",
          "type": "object",
          "advanced": false,
          "description": "Directories in the folder",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if reading the folder failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["file", "dir", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block reads the content of a specified folder from a GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "944cc076-95e7-4d1b-b6b6-b15d8ee5448d",
    "name": "GithubMakeBranchBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "new_branch": {
          "advanced": false,
          "description": "Name of the new branch",
          "placeholder": "new_branch_name",
          "secret": false,
          "title": "New Branch",
          "type": "string"
        },
        "source_branch": {
          "advanced": false,
          "description": "Name of the source branch",
          "placeholder": "source_branch_name",
          "secret": false,
          "title": "Source Branch",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "new_branch", "source_branch"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the branch creation operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the branch creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new branch from a specified source branch.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "0d4130f7-e0ab-4d55-adc3-0a40225e80f4",
    "name": "GithubDeleteBranchBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "branch": {
          "advanced": false,
          "description": "Name of the branch to delete",
          "placeholder": "branch_name",
          "secret": false,
          "title": "Branch",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "branch"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Status of the branch deletion operation",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the branch deletion failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block deletes a specified branch.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8fd132ac-b917-428a-8159-d62893e8a3fe",
    "name": "GithubCreateFileBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "file_path": {
          "advanced": false,
          "description": "Path where the file should be created",
          "placeholder": "path/to/file.txt",
          "secret": false,
          "title": "File Path",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "Content to write to the file",
          "placeholder": "File content here",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "branch": {
          "advanced": true,
          "default": "main",
          "description": "Branch where the file should be created",
          "secret": false,
          "title": "Branch",
          "type": "string"
        },
        "commit_message": {
          "advanced": true,
          "default": "Create new file",
          "description": "Message for the commit",
          "secret": false,
          "title": "Commit Message",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "file_path", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "url": {
          "advanced": false,
          "description": "URL of the created file",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "sha": {
          "advanced": false,
          "description": "SHA of the commit",
          "secret": false,
          "title": "Sha",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the file creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["url", "sha", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new file in a GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "30be12a4-57cb-4aa4-baf5-fcc68d136076",
    "name": "GithubUpdateFileBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "file_path": {
          "advanced": false,
          "description": "Path to the file to update",
          "placeholder": "path/to/file.txt",
          "secret": false,
          "title": "File Path",
          "type": "string"
        },
        "content": {
          "advanced": false,
          "description": "New content for the file",
          "placeholder": "Updated content here",
          "secret": false,
          "title": "Content",
          "type": "string"
        },
        "branch": {
          "advanced": true,
          "default": "main",
          "description": "Branch containing the file",
          "secret": false,
          "title": "Branch",
          "type": "string"
        },
        "commit_message": {
          "advanced": true,
          "default": "Update file",
          "description": "Message for the commit",
          "secret": false,
          "title": "Commit Message",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url", "file_path", "content"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "url": {
          "advanced": false,
          "description": "URL of the updated file",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "sha": {
          "advanced": false,
          "description": "SHA of the commit",
          "secret": false,
          "title": "Sha",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the file update failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["url", "sha", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block updates an existing file in a GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "029ec3b8-1cfd-46d3-b6aa-28e4a706efd1",
    "name": "GithubCreateRepositoryBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "name": {
          "advanced": false,
          "description": "Name of the repository to create",
          "placeholder": "my-new-repo",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "description": {
          "advanced": true,
          "default": "",
          "description": "Description of the repository",
          "placeholder": "A description of the repository",
          "secret": false,
          "title": "Description",
          "type": "string"
        },
        "private": {
          "advanced": true,
          "default": false,
          "description": "Whether the repository should be private",
          "secret": false,
          "title": "Private",
          "type": "boolean"
        },
        "auto_init": {
          "advanced": true,
          "default": true,
          "description": "Whether to initialize the repository with a README",
          "secret": false,
          "title": "Auto Init",
          "type": "boolean"
        },
        "gitignore_template": {
          "advanced": true,
          "default": "",
          "description": "Git ignore template to use (e.g., Python, Node, Java)",
          "secret": false,
          "title": "Gitignore Template",
          "type": "string"
        }
      },
      "required": ["credentials", "name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "url": {
          "advanced": false,
          "description": "URL of the created repository",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "clone_url": {
          "advanced": false,
          "description": "Git clone URL of the repository",
          "secret": false,
          "title": "Clone Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the repository creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["url", "clone_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a4b9c2d1-e5f6-4g7h-8i9j-0k1l2m3n4o5p",
    "name": "GithubListStargazersBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        }
      },
      "required": ["credentials", "repo_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "stargazer": {
          "properties": {
            "username": { "title": "Username", "type": "string" },
            "url": { "title": "Url", "type": "string" }
          },
          "required": ["username", "url"],
          "title": "Stargazer",
          "type": "object",
          "advanced": false,
          "description": "Stargazers with their username and profile URL",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if listing stargazers failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["stargazer", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block lists all users who have starred a specified GitHub repository.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3d67f123-a4b5-4c89-9d01-2e34f5c67890",
    "name": "GithubCreateStatusBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key']]",
          "type": "object",
          "credentials_scopes": ["repo:status"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo_url": {
          "advanced": false,
          "description": "URL of the GitHub repository",
          "placeholder": "https://github.com/owner/repo",
          "secret": false,
          "title": "Repo Url",
          "type": "string"
        },
        "sha": {
          "advanced": false,
          "description": "The SHA of the commit to set status for",
          "secret": false,
          "title": "Sha",
          "type": "string"
        },
        "state": {
          "enum": ["error", "failure", "pending", "success"],
          "title": "StatusState",
          "type": "string",
          "advanced": false,
          "description": "The state of the status (error, failure, pending, success)",
          "secret": false
        },
        "target_url": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "URL with additional details about this status",
          "secret": false,
          "title": "Target Url"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Short description of the status",
          "secret": false,
          "title": "Description"
        },
        "check_name": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "AutoGPT Platform Checks",
          "description": "Label to differentiate this status from others",
          "secret": false,
          "title": "Check Name"
        }
      },
      "required": ["credentials", "repo_url", "sha", "state"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "properties": {
            "id": { "title": "Id", "type": "integer" },
            "url": { "title": "Url", "type": "string" },
            "state": { "title": "State", "type": "string" },
            "context": { "title": "Context", "type": "string" },
            "description": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Description"
            },
            "target_url": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Target Url"
            },
            "created_at": { "title": "Created At", "type": "string" },
            "updated_at": { "title": "Updated At", "type": "string" }
          },
          "required": [
            "id",
            "url",
            "state",
            "context",
            "description",
            "target_url",
            "created_at",
            "updated_at"
          ],
          "title": "StatusResult",
          "type": "object",
          "advanced": false,
          "description": "Details of the created status",
          "secret": false
        },
        "error": {
          "advanced": false,
          "description": "Error message if status creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new commit status in a GitHub repository",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6c60ec01-8128-419e-988f-96a063ee2fea",
    "name": "GithubPullRequestTriggerBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["github"],
          "credentials_types": ["api_key", "oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "github",
              "title": "Provider",
              "type": "string"
            },
            "type": {
              "enum": ["api_key", "oauth2"],
              "title": "Type",
              "type": "string"
            }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.GITHUB: 'github'>], Literal['api_key', 'oauth2']]",
          "type": "object",
          "credentials_scopes": ["repo"],
          "description": "The GitHub integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "repo": {
          "advanced": false,
          "description": "Repository to subscribe to.\n\n**Note:** Make sure your GitHub credentials have permissions to create webhooks on this repo.",
          "placeholder": "{owner}/{repo}",
          "secret": false,
          "title": "Repo",
          "type": "string"
        },
        "payload": {
          "additionalProperties": true,
          "advanced": true,
          "hidden": true,
          "secret": false,
          "title": "Payload",
          "type": "object"
        },
        "events": {
          "description": "The events to subscribe to",
          "properties": {
            "opened": {
              "default": false,
              "title": "Opened",
              "type": "boolean"
            },
            "edited": {
              "default": false,
              "title": "Edited",
              "type": "boolean"
            },
            "closed": {
              "default": false,
              "title": "Closed",
              "type": "boolean"
            },
            "reopened": {
              "default": false,
              "title": "Reopened",
              "type": "boolean"
            },
            "synchronize": {
              "default": false,
              "title": "Synchronize",
              "type": "boolean"
            },
            "assigned": {
              "default": false,
              "title": "Assigned",
              "type": "boolean"
            },
            "unassigned": {
              "default": false,
              "title": "Unassigned",
              "type": "boolean"
            },
            "labeled": {
              "default": false,
              "title": "Labeled",
              "type": "boolean"
            },
            "unlabeled": {
              "default": false,
              "title": "Unlabeled",
              "type": "boolean"
            },
            "converted_to_draft": {
              "default": false,
              "title": "Converted To Draft",
              "type": "boolean"
            },
            "locked": {
              "default": false,
              "title": "Locked",
              "type": "boolean"
            },
            "unlocked": {
              "default": false,
              "title": "Unlocked",
              "type": "boolean"
            },
            "enqueued": {
              "default": false,
              "title": "Enqueued",
              "type": "boolean"
            },
            "dequeued": {
              "default": false,
              "title": "Dequeued",
              "type": "boolean"
            },
            "milestoned": {
              "default": false,
              "title": "Milestoned",
              "type": "boolean"
            },
            "demilestoned": {
              "default": false,
              "title": "Demilestoned",
              "type": "boolean"
            },
            "ready_for_review": {
              "default": false,
              "title": "Ready For Review",
              "type": "boolean"
            },
            "review_requested": {
              "default": false,
              "title": "Review Requested",
              "type": "boolean"
            },
            "review_request_removed": {
              "default": false,
              "title": "Review Request Removed",
              "type": "boolean"
            },
            "auto_merge_enabled": {
              "default": false,
              "title": "Auto Merge Enabled",
              "type": "boolean"
            },
            "auto_merge_disabled": {
              "default": false,
              "title": "Auto Merge Disabled",
              "type": "boolean"
            }
          },
          "title": "Events",
          "type": "object",
          "advanced": false,
          "secret": false
        }
      },
      "required": ["credentials", "repo", "events"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "payload": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The complete webhook payload that was received from GitHub. Includes information about the affected resource (e.g. pull request), the event, and the user who triggered the event.",
          "secret": false,
          "title": "Payload",
          "type": "object"
        },
        "triggered_by_user": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Object representing the GitHub user who triggered the event",
          "secret": false,
          "title": "Triggered By User",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the payload could not be processed",
          "secret": false,
          "title": "Error",
          "type": "string"
        },
        "event": {
          "advanced": false,
          "description": "The PR event that triggered the webhook (e.g. 'opened')",
          "secret": false,
          "title": "Event",
          "type": "string"
        },
        "number": {
          "advanced": false,
          "description": "The number of the affected pull request",
          "secret": false,
          "title": "Number",
          "type": "integer"
        },
        "pull_request": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Object representing the affected pull request",
          "secret": false,
          "title": "Pull Request",
          "type": "object"
        },
        "pull_request_url": {
          "advanced": false,
          "description": "The URL of the affected pull request",
          "secret": false,
          "title": "Pull Request Url",
          "type": "string"
        }
      },
      "required": [
        "payload",
        "triggered_by_user",
        "error",
        "event",
        "number",
        "pull_request",
        "pull_request_url"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block triggers on pull request events and outputs the event type and payload.",
    "categories": [
      {
        "category": "DEVELOPER_TOOLS",
        "description": "Developer tools such as GitHub blocks."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Webhook"
  },
  {
    "id": "f9c68f55-dcca-40a8-8771-abf9601680aa",
    "name": "LinearCreateIssueBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["linear"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "linear",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.LINEAR: 'linear'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": ["issues:create", "read"],
          "description": "The Linear integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "title": {
          "advanced": false,
          "description": "Title of the issue",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "description": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "description": "Description of the issue",
          "secret": false,
          "title": "Description"
        },
        "team_name": {
          "advanced": false,
          "description": "Name of the team to create the issue on",
          "secret": false,
          "title": "Team Name",
          "type": "string"
        },
        "priority": {
          "advanced": true,
          "anyOf": [
            { "maximum": 4, "minimum": 0, "type": "integer" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Priority of the issue",
          "secret": false,
          "title": "Priority"
        },
        "project_name": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Name of the project to create the issue on",
          "secret": false,
          "title": "Project Name"
        }
      },
      "required": ["credentials", "title", "description", "team_name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "issue_id": {
          "advanced": false,
          "description": "ID of the created issue",
          "secret": false,
          "title": "Issue Id",
          "type": "string"
        },
        "issue_title": {
          "advanced": false,
          "description": "Title of the created issue",
          "secret": false,
          "title": "Issue Title",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if issue creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["issue_id", "issue_title", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new issue on Linear",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      },
      {
        "category": "ISSUE_TRACKING",
        "description": "Block that helps with issue tracking"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b5a2a0e6-26b4-4c5b-8a42-bc79e9cb65c2",
    "name": "LinearSearchIssuesBlock",
    "inputSchema": {
      "properties": {
        "term": {
          "advanced": false,
          "description": "Term to search for issues",
          "secret": false,
          "title": "Term",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["linear"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "linear",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.LINEAR: 'linear'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": ["read"],
          "description": "The Linear integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        }
      },
      "required": ["term", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "issues": {
          "advanced": false,
          "description": "List of issues",
          "items": {
            "properties": {
              "id": { "title": "Id", "type": "string" },
              "identifier": { "title": "Identifier", "type": "string" },
              "title": { "title": "Title", "type": "string" },
              "description": {
                "anyOf": [{ "type": "string" }, { "type": "null" }],
                "title": "Description"
              },
              "priority": { "title": "Priority", "type": "integer" }
            },
            "required": [
              "id",
              "identifier",
              "title",
              "description",
              "priority"
            ],
            "title": "Issue",
            "type": "object"
          },
          "secret": false,
          "title": "Issues",
          "type": "array"
        }
      },
      "required": ["issues"],
      "title": "Output",
      "type": "object"
    },
    "description": "Searches for issues on Linear",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8f7d3a2e-9b5c-4c6a-8f1d-7c8b3e4a5d6c",
    "name": "LinearCreateCommentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["linear"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "linear",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.LINEAR: 'linear'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": ["comments:create", "read"],
          "description": "The Linear integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "issue_id": {
          "advanced": false,
          "description": "ID of the issue to comment on",
          "secret": false,
          "title": "Issue Id",
          "type": "string"
        },
        "comment": {
          "advanced": false,
          "description": "Comment text to add to the issue",
          "secret": false,
          "title": "Comment",
          "type": "string"
        }
      },
      "required": ["credentials", "issue_id", "comment"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "comment_id": {
          "advanced": false,
          "description": "ID of the created comment",
          "secret": false,
          "title": "Comment Id",
          "type": "string"
        },
        "comment_body": {
          "advanced": false,
          "description": "Text content of the created comment",
          "secret": false,
          "title": "Comment Body",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if comment creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["comment_id", "comment_body", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Creates a new comment on a Linear issue",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      },
      {
        "category": "ISSUE_TRACKING",
        "description": "Block that helps with issue tracking"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "446a1d35-9d8f-4ac5-83ea-7684ec50e6af",
    "name": "LinearSearchProjectsBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["linear"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "linear",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.LINEAR: 'linear'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": ["read"],
          "description": "The Linear integration can be used with OAuth, or any API key with sufficient permissions for the blocks it is used on."
        },
        "term": {
          "advanced": false,
          "description": "Term to search for projects",
          "secret": false,
          "title": "Term",
          "type": "string"
        }
      },
      "required": ["credentials", "term"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "projects": {
          "advanced": false,
          "description": "List of projects",
          "items": {
            "properties": {
              "id": { "title": "Id", "type": "string" },
              "name": { "title": "Name", "type": "string" },
              "description": { "title": "Description", "type": "string" },
              "priority": { "title": "Priority", "type": "integer" },
              "progress": { "title": "Progress", "type": "integer" },
              "content": { "title": "Content", "type": "string" }
            },
            "required": [
              "id",
              "name",
              "description",
              "priority",
              "progress",
              "content"
            ],
            "title": "Project",
            "type": "object"
          },
          "secret": false,
          "title": "Projects",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if issue creation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["projects", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Searches for projects on Linear",
    "categories": [
      {
        "category": "PRODUCTIVITY",
        "description": "Block that helps with productivity"
      },
      {
        "category": "ISSUE_TRACKING",
        "description": "Block that helps with issue tracking"
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8fa8c167-2002-47ce-aba8-97572fc5d387",
    "name": "GenericWebhookTriggerBlock",
    "inputSchema": {
      "properties": {
        "payload": {
          "additionalProperties": true,
          "advanced": true,
          "hidden": true,
          "secret": false,
          "title": "Payload",
          "type": "object"
        },
        "constants": {
          "additionalProperties": true,
          "advanced": true,
          "description": "The constants to be set when the block is put on the graph",
          "secret": false,
          "title": "Constants",
          "type": "object"
        }
      },
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "payload": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The complete webhook payload that was received from the generic webhook.",
          "secret": false,
          "title": "Payload",
          "type": "object"
        },
        "constants": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The constants to be set when the block is put on the graph",
          "secret": false,
          "title": "Constants",
          "type": "object"
        }
      },
      "required": ["payload", "constants"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block will output the contents of the generic input for the webhook.",
    "categories": [
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Webhook (manual)"
  },
  {
    "id": "37e386a4-a631-11ef-b7bd-b78204b35fa4",
    "name": "TwitterUnfollowUserBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "bookmark.write",
            "users.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID of the user that you would like to unfollow",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the unfollow action was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unfollows a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1aae6a5e-a631-11ef-a090-435900c6d429",
    "name": "TwitterFollowUserBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "bookmark.write",
            "users.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID of the user that you would like to follow",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the follow action was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block follows a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "30f66410-a631-11ef-8fe7-d7f888b4f43c",
    "name": "TwitterGetFollowersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID whose followers you would like to retrieve",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-1000, default 100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for retrieving next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of follower user IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of follower usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete user data for followers",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "usernames",
        "next_token",
        "data",
        "includes",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves followers of a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "264a399c-a631-11ef-a97d-bfde4ca91173",
    "name": "TwitterGetFollowingBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID whose following you would like to retrieve",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-1000, default 100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for retrieving next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of following user IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of following usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete user data for following",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "usernames",
        "next_token",
        "data",
        "includes",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves the users that a specified Twitter user is following.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5446db8e-a631-11ef-812a-cf315d373ee9",
    "name": "TwitterGetUserBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "identifier": {
          "advanced": false,
          "description": "Choose whether to identify the user by their unique Twitter ID or by their username",
          "discriminator": {
            "mapping": {
              "user_id": "#/$defs/UserId",
              "username": "#/$defs/Username"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "user_id",
                  "title": "Discriminator",
                  "type": "string"
                },
                "user_id": {
                  "advanced": true,
                  "default": "",
                  "description": "The ID of the user to lookup",
                  "secret": false,
                  "title": "User Id",
                  "type": "string"
                }
              },
              "required": ["discriminator"],
              "title": "UserId",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "username",
                  "title": "Discriminator",
                  "type": "string"
                },
                "username": {
                  "advanced": true,
                  "default": "",
                  "description": "The Twitter username (handle) of the user",
                  "secret": false,
                  "title": "Username",
                  "type": "string"
                }
              },
              "required": ["discriminator"],
              "title": "Username",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Identifier"
        }
      },
      "required": ["credentials", "identifier"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "User ID",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "username_": {
          "advanced": false,
          "description": "User username",
          "secret": false,
          "title": "Username",
          "type": "string"
        },
        "name_": {
          "advanced": false,
          "description": "User name",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete user data",
          "secret": false,
          "title": "Data",
          "type": "object"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "username_", "name_", "data", "included", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5abc857c-a631-11ef-8cfc-f7b79354f7a1",
    "name": "TwitterGetUsersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "identifier": {
          "advanced": false,
          "description": "Choose whether to identify users by their unique Twitter IDs or by their usernames",
          "discriminator": {
            "mapping": {
              "user_id_list": "#/$defs/UserIdList",
              "username_list": "#/$defs/UsernameList"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "user_id_list",
                  "title": "Discriminator",
                  "type": "string"
                },
                "user_ids": {
                  "advanced": false,
                  "description": "List of user IDs to lookup (max 100)",
                  "items": { "type": "string" },
                  "placeholder": "Enter user IDs",
                  "secret": false,
                  "title": "User Ids",
                  "type": "array"
                }
              },
              "required": ["discriminator"],
              "title": "UserIdList",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "username_list",
                  "title": "Discriminator",
                  "type": "string"
                },
                "usernames": {
                  "advanced": false,
                  "description": "List of Twitter usernames/handles to lookup (max 100)",
                  "items": { "type": "string" },
                  "placeholder": "Enter usernames",
                  "secret": false,
                  "title": "Usernames",
                  "type": "array"
                }
              },
              "required": ["discriminator"],
              "title": "UsernameList",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Identifier"
        }
      },
      "required": ["credentials", "identifier"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "User IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "usernames_": {
          "advanced": false,
          "description": "User usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "names_": {
          "advanced": false,
          "description": "User names",
          "items": { "type": "string" },
          "secret": false,
          "title": "Names",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete users data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["ids", "usernames_", "names_", "data", "included", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about multiple Twitter users.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "05f409e8-a631-11ef-ae89-93de863ee30d",
    "name": "TwitterGetBlockedUsersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-1000, default 100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for retrieving next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "user_ids": {
          "advanced": false,
          "description": "List of blocked user IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "User Ids",
          "type": "array"
        },
        "usernames_": {
          "advanced": false,
          "description": "List of blocked usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "user_ids",
        "usernames_",
        "included",
        "meta",
        "next_token",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves a list of users blocked by the authenticating user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "40458504-a631-11ef-940b-eff92be55422",
    "name": "TwitterUnmuteUserBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "bookmark.write",
            "users.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID of the user that you would like to unmute",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the unmute action was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unmutes a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "475024da-a631-11ef-9ccd-f724b8b03cda",
    "name": "TwitterGetMutedUsersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "The maximum number of results to be returned per page (1-1000). Default is 100.",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token to request next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of muted user IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of muted usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete user data for muted users",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "usernames",
        "next_token",
        "data",
        "includes",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block gets a list of users muted by the authenticating user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4d1919d0-a631-11ef-90ab-3b73af9ce8f1",
    "name": "TwitterMuteUserBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "bookmark.write",
            "users.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "target_user_id": {
          "advanced": false,
          "description": "The user ID of the user that you would like to mute",
          "placeholder": "Enter target user ID",
          "secret": false,
          "title": "Target User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "target_user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the mute action was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block mutes a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "6657edb0-a62f-11ef-8c10-0326d832467d",
    "name": "TwitterGetListTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List whose Tweets you would like to retrieve",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results per page (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for paginating through results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "tweet_ids": {
          "advanced": false,
          "description": "List of tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Tweet Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "List of tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Token for next page of results",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete list tweets data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Response metadata including pagination tokens",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "tweet_ids",
        "texts",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves tweets from a specified Twitter list.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a099c034-a62f-11ef-9622-47d0ceb73555",
    "name": "TwitterUnpinListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to unpin",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the unpin was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block allows the authenticated user to unpin a specified List.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "8ec16e48-a62f-11ef-9f35-f3d6de43a802",
    "name": "TwitterPinListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to pin",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the pin was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block allows the authenticated user to pin a specified List.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "97e03aae-a62f-11ef-bc53-5b89cb02888f",
    "name": "TwitterGetPinnedListsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_Owner_ID": {
                  "default": false,
                  "title": "List Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": { "List_Owner_ID": true },
          "description": "Choose what extra information you want to get with your Twitter Lists:\n- Select 'List_Owner_ID' to get details about who owns the list\n\nThis will let you see more details about the list owner when you also select user fields below.",
          "placeholder": "Pick what extra list information you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Account_Creation_Date": false,
            "User_Bio": false,
            "User_Entities": false,
            "User_ID": true,
            "User_Location": false,
            "Latest_Tweet_ID": false,
            "Display_Name": false,
            "Pinned_Tweet_ID": false,
            "Profile_Picture_URL": false,
            "Is_Protected_Account": false,
            "Account_Statistics": false,
            "Profile_URL": false,
            "Username": true,
            "Is_Verified": false,
            "Verification_Type": false,
            "Content_Withholding_Info": false
          },
          "description": "Choose what information you want to see about list owners. This only works when you select 'List_Owner_ID' in expansions above.\n\nYou can see things like:\n- Their username\n- Profile picture\n- Account details\n- And more",
          "placeholder": "Select what details you want to see about list owners",
          "secret": false
        },
        "list_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_ID": {
                  "default": false,
                  "title": "List Id",
                  "type": "boolean"
                },
                "List_Name": {
                  "default": false,
                  "title": "List Name",
                  "type": "boolean"
                },
                "Creation_Date": {
                  "default": false,
                  "title": "Creation Date",
                  "type": "boolean"
                },
                "Description": {
                  "default": false,
                  "title": "Description",
                  "type": "boolean"
                },
                "Follower_Count": {
                  "default": false,
                  "title": "Follower Count",
                  "type": "boolean"
                },
                "Member_Count": {
                  "default": false,
                  "title": "Member Count",
                  "type": "boolean"
                },
                "Is_Private": {
                  "default": false,
                  "title": "Is Private",
                  "type": "boolean"
                },
                "Owner_ID": {
                  "default": false,
                  "title": "Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "List_ID": false,
            "List_Name": false,
            "Creation_Date": false,
            "Description": false,
            "Follower_Count": false,
            "Member_Count": false,
            "Is_Private": false,
            "Owner_ID": true
          },
          "description": "Choose what information you want to see about the Twitter Lists themselves, such as:\n- List name\n- Description\n- Number of followers\n- Number of members\n- Whether it's private\n- Creation date\n- And more",
          "placeholder": "Pick what list details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "lists.read",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "list_ids": {
          "advanced": false,
          "description": "List IDs of the pinned lists",
          "items": { "type": "string" },
          "secret": false,
          "title": "List Ids",
          "type": "array"
        },
        "list_names": {
          "advanced": false,
          "description": "List names of the pinned lists",
          "items": { "type": "string" },
          "secret": false,
          "title": "List Names",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Response data containing pinned lists",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about the response",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "list_ids",
        "list_names",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block returns the Lists pinned by the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "5a3d1320-a62f-11ef-b7ce-a79e7656bcb0",
    "name": "TwitterRemoveListMemberBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to remove the member from",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "user_id": {
          "advanced": false,
          "description": "The ID of the user to remove from the List",
          "placeholder": "Enter user ID to remove",
          "secret": false,
          "title": "User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the member was successfully removed",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the removal failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block removes a specified user from a Twitter List owned by the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "3ee8284e-a62f-11ef-84e4-8f6e2cbf0ddb",
    "name": "TwitterAddListMemberBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to add the member to",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "user_id": {
          "advanced": false,
          "description": "The ID of the user to add to the List",
          "placeholder": "Enter user ID to add",
          "secret": false,
          "title": "User Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the member was successfully added",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the addition failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block adds a specified user to a Twitter List owned by the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4dba046e-a62f-11ef-b69a-87240c84b4c7",
    "name": "TwitterGetListMembersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to get members from",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results per page (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of member user IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of member usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete user data for list members",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "usernames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves the members of a specified Twitter List.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "46e6429c-a62f-11ef-81c0-2b55bc7823ba",
    "name": "TwitterGetListMembershipsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_Owner_ID": {
                  "default": false,
                  "title": "List Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": { "List_Owner_ID": true },
          "description": "Choose what extra information you want to get with your Twitter Lists:\n- Select 'List_Owner_ID' to get details about who owns the list\n\nThis will let you see more details about the list owner when you also select user fields below.",
          "placeholder": "Pick what extra list information you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Account_Creation_Date": false,
            "User_Bio": false,
            "User_Entities": false,
            "User_ID": true,
            "User_Location": false,
            "Latest_Tweet_ID": false,
            "Display_Name": false,
            "Pinned_Tweet_ID": false,
            "Profile_Picture_URL": false,
            "Is_Protected_Account": false,
            "Account_Statistics": false,
            "Profile_URL": false,
            "Username": true,
            "Is_Verified": false,
            "Verification_Type": false,
            "Content_Withholding_Info": false
          },
          "description": "Choose what information you want to see about list owners. This only works when you select 'List_Owner_ID' in expansions above.\n\nYou can see things like:\n- Their username\n- Profile picture\n- Account details\n- And more",
          "placeholder": "Select what details you want to see about list owners",
          "secret": false
        },
        "list_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_ID": {
                  "default": false,
                  "title": "List Id",
                  "type": "boolean"
                },
                "List_Name": {
                  "default": false,
                  "title": "List Name",
                  "type": "boolean"
                },
                "Creation_Date": {
                  "default": false,
                  "title": "Creation Date",
                  "type": "boolean"
                },
                "Description": {
                  "default": false,
                  "title": "Description",
                  "type": "boolean"
                },
                "Follower_Count": {
                  "default": false,
                  "title": "Follower Count",
                  "type": "boolean"
                },
                "Member_Count": {
                  "default": false,
                  "title": "Member Count",
                  "type": "boolean"
                },
                "Is_Private": {
                  "default": false,
                  "title": "Is Private",
                  "type": "boolean"
                },
                "Owner_ID": {
                  "default": false,
                  "title": "Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "List_ID": false,
            "List_Name": false,
            "Creation_Date": false,
            "Description": false,
            "Follower_Count": false,
            "Member_Count": false,
            "Is_Private": false,
            "Owner_ID": true
          },
          "description": "Choose what information you want to see about the Twitter Lists themselves, such as:\n- List name\n- Description\n- Number of followers\n- Number of members\n- Whether it's private\n- Creation date\n- And more",
          "placeholder": "Pick what list details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "user_id": {
          "advanced": false,
          "description": "The ID of the user whose List memberships to retrieve",
          "placeholder": "Enter user ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results per page (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "list_ids": {
          "advanced": false,
          "description": "List of list IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "List Ids",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "List membership data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about pagination",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "list_ids",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves all Lists that a specified user is a member of.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1f43310a-a62f-11ef-8276-2b06a1bbae1a",
    "name": "TwitterUnfollowListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to unfollow",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the unfollow was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unfollows a specified Twitter list for the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "03d8acf6-a62f-11ef-b17f-b72b04a09e79",
    "name": "TwitterFollowListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to follow",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the follow was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block follows a specified Twitter list for the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "34ebc80a-a62f-11ef-9c2a-3fcab6c07079",
    "name": "TwitterGetListBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_Owner_ID": {
                  "default": false,
                  "title": "List Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": { "List_Owner_ID": true },
          "description": "Choose what extra information you want to get with your Twitter Lists:\n- Select 'List_Owner_ID' to get details about who owns the list\n\nThis will let you see more details about the list owner when you also select user fields below.",
          "placeholder": "Pick what extra list information you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Account_Creation_Date": false,
            "User_Bio": false,
            "User_Entities": false,
            "User_ID": true,
            "User_Location": false,
            "Latest_Tweet_ID": false,
            "Display_Name": false,
            "Pinned_Tweet_ID": false,
            "Profile_Picture_URL": false,
            "Is_Protected_Account": false,
            "Account_Statistics": false,
            "Profile_URL": false,
            "Username": true,
            "Is_Verified": false,
            "Verification_Type": false,
            "Content_Withholding_Info": false
          },
          "description": "Choose what information you want to see about list owners. This only works when you select 'List_Owner_ID' in expansions above.\n\nYou can see things like:\n- Their username\n- Profile picture\n- Account details\n- And more",
          "placeholder": "Select what details you want to see about list owners",
          "secret": false
        },
        "list_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_ID": {
                  "default": false,
                  "title": "List Id",
                  "type": "boolean"
                },
                "List_Name": {
                  "default": false,
                  "title": "List Name",
                  "type": "boolean"
                },
                "Creation_Date": {
                  "default": false,
                  "title": "Creation Date",
                  "type": "boolean"
                },
                "Description": {
                  "default": false,
                  "title": "Description",
                  "type": "boolean"
                },
                "Follower_Count": {
                  "default": false,
                  "title": "Follower Count",
                  "type": "boolean"
                },
                "Member_Count": {
                  "default": false,
                  "title": "Member Count",
                  "type": "boolean"
                },
                "Is_Private": {
                  "default": false,
                  "title": "Is Private",
                  "type": "boolean"
                },
                "Owner_ID": {
                  "default": false,
                  "title": "Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "List_ID": false,
            "List_Name": false,
            "Creation_Date": false,
            "Description": false,
            "Follower_Count": false,
            "Member_Count": false,
            "Is_Private": false,
            "Owner_ID": true
          },
          "description": "Choose what information you want to see about the Twitter Lists themselves, such as:\n- List name\n- Description\n- Number of followers\n- Number of members\n- Whether it's private\n- Creation date\n- And more",
          "placeholder": "Pick what list details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to lookup",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "ID of the Twitter List",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "name": {
          "advanced": false,
          "description": "Name of the Twitter List",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "owner_id": {
          "advanced": false,
          "description": "ID of the List owner",
          "secret": false,
          "title": "Owner Id",
          "type": "string"
        },
        "owner_username": {
          "advanced": false,
          "description": "Username of the List owner",
          "secret": false,
          "title": "Owner Username",
          "type": "string"
        },
        "data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete list data",
          "secret": false,
          "title": "Data",
          "type": "object"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about the response",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "owner_id",
        "owner_username",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about a specified Twitter List.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "2b6bdb26-a62f-11ef-a9ce-ff89c2568726",
    "name": "TwitterGetOwnedListsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_Owner_ID": {
                  "default": false,
                  "title": "List Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": { "List_Owner_ID": true },
          "description": "Choose what extra information you want to get with your Twitter Lists:\n- Select 'List_Owner_ID' to get details about who owns the list\n\nThis will let you see more details about the list owner when you also select user fields below.",
          "placeholder": "Pick what extra list information you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Account_Creation_Date": false,
            "User_Bio": false,
            "User_Entities": false,
            "User_ID": true,
            "User_Location": false,
            "Latest_Tweet_ID": false,
            "Display_Name": false,
            "Pinned_Tweet_ID": false,
            "Profile_Picture_URL": false,
            "Is_Protected_Account": false,
            "Account_Statistics": false,
            "Profile_URL": false,
            "Username": true,
            "Is_Verified": false,
            "Verification_Type": false,
            "Content_Withholding_Info": false
          },
          "description": "Choose what information you want to see about list owners. This only works when you select 'List_Owner_ID' in expansions above.\n\nYou can see things like:\n- Their username\n- Profile picture\n- Account details\n- And more",
          "placeholder": "Select what details you want to see about list owners",
          "secret": false
        },
        "list_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "List_ID": {
                  "default": false,
                  "title": "List Id",
                  "type": "boolean"
                },
                "List_Name": {
                  "default": false,
                  "title": "List Name",
                  "type": "boolean"
                },
                "Creation_Date": {
                  "default": false,
                  "title": "Creation Date",
                  "type": "boolean"
                },
                "Description": {
                  "default": false,
                  "title": "Description",
                  "type": "boolean"
                },
                "Follower_Count": {
                  "default": false,
                  "title": "Follower Count",
                  "type": "boolean"
                },
                "Member_Count": {
                  "default": false,
                  "title": "Member Count",
                  "type": "boolean"
                },
                "Is_Private": {
                  "default": false,
                  "title": "Is Private",
                  "type": "boolean"
                },
                "Owner_ID": {
                  "default": false,
                  "title": "Owner Id",
                  "type": "boolean"
                }
              },
              "title": "ListFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "List_ID": false,
            "List_Name": false,
            "Creation_Date": false,
            "Description": false,
            "Follower_Count": false,
            "Member_Count": false,
            "Is_Private": false,
            "Owner_ID": true
          },
          "description": "Choose what information you want to see about the Twitter Lists themselves, such as:\n- List name\n- Description\n- Number of followers\n- Number of members\n- Whether it's private\n- Creation date\n- And more",
          "placeholder": "Pick what list details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "user_id": {
          "advanced": false,
          "description": "The user ID whose owned Lists to retrieve",
          "placeholder": "Enter user ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results per page (1-100)",
          "placeholder": "Enter max results (default 100)",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "list_ids": {
          "advanced": false,
          "description": "List ids of the owned lists",
          "items": { "type": "string" },
          "secret": false,
          "title": "List Ids",
          "type": "array"
        },
        "list_names": {
          "advanced": false,
          "description": "List names of the owned lists",
          "items": { "type": "string" },
          "secret": false,
          "title": "List Names",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Token for next page of results",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete owned lists data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about the response",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "list_ids",
        "list_names",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves all Lists owned by a specified Twitter user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "843c6892-a62f-11ef-a5c8-b71239a78d3b",
    "name": "TwitterDeleteListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to be deleted",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the deletion was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block deletes a specified Twitter List owned by the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7d12630a-a62f-11ef-90c9-8f5a996612c3",
    "name": "TwitterUpdateListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "list_id": {
          "advanced": false,
          "description": "The ID of the List to be updated",
          "placeholder": "Enter list ID",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "name": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "New name for the List",
          "placeholder": "Enter list name",
          "secret": false,
          "title": "Name"
        },
        "description": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "New description for the List",
          "placeholder": "Enter list description",
          "secret": false,
          "title": "Description"
        }
      },
      "required": ["credentials", "list_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the update was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block updates a specified Twitter List owned by the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "724148ba-a62f-11ef-89ba-5349b813ef5f",
    "name": "TwitterCreateListBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "name": {
          "advanced": false,
          "default": "",
          "description": "The name of the List to be created",
          "placeholder": "Enter list name",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "description": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Description of the List",
          "placeholder": "Enter list description",
          "secret": false,
          "title": "Description"
        },
        "private": {
          "advanced": false,
          "default": false,
          "description": "Whether the List should be private",
          "secret": false,
          "title": "Private",
          "type": "boolean"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "url": {
          "advanced": false,
          "description": "URL of the created list",
          "secret": false,
          "title": "Url",
          "type": "string"
        },
        "list_id": {
          "advanced": false,
          "description": "ID of the created list",
          "secret": false,
          "title": "List Id",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["url", "list_id", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block creates a new Twitter List for the authenticated user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d75bd7d8-a62f-11ef-b0d8-c7a9496f617f",
    "name": "TwitterGetSpacesBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Invited_Users": {
                  "default": false,
                  "title": "Invited Users",
                  "type": "boolean"
                },
                "Speakers": {
                  "default": false,
                  "title": "Speakers",
                  "type": "boolean"
                },
                "Creator": {
                  "default": false,
                  "title": "Creator",
                  "type": "boolean"
                },
                "Hosts": {
                  "default": false,
                  "title": "Hosts",
                  "type": "boolean"
                },
                "Topics": {
                  "default": false,
                  "title": "Topics",
                  "type": "boolean"
                }
              },
              "title": "SpaceExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose additional information you want to get with your Twitter Spaces:\n- Select 'Invited_Users' to see who was invited\n- Select 'Speakers' to see who can speak\n- Select 'Creator' to get details about who made the Space\n- Select 'Hosts' to see who's hosting\n- Select 'Topics' to see Space topics",
          "placeholder": "Pick what extra information you want to see about the Space",
          "secret": false
        },
        "space_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Space_ID": {
                  "default": false,
                  "title": "Space Id",
                  "type": "boolean"
                },
                "Space_State": {
                  "default": false,
                  "title": "Space State",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "End_Time": {
                  "default": false,
                  "title": "End Time",
                  "type": "boolean"
                },
                "Host_User_IDs": {
                  "default": false,
                  "title": "Host User Ids",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Is_Ticketed": {
                  "default": false,
                  "title": "Is Ticketed",
                  "type": "boolean"
                },
                "Invited_User_IDs": {
                  "default": false,
                  "title": "Invited User Ids",
                  "type": "boolean"
                },
                "Participant_Count": {
                  "default": false,
                  "title": "Participant Count",
                  "type": "boolean"
                },
                "Subscriber_Count": {
                  "default": false,
                  "title": "Subscriber Count",
                  "type": "boolean"
                },
                "Scheduled_Start_Time": {
                  "default": false,
                  "title": "Scheduled Start Time",
                  "type": "boolean"
                },
                "Speaker_User_IDs": {
                  "default": false,
                  "title": "Speaker User Ids",
                  "type": "boolean"
                },
                "Start_Time": {
                  "default": false,
                  "title": "Start Time",
                  "type": "boolean"
                },
                "Space_Title": {
                  "default": false,
                  "title": "Space Title",
                  "type": "boolean"
                },
                "Topic_IDs": {
                  "default": false,
                  "title": "Topic Ids",
                  "type": "boolean"
                },
                "Last_Updated_Time": {
                  "default": false,
                  "title": "Last Updated Time",
                  "type": "boolean"
                }
              },
              "title": "SpaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Space_ID": false,
            "Space_State": false,
            "Creation_Time": false,
            "End_Time": false,
            "Host_User_IDs": true,
            "Language": false,
            "Is_Ticketed": false,
            "Invited_User_IDs": false,
            "Participant_Count": false,
            "Subscriber_Count": false,
            "Scheduled_Start_Time": false,
            "Speaker_User_IDs": false,
            "Start_Time": false,
            "Space_Title": true,
            "Topic_IDs": false,
            "Last_Updated_Time": false
          },
          "description": "Choose what Space details you want to see, such as:\n- Title\n- Start/End times\n- Number of participants\n- Language\n- State (live/scheduled)\n- And more",
          "placeholder": "Choose what Space information you want to get",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what user information you want to see. This works when you select any of these in expansions above:\n- 'Creator' for Space creator details\n- 'Hosts' for host information\n- 'Speakers' for speaker details\n- 'Invited_Users' for invited user information",
          "placeholder": "Pick what details you want to see about the users",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "spaces.read",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "identifier": {
          "advanced": false,
          "description": "Choose whether to lookup spaces by their IDs or by creator user IDs",
          "discriminator": {
            "mapping": {
              "space_list": "#/$defs/SpaceList",
              "user_list": "#/$defs/UserList"
            },
            "propertyName": "discriminator"
          },
          "oneOf": [
            {
              "properties": {
                "discriminator": {
                  "const": "space_list",
                  "title": "Discriminator",
                  "type": "string"
                },
                "space_ids": {
                  "advanced": false,
                  "description": "List of Space IDs to lookup (up to 100)",
                  "items": { "type": "string" },
                  "placeholder": "Enter Space IDs",
                  "secret": false,
                  "title": "Space Ids",
                  "type": "array"
                }
              },
              "required": ["discriminator"],
              "title": "SpaceList",
              "type": "object"
            },
            {
              "properties": {
                "discriminator": {
                  "const": "user_list",
                  "title": "Discriminator",
                  "type": "string"
                },
                "user_ids": {
                  "advanced": false,
                  "description": "List of user IDs to lookup their Spaces (up to 100)",
                  "items": { "type": "string" },
                  "placeholder": "Enter user IDs",
                  "secret": false,
                  "title": "User Ids",
                  "type": "array"
                }
              },
              "required": ["discriminator"],
              "title": "UserList",
              "type": "object"
            }
          ],
          "secret": false,
          "title": "Identifier"
        }
      },
      "required": ["credentials", "identifier"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of space IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "titles": {
          "advanced": false,
          "description": "List of space titles",
          "items": { "type": "string" },
          "secret": false,
          "title": "Titles",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete space data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["ids", "titles", "data", "includes", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about multiple Twitter Spaces.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c79700de-a62f-11ef-ab20-fb32bf9d5a9d",
    "name": "TwitterGetSpaceByIdBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Invited_Users": {
                  "default": false,
                  "title": "Invited Users",
                  "type": "boolean"
                },
                "Speakers": {
                  "default": false,
                  "title": "Speakers",
                  "type": "boolean"
                },
                "Creator": {
                  "default": false,
                  "title": "Creator",
                  "type": "boolean"
                },
                "Hosts": {
                  "default": false,
                  "title": "Hosts",
                  "type": "boolean"
                },
                "Topics": {
                  "default": false,
                  "title": "Topics",
                  "type": "boolean"
                }
              },
              "title": "SpaceExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose additional information you want to get with your Twitter Spaces:\n- Select 'Invited_Users' to see who was invited\n- Select 'Speakers' to see who can speak\n- Select 'Creator' to get details about who made the Space\n- Select 'Hosts' to see who's hosting\n- Select 'Topics' to see Space topics",
          "placeholder": "Pick what extra information you want to see about the Space",
          "secret": false
        },
        "space_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Space_ID": {
                  "default": false,
                  "title": "Space Id",
                  "type": "boolean"
                },
                "Space_State": {
                  "default": false,
                  "title": "Space State",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "End_Time": {
                  "default": false,
                  "title": "End Time",
                  "type": "boolean"
                },
                "Host_User_IDs": {
                  "default": false,
                  "title": "Host User Ids",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Is_Ticketed": {
                  "default": false,
                  "title": "Is Ticketed",
                  "type": "boolean"
                },
                "Invited_User_IDs": {
                  "default": false,
                  "title": "Invited User Ids",
                  "type": "boolean"
                },
                "Participant_Count": {
                  "default": false,
                  "title": "Participant Count",
                  "type": "boolean"
                },
                "Subscriber_Count": {
                  "default": false,
                  "title": "Subscriber Count",
                  "type": "boolean"
                },
                "Scheduled_Start_Time": {
                  "default": false,
                  "title": "Scheduled Start Time",
                  "type": "boolean"
                },
                "Speaker_User_IDs": {
                  "default": false,
                  "title": "Speaker User Ids",
                  "type": "boolean"
                },
                "Start_Time": {
                  "default": false,
                  "title": "Start Time",
                  "type": "boolean"
                },
                "Space_Title": {
                  "default": false,
                  "title": "Space Title",
                  "type": "boolean"
                },
                "Topic_IDs": {
                  "default": false,
                  "title": "Topic Ids",
                  "type": "boolean"
                },
                "Last_Updated_Time": {
                  "default": false,
                  "title": "Last Updated Time",
                  "type": "boolean"
                }
              },
              "title": "SpaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Space_ID": false,
            "Space_State": false,
            "Creation_Time": false,
            "End_Time": false,
            "Host_User_IDs": true,
            "Language": false,
            "Is_Ticketed": false,
            "Invited_User_IDs": false,
            "Participant_Count": false,
            "Subscriber_Count": false,
            "Scheduled_Start_Time": false,
            "Speaker_User_IDs": false,
            "Start_Time": false,
            "Space_Title": true,
            "Topic_IDs": false,
            "Last_Updated_Time": false
          },
          "description": "Choose what Space details you want to see, such as:\n- Title\n- Start/End times\n- Number of participants\n- Language\n- State (live/scheduled)\n- And more",
          "placeholder": "Choose what Space information you want to get",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what user information you want to see. This works when you select any of these in expansions above:\n- 'Creator' for Space creator details\n- 'Hosts' for host information\n- 'Speakers' for speaker details\n- 'Invited_Users' for invited user information",
          "placeholder": "Pick what details you want to see about the users",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "spaces.read",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "space_id": {
          "advanced": false,
          "description": "Space ID to lookup",
          "placeholder": "Enter Space ID",
          "secret": false,
          "title": "Space Id",
          "type": "string"
        }
      },
      "required": ["credentials", "space_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "Space ID",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "title": {
          "advanced": false,
          "description": "Space title",
          "secret": false,
          "title": "Title",
          "type": "string"
        },
        "host_ids": {
          "advanced": false,
          "description": "Host ID",
          "items": { "type": "string" },
          "secret": false,
          "title": "Host Ids",
          "type": "array"
        },
        "data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Complete space data",
          "secret": false,
          "title": "Data",
          "type": "object"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["id", "title", "host_ids", "data", "includes", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about a single Twitter Space.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c1c121a8-a62f-11ef-8b0e-d7b85f96a46f",
    "name": "TwitterGetSpaceBuyersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "spaces.read",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "space_id": {
          "advanced": false,
          "description": "Space ID to lookup buyers for",
          "placeholder": "Enter Space ID",
          "secret": false,
          "title": "Space Id",
          "type": "string"
        }
      },
      "required": ["credentials", "space_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "buyer_ids": {
          "advanced": false,
          "description": "List of buyer IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Buyer Ids",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of buyer usernames",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete space buyers data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["buyer_ids", "usernames", "data", "includes", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves a list of users who purchased tickets to a Twitter Space.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b69731e6-a62f-11ef-b2d4-1bf14dd6aee4",
    "name": "TwitterGetSpaceTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "spaces.read",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "space_id": {
          "advanced": false,
          "description": "Space ID to lookup tweets for",
          "placeholder": "Enter Space ID",
          "secret": false,
          "title": "Space Id",
          "type": "string"
        }
      },
      "required": ["credentials", "space_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "tweet_ids": {
          "advanced": false,
          "description": "List of tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Tweet Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "List of tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete space tweets data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Response metadata",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["tweet_ids", "texts", "data", "includes", "meta", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves tweets shared in a Twitter Space.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "aaefdd48-a62f-11ef-a73c-3f44df63e276",
    "name": "TwitterSearchSpacesBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Invited_Users": {
                  "default": false,
                  "title": "Invited Users",
                  "type": "boolean"
                },
                "Speakers": {
                  "default": false,
                  "title": "Speakers",
                  "type": "boolean"
                },
                "Creator": {
                  "default": false,
                  "title": "Creator",
                  "type": "boolean"
                },
                "Hosts": {
                  "default": false,
                  "title": "Hosts",
                  "type": "boolean"
                },
                "Topics": {
                  "default": false,
                  "title": "Topics",
                  "type": "boolean"
                }
              },
              "title": "SpaceExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose additional information you want to get with your Twitter Spaces:\n- Select 'Invited_Users' to see who was invited\n- Select 'Speakers' to see who can speak\n- Select 'Creator' to get details about who made the Space\n- Select 'Hosts' to see who's hosting\n- Select 'Topics' to see Space topics",
          "placeholder": "Pick what extra information you want to see about the Space",
          "secret": false
        },
        "space_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Space_ID": {
                  "default": false,
                  "title": "Space Id",
                  "type": "boolean"
                },
                "Space_State": {
                  "default": false,
                  "title": "Space State",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "End_Time": {
                  "default": false,
                  "title": "End Time",
                  "type": "boolean"
                },
                "Host_User_IDs": {
                  "default": false,
                  "title": "Host User Ids",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Is_Ticketed": {
                  "default": false,
                  "title": "Is Ticketed",
                  "type": "boolean"
                },
                "Invited_User_IDs": {
                  "default": false,
                  "title": "Invited User Ids",
                  "type": "boolean"
                },
                "Participant_Count": {
                  "default": false,
                  "title": "Participant Count",
                  "type": "boolean"
                },
                "Subscriber_Count": {
                  "default": false,
                  "title": "Subscriber Count",
                  "type": "boolean"
                },
                "Scheduled_Start_Time": {
                  "default": false,
                  "title": "Scheduled Start Time",
                  "type": "boolean"
                },
                "Speaker_User_IDs": {
                  "default": false,
                  "title": "Speaker User Ids",
                  "type": "boolean"
                },
                "Start_Time": {
                  "default": false,
                  "title": "Start Time",
                  "type": "boolean"
                },
                "Space_Title": {
                  "default": false,
                  "title": "Space Title",
                  "type": "boolean"
                },
                "Topic_IDs": {
                  "default": false,
                  "title": "Topic Ids",
                  "type": "boolean"
                },
                "Last_Updated_Time": {
                  "default": false,
                  "title": "Last Updated Time",
                  "type": "boolean"
                }
              },
              "title": "SpaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": {
            "Space_ID": false,
            "Space_State": false,
            "Creation_Time": false,
            "End_Time": false,
            "Host_User_IDs": true,
            "Language": false,
            "Is_Ticketed": false,
            "Invited_User_IDs": false,
            "Participant_Count": false,
            "Subscriber_Count": false,
            "Scheduled_Start_Time": false,
            "Speaker_User_IDs": false,
            "Start_Time": false,
            "Space_Title": true,
            "Topic_IDs": false,
            "Last_Updated_Time": false
          },
          "description": "Choose what Space details you want to see, such as:\n- Title\n- Start/End times\n- Number of participants\n- Language\n- State (live/scheduled)\n- And more",
          "placeholder": "Choose what Space information you want to get",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what user information you want to see. This works when you select any of these in expansions above:\n- 'Creator' for Space creator details\n- 'Hosts' for host information\n- 'Speakers' for speaker details\n- 'Invited_Users' for invited user information",
          "placeholder": "Pick what details you want to see about the users",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.write",
            "users.read",
            "like.write",
            "spaces.read",
            "bookmark.write",
            "mute.write",
            "mute.read",
            "block.write",
            "follows.read",
            "tweet.write",
            "space.read",
            "block.read",
            "tweet.read",
            "list.write",
            "list.read",
            "offline.access",
            "tweet.moderate.write",
            "bookmark.read",
            "like.read"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "query": {
          "advanced": false,
          "description": "Search term to find in Space titles",
          "placeholder": "Enter search query",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "state": {
          "enum": ["live", "scheduled", "all"],
          "title": "SpaceStatesFilter",
          "type": "string",
          "advanced": true,
          "default": "all",
          "description": "Type of Spaces to return (live, scheduled, or all)",
          "placeholder": "Enter state filter",
          "secret": false
        }
      },
      "required": ["credentials", "query"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of space IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "titles": {
          "advanced": false,
          "description": "List of space titles",
          "items": { "type": "string" },
          "secret": false,
          "title": "Titles",
          "type": "array"
        },
        "host_ids": {
          "advanced": false,
          "description": "List of host IDs",
          "items": {},
          "secret": false,
          "title": "Host Ids",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete space data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "includes": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data requested via expansions",
          "secret": false,
          "title": "Includes",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata including pagination info",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "titles",
        "host_ids",
        "next_token",
        "data",
        "includes",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block searches for Twitter Spaces based on specified terms.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e01c890c-a630-11ef-9e20-37da24888bd0",
    "name": "TwitterGetUserMentionsBlock",
    "inputSchema": {
      "properties": {
        "start_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Start time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter start time",
          "secret": false,
          "title": "Start Time"
        },
        "end_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "End time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter end time",
          "secret": false,
          "title": "End Time"
        },
        "since_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID  greater than this (more recent than), we give priority to since_id over start_time",
          "placeholder": "Enter since ID",
          "secret": false,
          "title": "Since Id"
        },
        "until_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID less than this (that is, older than), and used with since_id",
          "placeholder": "Enter until ID",
          "secret": false,
          "title": "Until Id"
        },
        "sort_order": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Order of returned tweets (recency or relevancy)",
          "placeholder": "Enter sort order",
          "secret": false,
          "title": "Sort Order"
        },
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "user_id": {
          "advanced": false,
          "description": "Unique identifier of the user for whom to return Tweets mentioning the user",
          "placeholder": "Enter user ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Number of tweets to retrieve (5-100)",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "userIds": {
          "advanced": false,
          "description": "List of user ids that mentioned the user",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userids",
          "type": "array"
        },
        "userNames": {
          "advanced": false,
          "description": "List of user names that mentioned the user",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "userIds",
        "userNames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves Tweets mentioning a specific user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "d222a070-a630-11ef-a18a-3f52f76c6962",
    "name": "TwitterGetHomeTimelineBlock",
    "inputSchema": {
      "properties": {
        "start_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Start time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter start time",
          "secret": false,
          "title": "Start Time"
        },
        "end_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "End time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter end time",
          "secret": false,
          "title": "End Time"
        },
        "since_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID  greater than this (more recent than), we give priority to since_id over start_time",
          "placeholder": "Enter since ID",
          "secret": false,
          "title": "Since Id"
        },
        "until_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID less than this (that is, older than), and used with since_id",
          "placeholder": "Enter until ID",
          "secret": false,
          "title": "Until Id"
        },
        "sort_order": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Order of returned tweets (recency or relevancy)",
          "placeholder": "Enter sort order",
          "secret": false,
          "title": "Sort Order"
        },
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Number of tweets to retrieve (5-100)",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "userIds": {
          "advanced": false,
          "description": "List of user ids that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userids",
          "type": "array"
        },
        "userNames": {
          "advanced": false,
          "description": "List of user names that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "userIds",
        "userNames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves the authenticated user's home timeline.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "c44c3ef2-a630-11ef-9ff7-eb7b5ea3a5cb",
    "name": "TwitterGetUserTweetsBlock",
    "inputSchema": {
      "properties": {
        "start_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Start time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter start time",
          "secret": false,
          "title": "Start Time"
        },
        "end_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "End time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter end time",
          "secret": false,
          "title": "End Time"
        },
        "since_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID  greater than this (more recent than), we give priority to since_id over start_time",
          "placeholder": "Enter since ID",
          "secret": false,
          "title": "Since Id"
        },
        "until_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID less than this (that is, older than), and used with since_id",
          "placeholder": "Enter until ID",
          "secret": false,
          "title": "Until Id"
        },
        "sort_order": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Order of returned tweets (recency or relevancy)",
          "placeholder": "Enter sort order",
          "secret": false,
          "title": "Sort Order"
        },
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "user_id": {
          "advanced": false,
          "description": "Unique identifier of the Twitter account (user ID) for whom to return results",
          "placeholder": "Enter user ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Number of tweets to retrieve (5-100)",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "userIds": {
          "advanced": false,
          "description": "List of user ids that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userids",
          "type": "array"
        },
        "userNames": {
          "advanced": false,
          "description": "List of user names that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "userIds",
        "userNames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves Tweets composed by a single user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "4d0b4c5c-a630-11ef-8e08-1b14c507b347",
    "name": "TwitterLikeTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to like",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the operation was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block likes a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "34275000-a630-11ef-b01e-5f00d9077c08",
    "name": "TwitterGetLikingUsersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to get liking users for",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for getting next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "All User IDs who liked the tweet",
          "items": { "type": "string" },
          "secret": false,
          "title": "Id",
          "type": "array"
        },
        "username": {
          "advanced": false,
          "description": "All User usernames who liked the tweet",
          "items": { "type": "string" },
          "secret": false,
          "title": "Username",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block gets information about users who liked a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "292e7c78-a630-11ef-9f40-df5dffaca106",
    "name": "TwitterGetLikedTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "user_id": {
          "advanced": false,
          "description": "ID of the user to get liked tweets for",
          "placeholder": "Enter user ID",
          "secret": false,
          "title": "User Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (5-100)",
          "placeholder": "100",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for getting next/previous page of results",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "user_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "All Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "userIds": {
          "advanced": false,
          "description": "List of user ids that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userids",
          "type": "array"
        },
        "userNames": {
          "advanced": false,
          "description": "List of user names that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "userIds",
        "userNames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block gets information about tweets liked by a user.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1ed5eab8-a630-11ef-8e21-cbbbc80cbb85",
    "name": "TwitterUnlikeTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to unlike",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the operation was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unlikes a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7bb0048a-a630-11ef-aeb8-abc0dadb9b12",
    "name": "TwitterPostTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_text": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Text of the tweet to post",
          "placeholder": "Enter your tweet",
          "secret": false,
          "title": "Tweet Text"
        },
        "for_super_followers_only": {
          "advanced": true,
          "default": false,
          "description": "Tweet exclusively for Super Followers",
          "placeholder": "Enter for super followers only",
          "secret": false,
          "title": "For Super Followers Only",
          "type": "boolean"
        },
        "attachment": {
          "advanced": false,
          "anyOf": [
            {
              "discriminator": {
                "mapping": {
                  "deep_link": "#/$defs/DeepLink",
                  "media": "#/$defs/Media",
                  "place": "#/$defs/Place",
                  "poll": "#/$defs/Poll",
                  "quote": "#/$defs/Quote"
                },
                "propertyName": "discriminator"
              },
              "oneOf": [
                {
                  "properties": {
                    "discriminator": {
                      "const": "media",
                      "title": "Discriminator",
                      "type": "string"
                    },
                    "media_ids": {
                      "anyOf": [
                        { "items": { "type": "string" }, "type": "array" },
                        { "type": "null" }
                      ],
                      "default": null,
                      "title": "Media Ids"
                    },
                    "media_tagged_user_ids": {
                      "anyOf": [
                        { "items": { "type": "string" }, "type": "array" },
                        { "type": "null" }
                      ],
                      "default": null,
                      "title": "Media Tagged User Ids"
                    }
                  },
                  "required": ["discriminator"],
                  "title": "Media",
                  "type": "object"
                },
                {
                  "properties": {
                    "discriminator": {
                      "const": "deep_link",
                      "title": "Discriminator",
                      "type": "string"
                    },
                    "direct_message_deep_link": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Direct Message Deep Link"
                    }
                  },
                  "required": ["discriminator"],
                  "title": "DeepLink",
                  "type": "object"
                },
                {
                  "properties": {
                    "discriminator": {
                      "const": "poll",
                      "title": "Discriminator",
                      "type": "string"
                    },
                    "poll_options": {
                      "anyOf": [
                        { "items": { "type": "string" }, "type": "array" },
                        { "type": "null" }
                      ],
                      "default": null,
                      "title": "Poll Options"
                    },
                    "poll_duration_minutes": {
                      "anyOf": [{ "type": "integer" }, { "type": "null" }],
                      "default": null,
                      "title": "Poll Duration Minutes"
                    }
                  },
                  "required": ["discriminator"],
                  "title": "Poll",
                  "type": "object"
                },
                {
                  "properties": {
                    "discriminator": {
                      "const": "place",
                      "title": "Discriminator",
                      "type": "string"
                    },
                    "place_id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Place Id"
                    }
                  },
                  "required": ["discriminator"],
                  "title": "Place",
                  "type": "object"
                },
                {
                  "properties": {
                    "discriminator": {
                      "const": "quote",
                      "title": "Discriminator",
                      "type": "string"
                    },
                    "quote_tweet_id": {
                      "anyOf": [{ "type": "string" }, { "type": "null" }],
                      "default": null,
                      "title": "Quote Tweet Id"
                    }
                  },
                  "required": ["discriminator"],
                  "title": "Quote",
                  "type": "object"
                }
              ]
            },
            { "type": "null" }
          ],
          "default": {
            "discriminator": "media",
            "media_ids": null,
            "media_tagged_user_ids": null
          },
          "description": "Additional tweet data (media, deep link, poll, place or quote)",
          "secret": false,
          "title": "Attachment"
        },
        "exclude_reply_user_ids": {
          "advanced": true,
          "anyOf": [
            { "items": { "type": "string" }, "type": "array" },
            { "type": "null" }
          ],
          "default": null,
          "description": "User IDs to exclude from reply Tweet thread. [ex - 6253282]",
          "placeholder": "Enter user IDs to exclude",
          "secret": false,
          "title": "Exclude Reply User Ids"
        },
        "in_reply_to_tweet_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Tweet ID being replied to. Please note that in_reply_to_tweet_id needs to be in the request if exclude_reply_user_ids is present",
          "placeholder": "Enter in reply to tweet ID",
          "secret": false,
          "title": "In Reply To Tweet Id"
        },
        "reply_settings": {
          "properties": {
            "Mentioned_Users_Only": {
              "default": false,
              "title": "Mentioned Users Only",
              "type": "boolean"
            },
            "Following_Users_Only": {
              "default": false,
              "title": "Following Users Only",
              "type": "boolean"
            },
            "All_Users": {
              "default": false,
              "title": "All Users",
              "type": "boolean"
            }
          },
          "title": "TweetReplySettingsFilter",
          "type": "object",
          "advanced": true,
          "default": {
            "Mentioned_Users_Only": false,
            "Following_Users_Only": false,
            "All_Users": true
          },
          "description": "Who can reply to the Tweet (mentionedUsers or following)",
          "placeholder": "Enter reply settings",
          "secret": false
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "tweet_id": {
          "advanced": false,
          "description": "ID of the created tweet",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        },
        "tweet_url": {
          "advanced": false,
          "description": "URL to the tweet",
          "secret": false,
          "title": "Tweet Url",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the tweet posting failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["tweet_id", "tweet_url", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block posts a tweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "761babf0-a630-11ef-a03d-abceb082f58f",
    "name": "TwitterDeleteTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to delete",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the tweet was successfully deleted",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the tweet deletion failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block deletes a tweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "53e5cf8e-a630-11ef-ba85-df6d666fa5d5",
    "name": "TwitterSearchRecentTweetsBlock",
    "inputSchema": {
      "properties": {
        "start_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Start time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter start time",
          "secret": false,
          "title": "Start Time"
        },
        "end_time": {
          "advanced": false,
          "anyOf": [
            { "format": "date-time", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "End time in YYYY-MM-DDTHH:mm:ssZ format",
          "placeholder": "Enter end time",
          "secret": false,
          "title": "End Time"
        },
        "since_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID  greater than this (more recent than), we give priority to since_id over start_time",
          "placeholder": "Enter since ID",
          "secret": false,
          "title": "Since Id"
        },
        "until_id": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Returns results with Tweet ID less than this (that is, older than), and used with since_id",
          "placeholder": "Enter until ID",
          "secret": false,
          "title": "Until Id"
        },
        "sort_order": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Order of returned tweets (recency or relevancy)",
          "placeholder": "Enter sort order",
          "secret": false,
          "title": "Sort Order"
        },
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "query": {
          "advanced": false,
          "description": "Search query (up to 1024 characters)",
          "placeholder": "Enter search query",
          "secret": false,
          "title": "Query",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "default": 10,
          "description": "Maximum number of results per page (10-500)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results",
          "type": "integer"
        },
        "pagination": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination"
        }
      },
      "required": ["credentials", "query"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "tweet_ids": {
          "advanced": false,
          "description": "All Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Tweet Ids",
          "type": "array"
        },
        "tweet_texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Tweet Texts",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "tweet_ids",
        "tweet_texts",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block searches all public Tweets in Twitter history.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "bd7b8d3a-a630-11ef-be96-6f4aa4c3c4f4",
    "name": "TwitterRetweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to retweet",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the retweet was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the retweet failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retweets a tweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "b6e663f0-a630-11ef-a7f0-8b9b0c542ff8",
    "name": "TwitterRemoveRetweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to remove retweet",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the retweet was successfully removed",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the removal failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block removes a retweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ad7aa6fa-a630-11ef-a6b0-e7ca640aa030",
    "name": "TwitterGetRetweetersBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "pinned_tweet_id": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                }
              },
              "title": "UserExpansionsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with user data. Currently only 'pinned_tweet_id' is available to see a user's pinned tweet.",
          "placeholder": "Select extra user information to include",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see in pinned tweets. This only works if you select 'pinned_tweet_id' in expansions above.",
          "placeholder": "Choose what details to see in pinned tweets",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see, like username, bio, profile picture, etc.",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to get retweeters for",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results per page (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "List of user ids who retweeted",
          "items": {},
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "names": {
          "advanced": false,
          "description": "List of user names who retweeted",
          "items": {},
          "secret": false,
          "title": "Names",
          "type": "array"
        },
        "usernames": {
          "advanced": false,
          "description": "List of user usernames who retweeted",
          "items": {},
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Token for next page of results",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "names",
        "usernames",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block gets information about who has retweeted a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9fbdd208-a630-11ef-9b97-ab7a3a695ca3",
    "name": "TwitterGetQuoteTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to get quotes for",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Number of results to return (max 100)",
          "secret": false,
          "title": "Max Results"
        },
        "exclude": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "retweets": {
                  "default": false,
                  "title": "Retweets",
                  "type": "boolean"
                },
                "replies": {
                  "default": false,
                  "title": "Replies",
                  "type": "boolean"
                }
              },
              "title": "TweetExcludesFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Types of tweets to exclude",
          "secret": false
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "All Tweet IDs ",
          "items": {},
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": {},
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "next_token",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block gets quote tweets for a specific tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f5155c3a-a630-11ef-9cc1-a309988b4d92",
    "name": "TwitterGetTweetBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "Unique identifier of the Tweet to request (ex: 1460323737035677698)",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "Tweet ID",
          "secret": false,
          "title": "Id",
          "type": "string"
        },
        "text": {
          "advanced": false,
          "description": "Tweet text",
          "secret": false,
          "title": "Text",
          "type": "string"
        },
        "userId": {
          "advanced": false,
          "description": "ID of the tweet author",
          "secret": false,
          "title": "Userid",
          "type": "string"
        },
        "userName": {
          "advanced": false,
          "description": "Username of the tweet author",
          "secret": false,
          "title": "Username",
          "type": "string"
        },
        "data": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Tweet data",
          "secret": false,
          "title": "Data",
          "type": "object"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about the tweet",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "id",
        "text",
        "userId",
        "userName",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about a specific Tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e7cc5420-a630-11ef-bfaf-13bdd8096a51",
    "name": "TwitterGetTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_ids": {
          "advanced": false,
          "description": "List of Tweet IDs to request (up to 100)",
          "items": { "type": "string" },
          "placeholder": "Enter tweet IDs",
          "secret": false,
          "title": "Tweet Ids",
          "type": "array"
        }
      },
      "required": ["credentials", "tweet_ids"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "ids": {
          "advanced": false,
          "description": "All Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Ids",
          "type": "array"
        },
        "texts": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Texts",
          "type": "array"
        },
        "userIds": {
          "advanced": false,
          "description": "List of user ids that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userids",
          "type": "array"
        },
        "userNames": {
          "advanced": false,
          "description": "List of user names that authored the tweets",
          "items": { "type": "string" },
          "secret": false,
          "title": "Usernames",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Metadata about the tweets",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "texts",
        "userIds",
        "userNames",
        "data",
        "included",
        "meta",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves information about multiple Tweets.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f33d67be-a62f-11ef-a797-ff83ec29ee8e",
    "name": "TwitterBookmarkTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to bookmark",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the bookmark was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the bookmark failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block bookmarks a tweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ed26783e-a62f-11ef-9a21-c77c57dd8a1f",
    "name": "TwitterGetBookmarkedTweetsBlock",
    "inputSchema": {
      "properties": {
        "expansions": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Poll_IDs": {
                  "default": false,
                  "title": "Poll Ids",
                  "type": "boolean"
                },
                "Media_Keys": {
                  "default": false,
                  "title": "Media Keys",
                  "type": "boolean"
                },
                "Author_User_ID": {
                  "default": false,
                  "title": "Author User Id",
                  "type": "boolean"
                },
                "Edit_History_Tweet_IDs": {
                  "default": false,
                  "title": "Edit History Tweet Ids",
                  "type": "boolean"
                },
                "Mentioned_Usernames": {
                  "default": false,
                  "title": "Mentioned Usernames",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_ID": {
                  "default": false,
                  "title": "Referenced Tweet Id",
                  "type": "boolean"
                },
                "Referenced_Tweet_Author_ID": {
                  "default": false,
                  "title": "Referenced Tweet Author Id",
                  "type": "boolean"
                }
              },
              "title": "ExpansionFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Choose what extra information you want to get with your tweets. For example:\n- Select 'Media_Keys' to get media details\n- Select 'Author_User_ID' to get user information\n- Select 'Place_ID' to get location details",
          "placeholder": "Pick the extra information you want to see",
          "secret": false
        },
        "media_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_in_Milliseconds": {
                  "default": false,
                  "title": "Duration In Milliseconds",
                  "type": "boolean"
                },
                "Height": {
                  "default": false,
                  "title": "Height",
                  "type": "boolean"
                },
                "Media_Key": {
                  "default": false,
                  "title": "Media Key",
                  "type": "boolean"
                },
                "Preview_Image_URL": {
                  "default": false,
                  "title": "Preview Image Url",
                  "type": "boolean"
                },
                "Media_Type": {
                  "default": false,
                  "title": "Media Type",
                  "type": "boolean"
                },
                "Media_URL": {
                  "default": false,
                  "title": "Media Url",
                  "type": "boolean"
                },
                "Width": {
                  "default": false,
                  "title": "Width",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Non_Public_Metrics": {
                  "default": false,
                  "title": "Non Public Metrics",
                  "type": "boolean"
                },
                "Organic_Metrics": {
                  "default": false,
                  "title": "Organic Metrics",
                  "type": "boolean"
                },
                "Promoted_Metrics": {
                  "default": false,
                  "title": "Promoted Metrics",
                  "type": "boolean"
                },
                "Alternative_Text": {
                  "default": false,
                  "title": "Alternative Text",
                  "type": "boolean"
                },
                "Media_Variants": {
                  "default": false,
                  "title": "Media Variants",
                  "type": "boolean"
                }
              },
              "title": "TweetMediaFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what media information you want to see (images, videos, etc). To use this, you must first select 'Media_Keys' in the expansions above.",
          "placeholder": "Choose what media details you want to see",
          "secret": false
        },
        "place_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Contained_Within_Places": {
                  "default": false,
                  "title": "Contained Within Places",
                  "type": "boolean"
                },
                "Country": {
                  "default": false,
                  "title": "Country",
                  "type": "boolean"
                },
                "Country_Code": {
                  "default": false,
                  "title": "Country Code",
                  "type": "boolean"
                },
                "Full_Location_Name": {
                  "default": false,
                  "title": "Full Location Name",
                  "type": "boolean"
                },
                "Geographic_Coordinates": {
                  "default": false,
                  "title": "Geographic Coordinates",
                  "type": "boolean"
                },
                "Place_ID": {
                  "default": false,
                  "title": "Place Id",
                  "type": "boolean"
                },
                "Place_Name": {
                  "default": false,
                  "title": "Place Name",
                  "type": "boolean"
                },
                "Place_Type": {
                  "default": false,
                  "title": "Place Type",
                  "type": "boolean"
                }
              },
              "title": "TweetPlaceFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what location information you want to see (country, coordinates, etc). To use this, you must first select 'Place_ID' in the expansions above.",
          "placeholder": "Choose what location details you want to see",
          "secret": false
        },
        "poll_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Duration_Minutes": {
                  "default": false,
                  "title": "Duration Minutes",
                  "type": "boolean"
                },
                "End_DateTime": {
                  "default": false,
                  "title": "End Datetime",
                  "type": "boolean"
                },
                "Poll_ID": {
                  "default": false,
                  "title": "Poll Id",
                  "type": "boolean"
                },
                "Poll_Options": {
                  "default": false,
                  "title": "Poll Options",
                  "type": "boolean"
                },
                "Voting_Status": {
                  "default": false,
                  "title": "Voting Status",
                  "type": "boolean"
                }
              },
              "title": "TweetPollFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what poll information you want to see (options, voting status, etc). To use this, you must first select 'Poll_IDs' in the expansions above.",
          "placeholder": "Choose what poll details you want to see",
          "secret": false
        },
        "tweet_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Tweet_Attachments": {
                  "default": false,
                  "title": "Tweet Attachments",
                  "type": "boolean"
                },
                "Author_ID": {
                  "default": false,
                  "title": "Author Id",
                  "type": "boolean"
                },
                "Context_Annotations": {
                  "default": false,
                  "title": "Context Annotations",
                  "type": "boolean"
                },
                "Conversation_ID": {
                  "default": false,
                  "title": "Conversation Id",
                  "type": "boolean"
                },
                "Creation_Time": {
                  "default": false,
                  "title": "Creation Time",
                  "type": "boolean"
                },
                "Edit_Controls": {
                  "default": false,
                  "title": "Edit Controls",
                  "type": "boolean"
                },
                "Tweet_Entities": {
                  "default": false,
                  "title": "Tweet Entities",
                  "type": "boolean"
                },
                "Geographic_Location": {
                  "default": false,
                  "title": "Geographic Location",
                  "type": "boolean"
                },
                "Tweet_ID": {
                  "default": false,
                  "title": "Tweet Id",
                  "type": "boolean"
                },
                "Reply_To_User_ID": {
                  "default": false,
                  "title": "Reply To User Id",
                  "type": "boolean"
                },
                "Language": {
                  "default": false,
                  "title": "Language",
                  "type": "boolean"
                },
                "Public_Metrics": {
                  "default": false,
                  "title": "Public Metrics",
                  "type": "boolean"
                },
                "Sensitive_Content_Flag": {
                  "default": false,
                  "title": "Sensitive Content Flag",
                  "type": "boolean"
                },
                "Referenced_Tweets": {
                  "default": false,
                  "title": "Referenced Tweets",
                  "type": "boolean"
                },
                "Reply_Settings": {
                  "default": false,
                  "title": "Reply Settings",
                  "type": "boolean"
                },
                "Tweet_Source": {
                  "default": false,
                  "title": "Tweet Source",
                  "type": "boolean"
                },
                "Tweet_Text": {
                  "default": false,
                  "title": "Tweet Text",
                  "type": "boolean"
                },
                "Withheld_Content": {
                  "default": false,
                  "title": "Withheld Content",
                  "type": "boolean"
                }
              },
              "title": "TweetFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what tweet information you want to see. For referenced tweets (like retweets), select 'Referenced_Tweet_ID' in the expansions above.",
          "placeholder": "Choose what tweet details you want to see",
          "secret": false
        },
        "user_fields": {
          "advanced": true,
          "anyOf": [
            {
              "properties": {
                "Account_Creation_Date": {
                  "default": false,
                  "title": "Account Creation Date",
                  "type": "boolean"
                },
                "User_Bio": {
                  "default": false,
                  "title": "User Bio",
                  "type": "boolean"
                },
                "User_Entities": {
                  "default": false,
                  "title": "User Entities",
                  "type": "boolean"
                },
                "User_ID": {
                  "default": false,
                  "title": "User Id",
                  "type": "boolean"
                },
                "User_Location": {
                  "default": false,
                  "title": "User Location",
                  "type": "boolean"
                },
                "Latest_Tweet_ID": {
                  "default": false,
                  "title": "Latest Tweet Id",
                  "type": "boolean"
                },
                "Display_Name": {
                  "default": false,
                  "title": "Display Name",
                  "type": "boolean"
                },
                "Pinned_Tweet_ID": {
                  "default": false,
                  "title": "Pinned Tweet Id",
                  "type": "boolean"
                },
                "Profile_Picture_URL": {
                  "default": false,
                  "title": "Profile Picture Url",
                  "type": "boolean"
                },
                "Is_Protected_Account": {
                  "default": false,
                  "title": "Is Protected Account",
                  "type": "boolean"
                },
                "Account_Statistics": {
                  "default": false,
                  "title": "Account Statistics",
                  "type": "boolean"
                },
                "Profile_URL": {
                  "default": false,
                  "title": "Profile Url",
                  "type": "boolean"
                },
                "Username": {
                  "default": false,
                  "title": "Username",
                  "type": "boolean"
                },
                "Is_Verified": {
                  "default": false,
                  "title": "Is Verified",
                  "type": "boolean"
                },
                "Verification_Type": {
                  "default": false,
                  "title": "Verification Type",
                  "type": "boolean"
                },
                "Content_Withholding_Info": {
                  "default": false,
                  "title": "Content Withholding Info",
                  "type": "boolean"
                }
              },
              "title": "TweetUserFieldsFilter",
              "type": "object"
            },
            { "type": "null" }
          ],
          "default": null,
          "description": "Select what user information you want to see. To use this, you must first select one of these in expansions above:\n- 'Author_User_ID' for tweet authors\n- 'Mentioned_Usernames' for mentioned users\n- 'Reply_To_User_ID' for users being replied to\n- 'Referenced_Tweet_Author_ID' for authors of referenced tweets",
          "placeholder": "Choose what user details you want to see",
          "secret": false
        },
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "max_results": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": 10,
          "description": "Maximum number of results to return (1-100)",
          "placeholder": "Enter max results",
          "secret": false,
          "title": "Max Results"
        },
        "pagination_token": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": "",
          "description": "Token for pagination",
          "placeholder": "Enter pagination token",
          "secret": false,
          "title": "Pagination Token"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "id": {
          "advanced": false,
          "description": "All Tweet IDs",
          "items": { "type": "string" },
          "secret": false,
          "title": "Id",
          "type": "array"
        },
        "text": {
          "advanced": false,
          "description": "All Tweet texts",
          "items": { "type": "string" },
          "secret": false,
          "title": "Text",
          "type": "array"
        },
        "userId": {
          "advanced": false,
          "description": "IDs of the tweet authors",
          "items": { "type": "string" },
          "secret": false,
          "title": "Userid",
          "type": "array"
        },
        "userName": {
          "advanced": false,
          "description": "Usernames of the tweet authors",
          "items": { "type": "string" },
          "secret": false,
          "title": "Username",
          "type": "array"
        },
        "data": {
          "advanced": false,
          "description": "Complete Tweet data",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Data",
          "type": "array"
        },
        "included": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Additional data that you have requested (Optional) via Expansions field",
          "secret": false,
          "title": "Included",
          "type": "object"
        },
        "meta": {
          "additionalProperties": true,
          "advanced": false,
          "description": "Provides metadata such as pagination info (next_token) or result counts",
          "secret": false,
          "title": "Meta",
          "type": "object"
        },
        "next_token": {
          "advanced": false,
          "description": "Next token for pagination",
          "secret": false,
          "title": "Next Token",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": [
        "id",
        "text",
        "userId",
        "userName",
        "data",
        "included",
        "meta",
        "next_token",
        "error"
      ],
      "title": "Output",
      "type": "object"
    },
    "description": "This block retrieves bookmarked tweets from Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e4100684-a62f-11ef-9be9-770cb41a2616",
    "name": "TwitterRemoveBookmarkTweetBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet to remove bookmark from",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the bookmark was successfully removed",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the bookmark removal failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block removes a bookmark from a tweet on Twitter.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "07d58b3e-a630-11ef-a030-93701d1a465e",
    "name": "TwitterHideReplyBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet reply to hide",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the operation was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block hides a reply to a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "fcf9e4e4-a62f-11ef-9d85-57d3d06b616a",
    "name": "TwitterUnhideReplyBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["twitter"],
          "credentials_types": ["oauth2"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "twitter",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "oauth2", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.TWITTER: 'twitter'>], Literal['oauth2']]",
          "type": "object",
          "credentials_scopes": [
            "follows.read",
            "like.write",
            "tweet.write",
            "space.read",
            "list.read",
            "offline.access",
            "block.read",
            "bookmark.write",
            "tweet.read",
            "like.read",
            "block.write",
            "tweet.moderate.write",
            "follows.write",
            "mute.write",
            "bookmark.read",
            "mute.read",
            "users.read",
            "list.write"
          ],
          "description": "The Twitter integration requires OAuth2 authentication."
        },
        "tweet_id": {
          "advanced": false,
          "description": "ID of the tweet reply to unhide",
          "placeholder": "Enter tweet ID",
          "secret": false,
          "title": "Tweet Id",
          "type": "string"
        }
      },
      "required": ["credentials", "tweet_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "success": {
          "advanced": false,
          "description": "Whether the operation was successful",
          "secret": false,
          "title": "Success",
          "type": "boolean"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["success", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "This block unhides a reply to a tweet.",
    "categories": [
      {
        "category": "SOCIAL",
        "description": "Block that interacts with social media platforms."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "e3950439-fa0b-40e8-b19f-e0dca0bf5853",
    "name": "ValidateEmailsBlock",
    "inputSchema": {
      "properties": {
        "email": {
          "advanced": false,
          "description": "Email to validate",
          "secret": false,
          "title": "Email",
          "type": "string"
        },
        "ip_address": {
          "advanced": true,
          "default": "",
          "description": "IP address to validate",
          "secret": false,
          "title": "Ip Address",
          "type": "string"
        },
        "credentials": {
          "credentials_provider": ["zerobounce"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "zerobounce",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ZEROBOUNCE: 'zerobounce'>], Literal['api_key']]",
          "type": "object",
          "advanced": false,
          "description": "ZeroBounce credentials",
          "secret": false
        }
      },
      "required": ["email", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "properties": {
            "address": {
              "advanced": true,
              "default": "N/A",
              "description": "The email address you are validating.",
              "secret": false,
              "title": "Address",
              "type": "string"
            },
            "status": {
              "description": "The status of the email address.",
              "enum": [
                "",
                "valid",
                "invalid",
                "catch-all",
                "unknown",
                "spamtrap",
                "abuse",
                "do_not_mail"
              ],
              "title": "ZBValidateStatus",
              "type": "string",
              "advanced": true,
              "default": "unknown",
              "secret": false
            },
            "sub_status": {
              "description": "The sub-status of the email address.",
              "enum": [
                "",
                "antispam_system",
                "greylisted",
                "mail_server_temporary_error",
                "forcible_disconnect",
                "mail_server_did_not_respond",
                "timeout_exceeded",
                "failed_smtp_connection",
                "mailbox_quota_exceeded",
                "exception_occurred",
                "possible_trap",
                "role_based",
                "global_suppression",
                "mailbox_not_found",
                "no_dns_entries",
                "failed_syntax_check",
                "possible_typo",
                "unroutable_ip_address",
                "leading_period_removed",
                "does_not_accept_mail",
                "alias_address",
                "role_based_catch_all",
                "disposable",
                "toxic",
                "alternate",
                "mx_forward",
                "blocked",
                "allowed"
              ],
              "title": "ZBValidateSubStatus",
              "type": "string",
              "advanced": true,
              "default": "",
              "secret": false
            },
            "account": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "N/A",
              "description": "The portion of the email address before the '@' symbol.",
              "secret": false,
              "title": "Account"
            },
            "domain": {
              "advanced": false,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "The portion of the email address after the '@' symbol.",
              "secret": false,
              "title": "Domain"
            },
            "did_you_mean": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "Suggestive Fix for an email typo",
              "secret": false,
              "title": "Did You Mean"
            },
            "domain_age_days": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "Age of the email domain in days or [null].",
              "secret": false,
              "title": "Domain Age Days"
            },
            "free_email": {
              "advanced": true,
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Whether the email address is a free email provider.",
              "secret": false,
              "title": "Free Email"
            },
            "mx_found": {
              "advanced": true,
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Whether the MX record was found.",
              "secret": false,
              "title": "Mx Found"
            },
            "mx_record": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The MX record of the email address.",
              "secret": false,
              "title": "Mx Record"
            },
            "smtp_provider": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The SMTP provider of the email address.",
              "secret": false,
              "title": "Smtp Provider"
            },
            "firstname": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The first name of the email address.",
              "secret": false,
              "title": "Firstname"
            },
            "lastname": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The last name of the email address.",
              "secret": false,
              "title": "Lastname"
            },
            "gender": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The gender of the email address.",
              "secret": false,
              "title": "Gender"
            },
            "city": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The city of the email address.",
              "secret": false,
              "title": "City"
            },
            "region": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The region of the email address.",
              "secret": false,
              "title": "Region"
            },
            "zipcode": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The zipcode of the email address.",
              "secret": false,
              "title": "Zipcode"
            },
            "country": {
              "advanced": true,
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "description": "The country of the email address.",
              "secret": false,
              "title": "Country"
            }
          },
          "required": ["domain"],
          "title": "Response",
          "type": "object",
          "advanced": false,
          "description": "Response from ZeroBounce",
          "secret": false
        },
        "error": {
          "advanced": true,
          "default": "",
          "description": "Error message if the search failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response"],
      "title": "Output",
      "type": "object"
    },
    "description": "Validate emails",
    "categories": [
      {
        "category": "SEARCH",
        "description": "Block that searches or extracts information from the internet."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "ed55ac19-356e-4243-a6cb-bc599e9b716f",
    "name": "AIStructuredResponseGeneratorBlock",
    "inputSchema": {
      "properties": {
        "prompt": {
          "advanced": false,
          "description": "The prompt to send to the language model.",
          "placeholder": "Enter your prompt here...",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "expected_format": {
          "additionalProperties": { "type": "string" },
          "advanced": false,
          "description": "Expected format of the response. If provided, the response will be validated against this format. The keys should be the expected fields in the response, and the values should be the description of the field.",
          "secret": false,
          "title": "Expected Format",
          "type": "object"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": false,
          "default": "gpt-4o",
          "description": "The language model to use for answering the prompt.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "sys_prompt": {
          "advanced": true,
          "default": "",
          "description": "The system prompt to provide additional context to the model.",
          "secret": false,
          "title": "System Prompt",
          "type": "string"
        },
        "conversation_history": {
          "advanced": true,
          "description": "The conversation history to provide context for the prompt.",
          "items": { "additionalProperties": true, "type": "object" },
          "secret": false,
          "title": "Conversation History",
          "type": "array"
        },
        "retry": {
          "advanced": true,
          "default": 3,
          "description": "Number of times to retry the LLM call if the response does not match the expected format.",
          "secret": false,
          "title": "Retry Count",
          "type": "integer"
        },
        "prompt_values": {
          "additionalProperties": { "type": "string" },
          "advanced": false,
          "description": "Values used to fill in the prompt. The values can be used in the prompt by putting them in a double curly braces, e.g. {{variable_name}}.",
          "secret": false,
          "title": "Prompt Values",
          "type": "object"
        },
        "max_tokens": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "secret": false,
          "title": "Max Tokens"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        }
      },
      "required": ["prompt", "expected_format", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "additionalProperties": true,
          "advanced": false,
          "description": "The response object generated by the language model.",
          "secret": false,
          "title": "Response",
          "type": "object"
        },
        "prompt": {
          "advanced": false,
          "description": "The prompt sent to the language model.",
          "items": {},
          "secret": false,
          "title": "Prompt",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "prompt", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Call a Large Language Model (LLM) to generate formatted object based on the given prompt.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "1f292d4a-41a4-4977-9684-7c8d560b9f91",
    "name": "AITextGeneratorBlock",
    "inputSchema": {
      "properties": {
        "prompt": {
          "advanced": false,
          "description": "The prompt to send to the language model. You can use any of the {keys} from Prompt Values to fill in the prompt with values from the prompt values dictionary by putting them in curly braces.",
          "placeholder": "Enter your prompt here...",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": false,
          "default": "gpt-4o",
          "description": "The language model to use for answering the prompt.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "sys_prompt": {
          "advanced": true,
          "default": "",
          "description": "The system prompt to provide additional context to the model.",
          "secret": false,
          "title": "System Prompt",
          "type": "string"
        },
        "retry": {
          "advanced": true,
          "default": 3,
          "description": "Number of times to retry the LLM call if the response does not match the expected format.",
          "secret": false,
          "title": "Retry Count",
          "type": "integer"
        },
        "prompt_values": {
          "additionalProperties": { "type": "string" },
          "advanced": false,
          "description": "Values used to fill in the prompt. The values can be used in the prompt by putting them in a double curly braces, e.g. {{variable_name}}.",
          "secret": false,
          "title": "Prompt Values",
          "type": "object"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        },
        "max_tokens": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "secret": false,
          "title": "Max Tokens"
        }
      },
      "required": ["prompt", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "advanced": false,
          "description": "The response generated by the language model.",
          "secret": false,
          "title": "Response",
          "type": "string"
        },
        "prompt": {
          "advanced": false,
          "description": "The prompt sent to the language model.",
          "items": {},
          "secret": false,
          "title": "Prompt",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "prompt", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Call a Large Language Model (LLM) to generate a string based on the given prompt.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "a0a69be1-4528-491c-a85a-a4ab6873e3f0",
    "name": "AITextSummarizerBlock",
    "inputSchema": {
      "properties": {
        "text": {
          "advanced": false,
          "description": "The text to summarize.",
          "placeholder": "Enter the text to summarize here...",
          "secret": false,
          "title": "Text",
          "type": "string"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": true,
          "default": "gpt-4o",
          "description": "The language model to use for summarizing the text.",
          "secret": false
        },
        "focus": {
          "advanced": true,
          "default": "general information",
          "description": "The topic to focus on in the summary",
          "secret": false,
          "title": "Focus",
          "type": "string"
        },
        "style": {
          "enum": ["concise", "detailed", "bullet points", "numbered list"],
          "title": "Summary Style",
          "type": "string",
          "advanced": true,
          "default": "concise",
          "description": "The style of the summary to generate.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "max_tokens": {
          "advanced": true,
          "default": 4096,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "minimum": 1,
          "secret": false,
          "title": "Max Tokens",
          "type": "integer"
        },
        "chunk_overlap": {
          "advanced": true,
          "default": 100,
          "description": "The number of overlapping tokens between chunks to maintain context.",
          "minimum": 0,
          "secret": false,
          "title": "Chunk Overlap",
          "type": "integer"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        }
      },
      "required": ["text", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "summary": {
          "advanced": false,
          "description": "The final summary of the text.",
          "secret": false,
          "title": "Summary",
          "type": "string"
        },
        "prompt": {
          "advanced": false,
          "description": "The prompt sent to the language model.",
          "items": {},
          "secret": false,
          "title": "Prompt",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["summary", "prompt", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Utilize a Large Language Model (LLM) to summarize a long text.",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." },
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "32a87eab-381e-4dd4-bdb8-4c47151be35a",
    "name": "AIConversationBlock",
    "inputSchema": {
      "properties": {
        "prompt": {
          "advanced": false,
          "default": "",
          "description": "The prompt to send to the language model.",
          "placeholder": "Enter your prompt here...",
          "secret": false,
          "title": "Prompt",
          "type": "string"
        },
        "messages": {
          "advanced": false,
          "description": "List of messages in the conversation.",
          "items": {},
          "secret": false,
          "title": "Messages",
          "type": "array"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": true,
          "default": "gpt-4o",
          "description": "The language model to use for the conversation.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "max_tokens": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "secret": false,
          "title": "Max Tokens"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        }
      },
      "required": ["messages", "credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "response": {
          "advanced": false,
          "description": "The model's response to the conversation.",
          "secret": false,
          "title": "Response",
          "type": "string"
        },
        "prompt": {
          "advanced": false,
          "description": "The prompt sent to the language model.",
          "items": {},
          "secret": false,
          "title": "Prompt",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the API call failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["response", "prompt", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Advanced LLM call that takes a list of messages and sends them to the language model.",
    "categories": [
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "9c0b0450-d199-458b-a731-072189dd6593",
    "name": "AIListGeneratorBlock",
    "inputSchema": {
      "properties": {
        "focus": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The focus of the list to generate.",
          "placeholder": "The top 5 most interesting news stories in the data.",
          "secret": false,
          "title": "Focus"
        },
        "source_data": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The data to generate the list from.",
          "placeholder": "News Today: Humans land on Mars: Today humans landed on mars. -- AI wins Nobel Prize: AI wins Nobel Prize for solving world hunger. -- New AI Model: A new AI model has been released.",
          "secret": false,
          "title": "Source Data"
        },
        "model": {
          "enum": [
            "o3-mini",
            "o3-2025-04-16",
            "o1",
            "o1-preview",
            "o1-mini",
            "gpt-4.1-2025-04-14",
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-4-turbo",
            "gpt-3.5-turbo",
            "claude-3-7-sonnet-20250219",
            "claude-3-5-sonnet-latest",
            "claude-3-5-haiku-latest",
            "claude-3-haiku-20240307",
            "gemma2-9b-it",
            "llama-3.3-70b-versatile",
            "llama-3.1-8b-instant",
            "llama3-70b-8192",
            "llama3-8b-8192",
            "mixtral-8x7b-32768",
            "deepseek-r1-distill-llama-70b",
            "google/gemini-flash-1.5",
            "google/gemini-2.5-pro-preview-03-25",
            "x-ai/grok-beta",
            "mistralai/mistral-nemo",
            "cohere/command-r-08-2024",
            "cohere/command-r-plus-08-2024",
            "eva-unit-01/eva-qwen-2.5-32b",
            "deepseek/deepseek-chat",
            "perplexity/llama-3.1-sonar-large-128k-online",
            "qwen/qwq-32b-preview",
            "nousresearch/hermes-3-llama-3.1-405b",
            "nousresearch/hermes-3-llama-3.1-70b",
            "amazon/nova-lite-v1",
            "amazon/nova-micro-v1",
            "amazon/nova-pro-v1",
            "microsoft/wizardlm-2-8x22b",
            "gryphe/mythomax-l2-13b",
            "meta-llama/llama-4-scout",
            "meta-llama/llama-4-maverick"
          ],
          "title": "LLM Model",
          "type": "string",
          "advanced": true,
          "default": "gpt-4o",
          "description": "The language model to use for generating the list.",
          "secret": false
        },
        "credentials": {
          "credentials_provider": [
            "anthropic",
            "groq",
            "ollama",
            "openai",
            "open_router"
          ],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "enum": ["anthropic", "groq", "ollama", "openai", "open_router"],
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.ANTHROPIC: 'anthropic'>, <ProviderName.GROQ: 'groq'>, <ProviderName.OLLAMA: 'ollama'>, <ProviderName.OPENAI: 'openai'>, <ProviderName.OPEN_ROUTER: 'open_router'>], Literal['api_key']]",
          "type": "object",
          "description": "API key for the LLM provider.",
          "discriminator": "model",
          "discriminator_mapping": {
            "amazon/nova-lite-v1": "open_router",
            "amazon/nova-micro-v1": "open_router",
            "amazon/nova-pro-v1": "open_router",
            "claude-3-5-haiku-latest": "anthropic",
            "claude-3-5-sonnet-latest": "anthropic",
            "claude-3-7-sonnet-20250219": "anthropic",
            "claude-3-haiku-20240307": "anthropic",
            "cohere/command-r-08-2024": "open_router",
            "cohere/command-r-plus-08-2024": "open_router",
            "deepseek-r1-distill-llama-70b": "groq",
            "deepseek/deepseek-chat": "open_router",
            "dolphin-mistral:latest": "ollama",
            "eva-unit-01/eva-qwen-2.5-32b": "open_router",
            "gemma2-9b-it": "groq",
            "google/gemini-2.5-pro-preview-03-25": "open_router",
            "google/gemini-flash-1.5": "open_router",
            "gpt-3.5-turbo": "openai",
            "gpt-4-turbo": "openai",
            "gpt-4.1-2025-04-14": "openai",
            "gpt-4o": "openai",
            "gpt-4o-mini": "openai",
            "gryphe/mythomax-l2-13b": "open_router",
            "llama-3.1-8b-instant": "groq",
            "llama-3.3-70b-versatile": "groq",
            "llama3": "ollama",
            "llama3-70b-8192": "groq",
            "llama3-8b-8192": "groq",
            "llama3.1:405b": "ollama",
            "llama3.2": "ollama",
            "llama3.3": "ollama",
            "meta-llama/llama-4-maverick": "open_router",
            "meta-llama/llama-4-scout": "open_router",
            "microsoft/wizardlm-2-8x22b": "open_router",
            "mistralai/mistral-nemo": "open_router",
            "mixtral-8x7b-32768": "groq",
            "nousresearch/hermes-3-llama-3.1-405b": "open_router",
            "nousresearch/hermes-3-llama-3.1-70b": "open_router",
            "o1": "openai",
            "o1-mini": "openai",
            "o1-preview": "openai",
            "o3-2025-04-16": "openai",
            "o3-mini": "openai",
            "perplexity/llama-3.1-sonar-large-128k-online": "open_router",
            "qwen/qwq-32b-preview": "open_router",
            "x-ai/grok-beta": "open_router"
          }
        },
        "max_retries": {
          "advanced": true,
          "default": 3,
          "description": "Maximum number of retries for generating a valid list.",
          "maximum": 5,
          "minimum": 1,
          "secret": false,
          "title": "Max Retries",
          "type": "integer"
        },
        "max_tokens": {
          "advanced": true,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "The maximum number of tokens to generate in the chat completion.",
          "secret": false,
          "title": "Max Tokens"
        },
        "ollama_host": {
          "advanced": true,
          "default": "localhost:11434",
          "description": "Ollama host for local  models",
          "secret": false,
          "title": "Ollama Host",
          "type": "string"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "generated_list": {
          "advanced": false,
          "description": "The generated list.",
          "items": { "type": "string" },
          "secret": false,
          "title": "Generated List",
          "type": "array"
        },
        "list_item": {
          "advanced": false,
          "description": "Each individual item in the list.",
          "secret": false,
          "title": "List Item",
          "type": "string"
        },
        "prompt": {
          "advanced": false,
          "description": "The prompt sent to the language model.",
          "items": {},
          "secret": false,
          "title": "Prompt",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if the list generation failed.",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["generated_list", "list_item", "prompt", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Generate a Python list based on the given prompt using a Large Language Model (LLM).",
    "categories": [
      { "category": "TEXT", "description": "Block that processes text data." },
      {
        "category": "AI",
        "description": "Block that leverages AI to perform a task."
      }
    ],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7fcd3bcb-8e1b-4e69-903d-32d3d4a92158",
    "name": "AgentShortTextInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [
            { "format": "short-text", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Short text input.",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Short text result.",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for short text input (single-line).",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "90a56ffb-7024-4b2b-ab50-e26c5e5ab8ba",
    "name": "AgentLongTextInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [
            { "format": "long-text", "type": "string" },
            { "type": "null" }
          ],
          "default": null,
          "description": "Long text input (potentially multi-line).",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Long text result.",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for long text input (multi-line).",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "96dae2bb-97a2-41c2-bd2f-13a3b5a8ea98",
    "name": "AgentNumberInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [{ "type": "integer" }, { "type": "null" }],
          "default": null,
          "description": "Number input.",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Number result.",
          "secret": false,
          "title": "Result",
          "type": "integer"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for number input.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "7e198b09-4994-47db-8b4d-952d98241817",
    "name": "AgentDateInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [{ "format": "date", "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Date input (YYYY-MM-DD).",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Date result.",
          "format": "date",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for date input.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "2a1c757e-86cf-4c7e-aacf-060dc382e434",
    "name": "AgentTimeInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [{ "format": "time", "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Time input (HH:MM:SS).",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Time result.",
          "format": "time",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for time input.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "95ead23f-8283-4654-aef3-10c053b74a31",
    "name": "AgentFileInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [{ "format": "file", "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Path or reference to an uploaded file.",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "File reference/path result.",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for file upload input (string path for example).",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "655d6fdf-a334-421c-b733-520549c07cd1",
    "name": "AgentDropdownInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "Text selected from a dropdown.",
          "secret": false,
          "title": "Default Value"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": false,
          "description": "Possible values for the dropdown.",
          "items": {},
          "secret": false,
          "title": "Dropdown Options",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Selected dropdown value.",
          "secret": false,
          "title": "Result",
          "type": "string"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for dropdown text selection.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "cbf36ab5-df4a-43b6-8a7f-f7ed8652116e",
    "name": "AgentToggleInputBlock",
    "inputSchema": {
      "properties": {
        "name": {
          "advanced": false,
          "description": "The name of the input.",
          "secret": false,
          "title": "Name",
          "type": "string"
        },
        "value": {
          "advanced": false,
          "default": false,
          "description": "Boolean toggle input.",
          "secret": false,
          "title": "Default Value",
          "type": "boolean"
        },
        "title": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The title of the input.",
          "secret": false,
          "title": "Title"
        },
        "description": {
          "advanced": true,
          "anyOf": [{ "type": "string" }, { "type": "null" }],
          "default": null,
          "description": "The description of the input.",
          "secret": false,
          "title": "Description"
        },
        "placeholder_values": {
          "advanced": true,
          "description": "The placeholder values to be passed as input.",
          "hidden": true,
          "items": {},
          "secret": false,
          "title": "Placeholder Values",
          "type": "array"
        },
        "advanced": {
          "advanced": true,
          "default": false,
          "description": "Whether to show the input in the advanced section, if the field is not required.",
          "secret": false,
          "title": "Advanced",
          "type": "boolean"
        },
        "secret": {
          "advanced": true,
          "default": false,
          "description": "Whether the input should be treated as a secret.",
          "secret": false,
          "title": "Secret",
          "type": "boolean"
        }
      },
      "required": ["name"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "result": {
          "advanced": false,
          "description": "Boolean toggle result.",
          "secret": false,
          "title": "Result",
          "type": "boolean"
        }
      },
      "required": ["result"],
      "title": "Output",
      "type": "object"
    },
    "description": "Block for boolean toggle input.",
    "categories": [
      {
        "category": "BASIC",
        "description": "Block that performs basic operations."
      },
      {
        "category": "INPUT",
        "description": "Block that interacts with input of the graph."
      }
    ],
    "contributors": [],
    "staticOutput": true,
    "uiType": "Input"
  },
  {
    "id": "f8a12c8d-3e4b-4d5f-b6a7-8c9d0e1f2g3h",
    "name": "Slant3DSlicerBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "file_url": {
          "advanced": false,
          "description": "URL of the 3D model file to slice (STL)",
          "secret": false,
          "title": "File Url",
          "type": "string"
        }
      },
      "required": ["credentials", "file_url"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "message": {
          "advanced": false,
          "description": "Response message",
          "secret": false,
          "title": "Message",
          "type": "string"
        },
        "price": {
          "advanced": false,
          "description": "Calculated price for printing",
          "secret": false,
          "title": "Price",
          "type": "number"
        },
        "error": {
          "advanced": false,
          "description": "Error message if slicing failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["message", "price", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Slice a 3D model file and get pricing information",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "f73007d6-f48f-4aaf-9e6b-6883998a09b4",
    "name": "Slant3DCreateOrderBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "order_number": {
          "advanced": true,
          "description": "Your custom order number (or leave blank for a random one)",
          "secret": false,
          "title": "Order Number",
          "type": "string"
        },
        "customer": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "email": { "title": "Email", "type": "string" },
            "phone": { "title": "Phone", "type": "string" },
            "address": { "title": "Address", "type": "string" },
            "city": { "title": "City", "type": "string" },
            "state": { "title": "State", "type": "string" },
            "zip": { "title": "Zip", "type": "string" },
            "country_iso": {
              "default": "US",
              "title": "Country Iso",
              "type": "string"
            },
            "is_residential": {
              "default": true,
              "title": "Is Residential",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "email",
            "phone",
            "address",
            "city",
            "state",
            "zip"
          ],
          "title": "CustomerDetails",
          "type": "object",
          "advanced": false,
          "description": "Customer details for where to ship the item",
          "secret": false
        },
        "items": {
          "advanced": false,
          "description": "List of items to print",
          "items": {
            "properties": {
              "file_url": { "title": "File Url", "type": "string" },
              "quantity": { "title": "Quantity", "type": "string" },
              "color": {
                "enum": ["white", "black"],
                "title": "Color",
                "type": "string",
                "default": "white"
              },
              "profile": {
                "enum": ["PLA", "PETG"],
                "title": "Profile",
                "type": "string",
                "default": "PLA"
              }
            },
            "required": ["file_url", "quantity"],
            "title": "OrderItem",
            "type": "object"
          },
          "secret": false,
          "title": "Items",
          "type": "array"
        }
      },
      "required": ["credentials", "customer", "items"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "order_id": {
          "advanced": false,
          "description": "Slant3D order ID",
          "secret": false,
          "title": "Order Id",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if order failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["order_id", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Create a new print order",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "bf8823d6-b42a-48c7-b558-d7c117f2ae85",
    "name": "Slant3DEstimateOrderBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "order_number": {
          "advanced": true,
          "description": "Your custom order number (or leave blank for a random one)",
          "secret": false,
          "title": "Order Number",
          "type": "string"
        },
        "customer": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "email": { "title": "Email", "type": "string" },
            "phone": { "title": "Phone", "type": "string" },
            "address": { "title": "Address", "type": "string" },
            "city": { "title": "City", "type": "string" },
            "state": { "title": "State", "type": "string" },
            "zip": { "title": "Zip", "type": "string" },
            "country_iso": {
              "default": "US",
              "title": "Country Iso",
              "type": "string"
            },
            "is_residential": {
              "default": true,
              "title": "Is Residential",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "email",
            "phone",
            "address",
            "city",
            "state",
            "zip"
          ],
          "title": "CustomerDetails",
          "type": "object",
          "advanced": false,
          "description": "Customer details for where to ship the item",
          "secret": false
        },
        "items": {
          "advanced": false,
          "description": "List of items to print",
          "items": {
            "properties": {
              "file_url": { "title": "File Url", "type": "string" },
              "quantity": { "title": "Quantity", "type": "string" },
              "color": {
                "enum": ["white", "black"],
                "title": "Color",
                "type": "string",
                "default": "white"
              },
              "profile": {
                "enum": ["PLA", "PETG"],
                "title": "Profile",
                "type": "string",
                "default": "PLA"
              }
            },
            "required": ["file_url", "quantity"],
            "title": "OrderItem",
            "type": "object"
          },
          "secret": false,
          "title": "Items",
          "type": "array"
        }
      },
      "required": ["credentials", "customer", "items"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "total_price": {
          "advanced": false,
          "description": "Total price in USD",
          "secret": false,
          "title": "Total Price",
          "type": "number"
        },
        "shipping_cost": {
          "advanced": false,
          "description": "Shipping cost",
          "secret": false,
          "title": "Shipping Cost",
          "type": "number"
        },
        "printing_cost": {
          "advanced": false,
          "description": "Printing cost",
          "secret": false,
          "title": "Printing Cost",
          "type": "number"
        },
        "error": {
          "advanced": false,
          "description": "Error message if estimation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["total_price", "shipping_cost", "printing_cost", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get order cost estimate",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "00aae2a1-caf6-4a74-8175-39a0615d44e1",
    "name": "Slant3DEstimateShippingBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "order_number": {
          "advanced": true,
          "description": "Your custom order number (or leave blank for a random one)",
          "secret": false,
          "title": "Order Number",
          "type": "string"
        },
        "customer": {
          "properties": {
            "name": { "title": "Name", "type": "string" },
            "email": { "title": "Email", "type": "string" },
            "phone": { "title": "Phone", "type": "string" },
            "address": { "title": "Address", "type": "string" },
            "city": { "title": "City", "type": "string" },
            "state": { "title": "State", "type": "string" },
            "zip": { "title": "Zip", "type": "string" },
            "country_iso": {
              "default": "US",
              "title": "Country Iso",
              "type": "string"
            },
            "is_residential": {
              "default": true,
              "title": "Is Residential",
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "email",
            "phone",
            "address",
            "city",
            "state",
            "zip"
          ],
          "title": "CustomerDetails",
          "type": "object",
          "advanced": false,
          "description": "Customer details for where to ship the item",
          "secret": false
        },
        "items": {
          "advanced": false,
          "description": "List of items to print",
          "items": {
            "properties": {
              "file_url": { "title": "File Url", "type": "string" },
              "quantity": { "title": "Quantity", "type": "string" },
              "color": {
                "enum": ["white", "black"],
                "title": "Color",
                "type": "string",
                "default": "white"
              },
              "profile": {
                "enum": ["PLA", "PETG"],
                "title": "Profile",
                "type": "string",
                "default": "PLA"
              }
            },
            "required": ["file_url", "quantity"],
            "title": "OrderItem",
            "type": "object"
          },
          "secret": false,
          "title": "Items",
          "type": "array"
        }
      },
      "required": ["credentials", "customer", "items"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "shipping_cost": {
          "advanced": false,
          "description": "Estimated shipping cost",
          "secret": false,
          "title": "Shipping Cost",
          "type": "number"
        },
        "currency_code": {
          "advanced": false,
          "description": "Currency code (e.g., 'usd')",
          "secret": false,
          "title": "Currency Code",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if estimation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["shipping_cost", "currency_code", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get shipping cost estimate",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "dd7c0293-c5af-4551-ba3e-fc162fb1fb89",
    "name": "Slant3DTrackingBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "order_id": {
          "advanced": false,
          "description": "Slant3D order ID to track",
          "secret": false,
          "title": "Order Id",
          "type": "string"
        }
      },
      "required": ["credentials", "order_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Order status",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "tracking_numbers": {
          "advanced": false,
          "description": "List of tracking numbers",
          "items": { "type": "string" },
          "secret": false,
          "title": "Tracking Numbers",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if tracking failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "tracking_numbers", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Track order status and shipping",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "54de35e1-407f-450b-b5fa-3b5e2eba8185",
    "name": "Slant3DCancelOrderBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        },
        "order_id": {
          "advanced": false,
          "description": "Slant3D order ID to cancel",
          "secret": false,
          "title": "Order Id",
          "type": "string"
        }
      },
      "required": ["credentials", "order_id"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "status": {
          "advanced": false,
          "description": "Cancellation status message",
          "secret": false,
          "title": "Status",
          "type": "string"
        },
        "error": {
          "advanced": false,
          "description": "Error message if cancellation failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["status", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Cancel an existing order",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  },
  {
    "id": "7cc416f4-f305-4606-9b3b-452b8a81031c",
    "name": "Slant3DFilamentBlock",
    "inputSchema": {
      "properties": {
        "credentials": {
          "credentials_provider": ["slant3d"],
          "credentials_types": ["api_key"],
          "properties": {
            "id": { "title": "Id", "type": "string" },
            "title": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": null,
              "title": "Title"
            },
            "provider": {
              "const": "slant3d",
              "title": "Provider",
              "type": "string"
            },
            "type": { "const": "api_key", "title": "Type", "type": "string" }
          },
          "required": ["id", "provider", "type"],
          "title": "CredentialsMetaInput[Literal[<ProviderName.SLANT3D: 'slant3d'>], Literal['api_key']]",
          "type": "object",
          "description": "Slant3D API key for authentication"
        }
      },
      "required": ["credentials"],
      "title": "Input",
      "type": "object"
    },
    "outputSchema": {
      "properties": {
        "filaments": {
          "advanced": false,
          "description": "List of available filaments",
          "items": {
            "properties": {
              "filament": { "title": "Filament", "type": "string" },
              "hexColor": { "title": "Hexcolor", "type": "string" },
              "colorTag": { "title": "Colortag", "type": "string" },
              "profile": { "title": "Profile", "type": "string" }
            },
            "required": ["filament", "hexColor", "colorTag", "profile"],
            "title": "Filament",
            "type": "object"
          },
          "secret": false,
          "title": "Filaments",
          "type": "array"
        },
        "error": {
          "advanced": false,
          "description": "Error message if request failed",
          "secret": false,
          "title": "Error",
          "type": "string"
        }
      },
      "required": ["filaments", "error"],
      "title": "Output",
      "type": "object"
    },
    "description": "Get list of available filaments",
    "categories": [],
    "contributors": [],
    "staticOutput": false,
    "uiType": "Standard"
  }
]
